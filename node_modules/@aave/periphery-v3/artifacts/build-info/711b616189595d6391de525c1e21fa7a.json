{"id":"711b616189595d6391de525c1e21fa7a","_format":"hh-sol-build-info-1","solcVersion":"0.8.10","solcLongVersion":"0.8.10+commit.fc410830","input":{"language":"Solidity","sources":{"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Address.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n  /**\n   * @dev Returns true if `account` is a contract.\n   *\n   * [IMPORTANT]\n   * ====\n   * It is unsafe to assume that an address for which this function returns\n   * false is an externally-owned account (EOA) and not a contract.\n   *\n   * Among others, `isContract` will return false for the following\n   * types of addresses:\n   *\n   *  - an externally-owned account\n   *  - a contract in construction\n   *  - an address where a contract will be created\n   *  - an address where a contract lived, but was destroyed\n   * ====\n   */\n  function isContract(address account) internal view returns (bool) {\n    // This method relies on extcodesize, which returns 0 for contracts in\n    // construction, since the code is only stored at the end of the\n    // constructor execution.\n\n    uint256 size;\n    assembly {\n      size := extcodesize(account)\n    }\n    return size > 0;\n  }\n\n  /**\n   * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n   * `recipient`, forwarding all available gas and reverting on errors.\n   *\n   * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n   * of certain opcodes, possibly making contracts go over the 2300 gas limit\n   * imposed by `transfer`, making them unable to receive funds via\n   * `transfer`. {sendValue} removes this limitation.\n   *\n   * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n   *\n   * IMPORTANT: because control is transferred to `recipient`, care must be\n   * taken to not create reentrancy vulnerabilities. Consider using\n   * {ReentrancyGuard} or the\n   * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n   */\n  function sendValue(address payable recipient, uint256 amount) internal {\n    require(address(this).balance >= amount, 'Address: insufficient balance');\n\n    (bool success, ) = recipient.call{value: amount}('');\n    require(success, 'Address: unable to send value, recipient may have reverted');\n  }\n\n  /**\n   * @dev Performs a Solidity function call using a low level `call`. A\n   * plain `call` is an unsafe replacement for a function call: use this\n   * function instead.\n   *\n   * If `target` reverts with a revert reason, it is bubbled up by this\n   * function (like regular Solidity function calls).\n   *\n   * Returns the raw returned data. To convert to the expected return value,\n   * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n   *\n   * Requirements:\n   *\n   * - `target` must be a contract.\n   * - calling `target` with `data` must not revert.\n   *\n   * _Available since v3.1._\n   */\n  function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n    return functionCall(target, data, 'Address: low-level call failed');\n  }\n\n  /**\n   * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n   * `errorMessage` as a fallback revert reason when `target` reverts.\n   *\n   * _Available since v3.1._\n   */\n  function functionCall(\n    address target,\n    bytes memory data,\n    string memory errorMessage\n  ) internal returns (bytes memory) {\n    return functionCallWithValue(target, data, 0, errorMessage);\n  }\n\n  /**\n   * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n   * but also transferring `value` wei to `target`.\n   *\n   * Requirements:\n   *\n   * - the calling contract must have an ETH balance of at least `value`.\n   * - the called Solidity function must be `payable`.\n   *\n   * _Available since v3.1._\n   */\n  function functionCallWithValue(\n    address target,\n    bytes memory data,\n    uint256 value\n  ) internal returns (bytes memory) {\n    return functionCallWithValue(target, data, value, 'Address: low-level call with value failed');\n  }\n\n  /**\n   * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n   * with `errorMessage` as a fallback revert reason when `target` reverts.\n   *\n   * _Available since v3.1._\n   */\n  function functionCallWithValue(\n    address target,\n    bytes memory data,\n    uint256 value,\n    string memory errorMessage\n  ) internal returns (bytes memory) {\n    require(address(this).balance >= value, 'Address: insufficient balance for call');\n    require(isContract(target), 'Address: call to non-contract');\n\n    (bool success, bytes memory returndata) = target.call{value: value}(data);\n    return verifyCallResult(success, returndata, errorMessage);\n  }\n\n  /**\n   * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n   * but performing a static call.\n   *\n   * _Available since v3.3._\n   */\n  function functionStaticCall(\n    address target,\n    bytes memory data\n  ) internal view returns (bytes memory) {\n    return functionStaticCall(target, data, 'Address: low-level static call failed');\n  }\n\n  /**\n   * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n   * but performing a static call.\n   *\n   * _Available since v3.3._\n   */\n  function functionStaticCall(\n    address target,\n    bytes memory data,\n    string memory errorMessage\n  ) internal view returns (bytes memory) {\n    require(isContract(target), 'Address: static call to non-contract');\n\n    (bool success, bytes memory returndata) = target.staticcall(data);\n    return verifyCallResult(success, returndata, errorMessage);\n  }\n\n  /**\n   * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n   * but performing a delegate call.\n   *\n   * _Available since v3.4._\n   */\n  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n    return functionDelegateCall(target, data, 'Address: low-level delegate call failed');\n  }\n\n  /**\n   * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n   * but performing a delegate call.\n   *\n   * _Available since v3.4._\n   */\n  function functionDelegateCall(\n    address target,\n    bytes memory data,\n    string memory errorMessage\n  ) internal returns (bytes memory) {\n    require(isContract(target), 'Address: delegate call to non-contract');\n\n    (bool success, bytes memory returndata) = target.delegatecall(data);\n    return verifyCallResult(success, returndata, errorMessage);\n  }\n\n  /**\n   * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n   * revert reason using the provided one.\n   *\n   * _Available since v4.3._\n   */\n  function verifyCallResult(\n    bool success,\n    bytes memory returndata,\n    string memory errorMessage\n  ) internal pure returns (bytes memory) {\n    if (success) {\n      return returndata;\n    } else {\n      // Look for revert reason and bubble it up if present\n      if (returndata.length > 0) {\n        // The easiest way to bubble the revert reason is using memory via assembly\n\n        assembly {\n          let returndata_size := mload(returndata)\n          revert(add(32, returndata), returndata_size)\n        }\n      } else {\n        revert(errorMessage);\n      }\n    }\n  }\n}\n"},"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Context.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n  function _msgSender() internal view virtual returns (address payable) {\n    return payable(msg.sender);\n  }\n\n  function _msgData() internal view virtual returns (bytes memory) {\n    this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n    return msg.data;\n  }\n}\n"},"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport './Context.sol';\nimport './IERC20.sol';\nimport './SafeMath.sol';\nimport './Address.sol';\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin guidelines: functions revert instead\n * of returning `false` on failure. This behavior is nonetheless conventional\n * and does not conflict with the expectations of ERC20 applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20 {\n  using SafeMath for uint256;\n  using Address for address;\n\n  mapping(address => uint256) private _balances;\n\n  mapping(address => mapping(address => uint256)) private _allowances;\n\n  uint256 private _totalSupply;\n\n  string private _name;\n  string private _symbol;\n  uint8 private _decimals;\n\n  /**\n   * @dev Sets the values for {name} and {symbol}, initializes {decimals} with\n   * a default value of 18.\n   *\n   * To select a different value for {decimals}, use {_setupDecimals}.\n   *\n   * All three of these values are immutable: they can only be set once during\n   * construction.\n   */\n  constructor(string memory name, string memory symbol) {\n    _name = name;\n    _symbol = symbol;\n    _decimals = 18;\n  }\n\n  /**\n   * @dev Returns the name of the token.\n   */\n  function name() public view returns (string memory) {\n    return _name;\n  }\n\n  /**\n   * @dev Returns the symbol of the token, usually a shorter version of the\n   * name.\n   */\n  function symbol() public view returns (string memory) {\n    return _symbol;\n  }\n\n  /**\n   * @dev Returns the number of decimals used to get its user representation.\n   * For example, if `decimals` equals `2`, a balance of `505` tokens should\n   * be displayed to a user as `5,05` (`505 / 10 ** 2`).\n   *\n   * Tokens usually opt for a value of 18, imitating the relationship between\n   * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n   * called.\n   *\n   * NOTE: This information is only used for _display_ purposes: it in\n   * no way affects any of the arithmetic of the contract, including\n   * {IERC20-balanceOf} and {IERC20-transfer}.\n   */\n  function decimals() public view returns (uint8) {\n    return _decimals;\n  }\n\n  /**\n   * @dev See {IERC20-totalSupply}.\n   */\n  function totalSupply() public view override returns (uint256) {\n    return _totalSupply;\n  }\n\n  /**\n   * @dev See {IERC20-balanceOf}.\n   */\n  function balanceOf(address account) public view override returns (uint256) {\n    return _balances[account];\n  }\n\n  /**\n   * @dev See {IERC20-transfer}.\n   *\n   * Requirements:\n   *\n   * - `recipient` cannot be the zero address.\n   * - the caller must have a balance of at least `amount`.\n   */\n  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n    _transfer(_msgSender(), recipient, amount);\n    return true;\n  }\n\n  /**\n   * @dev See {IERC20-allowance}.\n   */\n  function allowance(\n    address owner,\n    address spender\n  ) public view virtual override returns (uint256) {\n    return _allowances[owner][spender];\n  }\n\n  /**\n   * @dev See {IERC20-approve}.\n   *\n   * Requirements:\n   *\n   * - `spender` cannot be the zero address.\n   */\n  function approve(address spender, uint256 amount) public virtual override returns (bool) {\n    _approve(_msgSender(), spender, amount);\n    return true;\n  }\n\n  /**\n   * @dev See {IERC20-transferFrom}.\n   *\n   * Emits an {Approval} event indicating the updated allowance. This is not\n   * required by the EIP. See the note at the beginning of {ERC20};\n   *\n   * Requirements:\n   * - `sender` and `recipient` cannot be the zero address.\n   * - `sender` must have a balance of at least `amount`.\n   * - the caller must have allowance for ``sender``'s tokens of at least\n   * `amount`.\n   */\n  function transferFrom(\n    address sender,\n    address recipient,\n    uint256 amount\n  ) public virtual override returns (bool) {\n    _transfer(sender, recipient, amount);\n    _approve(\n      sender,\n      _msgSender(),\n      _allowances[sender][_msgSender()].sub(amount, 'ERC20: transfer amount exceeds allowance')\n    );\n    return true;\n  }\n\n  /**\n   * @dev Atomically increases the allowance granted to `spender` by the caller.\n   *\n   * This is an alternative to {approve} that can be used as a mitigation for\n   * problems described in {IERC20-approve}.\n   *\n   * Emits an {Approval} event indicating the updated allowance.\n   *\n   * Requirements:\n   *\n   * - `spender` cannot be the zero address.\n   */\n  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\n    return true;\n  }\n\n  /**\n   * @dev Atomically decreases the allowance granted to `spender` by the caller.\n   *\n   * This is an alternative to {approve} that can be used as a mitigation for\n   * problems described in {IERC20-approve}.\n   *\n   * Emits an {Approval} event indicating the updated allowance.\n   *\n   * Requirements:\n   *\n   * - `spender` cannot be the zero address.\n   * - `spender` must have allowance for the caller of at least\n   * `subtractedValue`.\n   */\n  function decreaseAllowance(\n    address spender,\n    uint256 subtractedValue\n  ) public virtual returns (bool) {\n    _approve(\n      _msgSender(),\n      spender,\n      _allowances[_msgSender()][spender].sub(\n        subtractedValue,\n        'ERC20: decreased allowance below zero'\n      )\n    );\n    return true;\n  }\n\n  /**\n   * @dev Moves tokens `amount` from `sender` to `recipient`.\n   *\n   * This is internal function is equivalent to {transfer}, and can be used to\n   * e.g. implement automatic token fees, slashing mechanisms, etc.\n   *\n   * Emits a {Transfer} event.\n   *\n   * Requirements:\n   *\n   * - `sender` cannot be the zero address.\n   * - `recipient` cannot be the zero address.\n   * - `sender` must have a balance of at least `amount`.\n   */\n  function _transfer(address sender, address recipient, uint256 amount) internal virtual {\n    require(sender != address(0), 'ERC20: transfer from the zero address');\n    require(recipient != address(0), 'ERC20: transfer to the zero address');\n\n    _beforeTokenTransfer(sender, recipient, amount);\n\n    _balances[sender] = _balances[sender].sub(amount, 'ERC20: transfer amount exceeds balance');\n    _balances[recipient] = _balances[recipient].add(amount);\n    emit Transfer(sender, recipient, amount);\n  }\n\n  /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n   * the total supply.\n   *\n   * Emits a {Transfer} event with `from` set to the zero address.\n   *\n   * Requirements\n   *\n   * - `to` cannot be the zero address.\n   */\n  function _mint(address account, uint256 amount) internal virtual {\n    require(account != address(0), 'ERC20: mint to the zero address');\n\n    _beforeTokenTransfer(address(0), account, amount);\n\n    _totalSupply = _totalSupply.add(amount);\n    _balances[account] = _balances[account].add(amount);\n    emit Transfer(address(0), account, amount);\n  }\n\n  /**\n   * @dev Destroys `amount` tokens from `account`, reducing the\n   * total supply.\n   *\n   * Emits a {Transfer} event with `to` set to the zero address.\n   *\n   * Requirements\n   *\n   * - `account` cannot be the zero address.\n   * - `account` must have at least `amount` tokens.\n   */\n  function _burn(address account, uint256 amount) internal virtual {\n    require(account != address(0), 'ERC20: burn from the zero address');\n\n    _beforeTokenTransfer(account, address(0), amount);\n\n    _balances[account] = _balances[account].sub(amount, 'ERC20: burn amount exceeds balance');\n    _totalSupply = _totalSupply.sub(amount);\n    emit Transfer(account, address(0), amount);\n  }\n\n  /**\n   * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n   *\n   * This is internal function is equivalent to `approve`, and can be used to\n   * e.g. set automatic allowances for certain subsystems, etc.\n   *\n   * Emits an {Approval} event.\n   *\n   * Requirements:\n   *\n   * - `owner` cannot be the zero address.\n   * - `spender` cannot be the zero address.\n   */\n  function _approve(address owner, address spender, uint256 amount) internal virtual {\n    require(owner != address(0), 'ERC20: approve from the zero address');\n    require(spender != address(0), 'ERC20: approve to the zero address');\n\n    _allowances[owner][spender] = amount;\n    emit Approval(owner, spender, amount);\n  }\n\n  /**\n   * @dev Sets {decimals} to a value other than the default one of 18.\n   *\n   * WARNING: This function should only be called from the constructor. Most\n   * applications that interact with token contracts will not expect\n   * {decimals} to ever change, and may work incorrectly if it does.\n   */\n  function _setupDecimals(uint8 decimals_) internal {\n    _decimals = decimals_;\n  }\n\n  /**\n   * @dev Hook that is called before any transfer of tokens. This includes\n   * minting and burning.\n   *\n   * Calling conditions:\n   *\n   * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n   * will be to transferred to `to`.\n   * - when `from` is zero, `amount` tokens will be minted for `to`.\n   * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n   * - `from` and `to` are never both zero.\n   *\n   * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n   */\n  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n}\n"},"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/IERC20.sol":{"content":"// SPDX-License-Identifier: AGPL-3.0\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n  /**\n   * @dev Returns the amount of tokens in existence.\n   */\n  function totalSupply() external view returns (uint256);\n\n  /**\n   * @dev Returns the amount of tokens owned by `account`.\n   */\n  function balanceOf(address account) external view returns (uint256);\n\n  /**\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n  function transfer(address recipient, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Returns the remaining number of tokens that `spender` will be\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\n   * zero by default.\n   *\n   * This value changes when {approve} or {transferFrom} are called.\n   */\n  function allowance(address owner, address spender) external view returns (uint256);\n\n  /**\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\n   * that someone may use both the old and the new allowance by unfortunate\n   * transaction ordering. One possible solution to mitigate this race\n   * condition is to first reduce the spender's allowance to 0 and set the\n   * desired value afterwards:\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n   *\n   * Emits an {Approval} event.\n   */\n  function approve(address spender, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\n   * allowance mechanism. `amount` is then deducted from the caller's\n   * allowance.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\n   * another (`to`).\n   *\n   * Note that `value` may be zero.\n   */\n  event Transfer(address indexed from, address indexed to, uint256 value);\n\n  /**\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n   * a call to {approve}. `value` is the new allowance.\n   */\n  event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"},"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport './Context.sol';\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\ncontract Ownable is Context {\n  address private _owner;\n\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n  /**\n   * @dev Initializes the contract setting the deployer as the initial owner.\n   */\n  constructor() {\n    address msgSender = _msgSender();\n    _owner = msgSender;\n    emit OwnershipTransferred(address(0), msgSender);\n  }\n\n  /**\n   * @dev Returns the address of the current owner.\n   */\n  function owner() public view returns (address) {\n    return _owner;\n  }\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(_owner == _msgSender(), 'Ownable: caller is not the owner');\n    _;\n  }\n\n  /**\n   * @dev Leaves the contract without owner. It will not be possible to call\n   * `onlyOwner` functions anymore. Can only be called by the current owner.\n   *\n   * NOTE: Renouncing ownership will leave the contract without an owner,\n   * thereby removing any functionality that is only available to the owner.\n   */\n  function renounceOwnership() public virtual onlyOwner {\n    emit OwnershipTransferred(_owner, address(0));\n    _owner = address(0);\n  }\n\n  /**\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\n   * Can only be called by the current owner.\n   */\n  function transferOwnership(address newOwner) public virtual onlyOwner {\n    require(newOwner != address(0), 'Ownable: new owner is the zero address');\n    emit OwnershipTransferred(_owner, newOwner);\n    _owner = newOwner;\n  }\n}\n"},"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/SafeMath.sol":{"content":"// SPDX-License-Identifier: AGPL-3.0\npragma solidity ^0.8.0;\n\n/// @title Optimized overflow and underflow safe math operations\n/// @notice Contains methods for doing math operations that revert on overflow or underflow for minimal gas cost\nlibrary SafeMath {\n  /// @notice Returns x + y, reverts if sum overflows uint256\n  /// @param x The augend\n  /// @param y The addend\n  /// @return z The sum of x and y\n  function add(uint256 x, uint256 y) internal pure returns (uint256 z) {\n    unchecked {\n      require((z = x + y) >= x);\n    }\n  }\n\n  /// @notice Returns x - y, reverts if underflows\n  /// @param x The minuend\n  /// @param y The subtrahend\n  /// @return z The difference of x and y\n  function sub(uint256 x, uint256 y) internal pure returns (uint256 z) {\n    unchecked {\n      require((z = x - y) <= x);\n    }\n  }\n\n  /// @notice Returns x - y, reverts if underflows\n  /// @param x The minuend\n  /// @param y The subtrahend\n  /// @param message The error msg\n  /// @return z The difference of x and y\n  function sub(uint256 x, uint256 y, string memory message) internal pure returns (uint256 z) {\n    unchecked {\n      require((z = x - y) <= x, message);\n    }\n  }\n\n  /// @notice Returns x * y, reverts if overflows\n  /// @param x The multiplicand\n  /// @param y The multiplier\n  /// @return z The product of x and y\n  function mul(uint256 x, uint256 y) internal pure returns (uint256 z) {\n    unchecked {\n      require(x == 0 || (z = x * y) / x == y);\n    }\n  }\n\n  /// @notice Returns x / y, reverts if overflows - no specific check, solidity reverts on division by 0\n  /// @param x The numerator\n  /// @param y The denominator\n  /// @return z The product of x and y\n  function div(uint256 x, uint256 y) internal pure returns (uint256 z) {\n    return x / y;\n  }\n}\n"},"@aave/core-v3/contracts/dependencies/weth/WETH9.sol":{"content":"// Copyright (C) 2015, 2016, 2017 Dapphub\n\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.8.10;\n\ncontract WETH9 {\n  string public name = 'Wrapped Ether';\n  string public symbol = 'WETH';\n  uint8 public decimals = 18;\n\n  event Approval(address indexed src, address indexed guy, uint256 wad);\n  event Transfer(address indexed src, address indexed dst, uint256 wad);\n  event Deposit(address indexed dst, uint256 wad);\n  event Withdrawal(address indexed src, uint256 wad);\n\n  mapping(address => uint256) public balanceOf;\n  mapping(address => mapping(address => uint256)) public allowance;\n\n  receive() external payable {\n    deposit();\n  }\n\n  function deposit() public payable {\n    balanceOf[msg.sender] += msg.value;\n    emit Deposit(msg.sender, msg.value);\n  }\n\n  function withdraw(uint256 wad) public {\n    require(balanceOf[msg.sender] >= wad);\n    balanceOf[msg.sender] -= wad;\n    payable(msg.sender).transfer(wad);\n    emit Withdrawal(msg.sender, wad);\n  }\n\n  function totalSupply() public view returns (uint256) {\n    return address(this).balance;\n  }\n\n  function approve(address guy, uint256 wad) public returns (bool) {\n    allowance[msg.sender][guy] = wad;\n    emit Approval(msg.sender, guy, wad);\n    return true;\n  }\n\n  function transfer(address dst, uint256 wad) public returns (bool) {\n    return transferFrom(msg.sender, dst, wad);\n  }\n\n  function transferFrom(address src, address dst, uint256 wad) public returns (bool) {\n    require(balanceOf[src] >= wad);\n\n    if (src != msg.sender && allowance[src][msg.sender] != type(uint256).max) {\n      require(allowance[src][msg.sender] >= wad);\n      allowance[src][msg.sender] -= wad;\n    }\n\n    balanceOf[src] -= wad;\n    balanceOf[dst] += wad;\n\n    emit Transfer(src, dst, wad);\n\n    return true;\n  }\n}\n\n/*\n                    GNU GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Use with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n\n    <program>  Copyright (C) <year>  <name of author>\n    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\n<http://www.gnu.org/licenses/>.\n\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\n<http://www.gnu.org/philosophy/why-not-lgpl.html>.\n\n*/\n"},"@aave/core-v3/contracts/interfaces/IERC20WithPermit.sol":{"content":"// SPDX-License-Identifier: AGPL-3.0\npragma solidity ^0.8.0;\n\nimport {IERC20} from '../dependencies/openzeppelin/contracts/IERC20.sol';\n\n/**\n * @title IERC20WithPermit\n * @author Aave\n * @notice Interface for the permit function (EIP-2612)\n */\ninterface IERC20WithPermit is IERC20 {\n  /**\n   * @notice Allow passing a signed message to approve spending\n   * @dev implements the permit function as for\n   * https://github.com/ethereum/EIPs/blob/8a34d644aacf0f9f8f00815307fd7dd5da07655f/EIPS/eip-2612.md\n   * @param owner The owner of the funds\n   * @param spender The spender\n   * @param value The amount\n   * @param deadline The deadline timestamp, type(uint256).max for max deadline\n   * @param v Signature param\n   * @param s Signature param\n   * @param r Signature param\n   */\n  function permit(\n    address owner,\n    address spender,\n    uint256 value,\n    uint256 deadline,\n    uint8 v,\n    bytes32 r,\n    bytes32 s\n  ) external;\n}\n"},"contracts/mocks/testnet-helpers/Faucet.sol":{"content":"// SPDX-License-Identifier: BUSL-1.1\npragma solidity ^0.8.0;\n\nimport {Ownable} from '@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol';\nimport {TestnetERC20} from './TestnetERC20.sol';\nimport {IFaucet} from './IFaucet.sol';\n\n/**\n * @title Faucet\n * @dev Ownable Faucet Contract\n */\ncontract Faucet is IFaucet, Ownable {\n  uint256 internal maximumMintAmount;\n\n  // Mapping to control mint of assets (allowed by default)\n  mapping(address => bool) internal _nonMintable;\n\n  // If _permissioned is enabled, then only owner can mint Testnet ERC20 tokens\n  // If disabled, anyone can call mint at the faucet, for PoC environments\n  bool internal _permissioned;\n\n  constructor(address owner, bool permissioned, uint256 maxMinAmount) {\n    require(owner != address(0));\n    transferOwnership(owner);\n    _permissioned = permissioned;\n    maximumMintAmount = maxMinAmount;\n  }\n\n  /**\n   * @dev Function modifier, if _permissioned is enabled then msg.sender is required to be the owner\n   */\n  modifier onlyOwnerIfPermissioned() {\n    if (_permissioned == true) {\n      require(owner() == _msgSender(), 'Ownable: caller is not the owner');\n    }\n    _;\n  }\n\n  /// @inheritdoc IFaucet\n  function mint(\n    address token,\n    address to,\n    uint256 amount\n  ) external override onlyOwnerIfPermissioned returns (uint256) {\n    require(!_nonMintable[token], 'Error: not mintable');\n    require(\n      amount <= maximumMintAmount * (10 ** TestnetERC20(token).decimals()),\n      'Error: Mint limit transaction exceeded'\n    );\n\n    TestnetERC20(token).mint(to, amount);\n    return amount;\n  }\n\n  /// @inheritdoc IFaucet\n  function setPermissioned(bool permissioned) external override onlyOwner {\n    _permissioned = permissioned;\n  }\n\n  /// @inheritdoc IFaucet\n  function isPermissioned() external view override returns (bool) {\n    return _permissioned;\n  }\n\n  /// @inheritdoc IFaucet\n  function setMintable(address asset, bool active) external override onlyOwner {\n    _nonMintable[asset] = !active;\n  }\n\n  /// @inheritdoc IFaucet\n  function isMintable(address asset) external view override returns (bool) {\n    return !_nonMintable[asset];\n  }\n\n  /// @inheritdoc IFaucet\n  function transferOwnershipOfChild(\n    address[] calldata childContracts,\n    address newOwner\n  ) external override onlyOwner {\n    for (uint256 i = 0; i < childContracts.length; i++) {\n      Ownable(childContracts[i]).transferOwnership(newOwner);\n    }\n  }\n\n  /// @inheritdoc IFaucet\n  function setProtectedOfChild(\n    address[] calldata childContracts,\n    bool state\n  ) external override onlyOwner {\n    for (uint256 i = 0; i < childContracts.length; i++) {\n      TestnetERC20(childContracts[i]).setProtected(state);\n    }\n  }\n\n\n  /// @inheritdoc IFaucet\n  function setMaximumMintAmount(uint256 newMaxMintAmount) external override onlyOwner {\n    maximumMintAmount = newMaxMintAmount;\n  }\n\n  /// @inheritdoc IFaucet\n  function getMaximumMintAmount() external view override returns (uint256) {\n    return maximumMintAmount;\n  }\n}\n"},"contracts/mocks/testnet-helpers/IFaucet.sol":{"content":"// SPDX-License-Identifier: BUSL-1.1\npragma solidity ^0.8.0;\n\ninterface IFaucet {\n  /**\n   * @notice Function to mint Testnet tokens to the destination address\n   * @param token The address of the token to perform the mint\n   * @param to The address to send the minted tokens\n   * @param amount The amount of tokens to mint\n   * @return The amount minted\n   **/\n  function mint(address token, address to, uint256 amount) external returns (uint256);\n\n  /**\n   * @notice Enable or disable the need of authentication to call `mint` function\n   * @param value If true, ask for authentication at `mint` function, if false, disable the authentication\n   */\n  function setPermissioned(bool value) external;\n\n  /**\n   * @notice Getter to determine if permissioned mode is enabled or disabled\n   * @return Returns a boolean, if true the mode is enabled, if false is disabled\n   */\n  function isPermissioned() external view returns (bool);\n\n  /**\n   * @notice Enable or disable the minting of the faucet asset\n   * @param asset The address of the asset\n   * @param active True to enable, false to disable\n   */\n  function setMintable(address asset, bool active) external;\n\n  /**\n   * @notice Returns whether the asset is mintable\n   * @param asset The address of the asset\n   * @return True if the asset is mintable, false otherwise\n   */\n  function isMintable(address asset) external view returns (bool);\n\n  /**\n   * @notice Transfer the ownership of child contracts\n   * @param childContracts A list of child contract addresses\n   * @param newOwner The address of the new owner\n   */\n  function transferOwnershipOfChild(address[] calldata childContracts, address newOwner) external;\n\n  /**\n   * @notice Updates protection of minting feature of child token contracts\n   * @param childContracts A list of child token contract addresses\n   * @param state True if tokens are only mintable through Faucet, false otherwise\n   */\n  function setProtectedOfChild(address[] calldata childContracts, bool state) external;\n\n  /**\n   * @notice Updates the maximum amount of tokens per mint allowed\n   * @param newMaxMintAmount The new value of maximum amount of tokens per mint (whole tokens)\n   */\n  function setMaximumMintAmount(uint256 newMaxMintAmount) external;\n\n  /**\n   * @notice Returns the maximum amount of tokens per mint allowed\n   * @return The maximum amount of tokens per mint allowed (whole tokens)\n   */\n  function getMaximumMintAmount() external view returns (uint256);\n}\n"},"contracts/mocks/testnet-helpers/TestnetERC20.sol":{"content":"// SPDX-License-Identifier: BUSL-1.1\npragma solidity ^0.8.0;\n\nimport {Ownable} from '@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol';\nimport {ERC20} from '@aave/core-v3/contracts/dependencies/openzeppelin/contracts/ERC20.sol';\nimport {IERC20WithPermit} from '@aave/core-v3/contracts/interfaces/IERC20WithPermit.sol';\n\n/**\n * @title TestnetERC20\n * @dev ERC20 minting logic\n */\ncontract TestnetERC20 is IERC20WithPermit, ERC20, Ownable {\n  bytes public constant EIP712_REVISION = bytes('1');\n  bytes32 internal constant EIP712_DOMAIN =\n    keccak256('EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)');\n  bytes32 public constant PERMIT_TYPEHASH =\n    keccak256('Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)');\n\n  // Map of address nonces (address => nonce)\n  mapping(address => uint256) internal _nonces;\n\n  bytes32 public DOMAIN_SEPARATOR;\n\n  bool internal _protected;\n\n  /**\n   * @dev Function modifier, if _protected is enabled then msg.sender is required to be the owner\n   */\n  modifier onlyOwnerIfProtected() {\n    if (_protected == true) {\n      require(owner() == _msgSender(), 'Ownable: caller is not the owner');\n    }\n    _;\n  }\n\n  constructor(\n    string memory name,\n    string memory symbol,\n    uint8 decimals,\n    address owner\n  ) ERC20(name, symbol) {\n    uint256 chainId = block.chainid;\n\n    DOMAIN_SEPARATOR = keccak256(\n      abi.encode(\n        EIP712_DOMAIN,\n        keccak256(bytes(name)),\n        keccak256(EIP712_REVISION),\n        chainId,\n        address(this)\n      )\n    );\n    _setupDecimals(decimals);\n    require(owner != address(0));\n    transferOwnership(owner);\n    _protected = true;\n  }\n\n  /// @inheritdoc IERC20WithPermit\n  function permit(\n    address owner,\n    address spender,\n    uint256 value,\n    uint256 deadline,\n    uint8 v,\n    bytes32 r,\n    bytes32 s\n  ) external override {\n    require(owner != address(0), 'INVALID_OWNER');\n    //solium-disable-next-line\n    require(block.timestamp <= deadline, 'INVALID_EXPIRATION');\n    uint256 currentValidNonce = _nonces[owner];\n    bytes32 digest = keccak256(\n      abi.encodePacked(\n        '\\x19\\x01',\n        DOMAIN_SEPARATOR,\n        keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, currentValidNonce, deadline))\n      )\n    );\n    require(owner == ecrecover(digest, v, r, s), 'INVALID_SIGNATURE');\n    _nonces[owner] = currentValidNonce + 1;\n    _approve(owner, spender, value);\n  }\n\n  /**\n   * @dev Function to mint tokens\n   * @param value The amount of tokens to mint.\n   * @return A boolean that indicates if the operation was successful.\n   */\n  function mint(uint256 value) public virtual onlyOwnerIfProtected returns (bool) {\n    _mint(_msgSender(), value);\n    return true;\n  }\n\n  /**\n   * @dev Function to mint tokens to address\n   * @param account The account to mint tokens.\n   * @param value The amount of tokens to mint.\n   * @return A boolean that indicates if the operation was successful.\n   */\n  function mint(address account, uint256 value) public virtual onlyOwnerIfProtected returns (bool) {\n    _mint(account, value);\n    return true;\n  }\n\n  function nonces(address owner) public view returns (uint256) {\n    return _nonces[owner];\n  }\n\n  function setProtected(bool state) public onlyOwner {\n    _protected = state;\n  }\n\n  function isProtected() public view returns (bool) {\n    return _protected;\n  }\n}\n"},"contracts/mocks/WETH9Mock.sol":{"content":"// SPDX-License-Identifier: BUSL-1.1\npragma solidity ^0.8.0;\n\nimport {WETH9} from '@aave/core-v3/contracts/dependencies/weth/WETH9.sol';\nimport {Ownable} from '@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol';\n\ncontract WETH9Mock is WETH9, Ownable {\n  bool internal _protected;\n\n  /**\n   * @dev Function modifier, if _protected is enabled then msg.sender is required to be the owner\n   */\n  modifier onlyOwnerIfProtected() {\n    if (_protected == true) {\n      require(owner() == _msgSender(), 'Ownable: caller is not the owner');\n    }\n    _;\n  }\n\n  constructor(string memory mockName, string memory mockSymbol, address owner) {\n    name = mockName;\n    symbol = mockSymbol;\n\n    transferOwnership(owner);\n    _protected = true;\n  }\n\n  function mint(address account, uint256 value) public onlyOwnerIfProtected returns (bool) {\n    balanceOf[account] += value;\n    emit Transfer(address(0), account, value);\n    return true;\n  }\n\n  function setProtected(bool state) public onlyOwner {\n    _protected = state;\n  }\n\n  function isProtected() public view returns (bool) {\n    return _protected;\n  }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":25000},"evmVersion":"london","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"errors":[{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> @aave/core-v3/contracts/dependencies/weth/WETH9.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"@aave/core-v3/contracts/dependencies/weth/WETH9.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"2519","formattedMessage":"Warning: This declaration shadows an existing declaration.\n  --> @aave/core-v3/contracts/dependencies/openzeppelin/contracts/ERC20.sol:57:15:\n   |\n57 |   constructor(string memory name, string memory symbol) {\n   |               ^^^^^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n  --> @aave/core-v3/contracts/dependencies/openzeppelin/contracts/ERC20.sol:66:3:\n   |\n66 |   function name() public view returns (string memory) {\n   |   ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"This declaration shadows an existing declaration.","secondarySourceLocations":[{"end":2198,"file":"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/ERC20.sol","message":"The shadowed declaration is here:","start":2123}],"severity":"warning","sourceLocation":{"end":1977,"file":"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/ERC20.sol","start":1959},"type":"Warning"},{"component":"general","errorCode":"2519","formattedMessage":"Warning: This declaration shadows an existing declaration.\n  --> @aave/core-v3/contracts/dependencies/openzeppelin/contracts/ERC20.sol:57:35:\n   |\n57 |   constructor(string memory name, string memory symbol) {\n   |                                   ^^^^^^^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n  --> @aave/core-v3/contracts/dependencies/openzeppelin/contracts/ERC20.sol:74:3:\n   |\n74 |   function symbol() public view returns (string memory) {\n   |   ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"This declaration shadows an existing declaration.","secondarySourceLocations":[{"end":2380,"file":"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/ERC20.sol","message":"The shadowed declaration is here:","start":2301}],"severity":"warning","sourceLocation":{"end":1999,"file":"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/ERC20.sol","start":1979},"type":"Warning"}],"sources":{"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Address.sol":{"ast":{"absolutePath":"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Address.sol","exportedSymbols":{"Address":[296]},"id":297,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:0"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"111:67:0","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":296,"linearizedBaseContracts":[296],"name":"Address","nameLocation":"187:7:0","nodeType":"ContractDefinition","nodes":[{"body":{"id":18,"nodeType":"Block","src":"801:275:0","statements":[{"assignments":[11],"declarations":[{"constant":false,"id":11,"mutability":"mutable","name":"size","nameLocation":"990:4:0","nodeType":"VariableDeclaration","scope":18,"src":"982:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10,"name":"uint256","nodeType":"ElementaryTypeName","src":"982:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":12,"nodeType":"VariableDeclarationStatement","src":"982:12:0"},{"AST":{"nodeType":"YulBlock","src":"1009:42:0","statements":[{"nodeType":"YulAssignment","src":"1017:28:0","value":{"arguments":[{"name":"account","nodeType":"YulIdentifier","src":"1037:7:0"}],"functionName":{"name":"extcodesize","nodeType":"YulIdentifier","src":"1025:11:0"},"nodeType":"YulFunctionCall","src":"1025:20:0"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1017:4:0"}]}]},"evmVersion":"london","externalReferences":[{"declaration":5,"isOffset":false,"isSlot":false,"src":"1037:7:0","valueSize":1},{"declaration":11,"isOffset":false,"isSlot":false,"src":"1017:4:0","valueSize":1}],"id":13,"nodeType":"InlineAssembly","src":"1000:51:0"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":16,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":14,"name":"size","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11,"src":"1063:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":15,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1070:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1063:8:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":9,"id":17,"nodeType":"Return","src":"1056:15:0"}]},"documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"199:533:0","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="},"id":19,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"744:10:0","nodeType":"FunctionDefinition","parameters":{"id":6,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5,"mutability":"mutable","name":"account","nameLocation":"763:7:0","nodeType":"VariableDeclaration","scope":19,"src":"755:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4,"name":"address","nodeType":"ElementaryTypeName","src":"755:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"754:17:0"},"returnParameters":{"id":9,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19,"src":"795:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7,"name":"bool","nodeType":"ElementaryTypeName","src":"795:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"794:6:0"},"scope":296,"src":"735:341:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":52,"nodeType":"Block","src":"2030:227:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":34,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":30,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2052:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$296","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$296","typeString":"library Address"}],"id":29,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2044:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":28,"name":"address","nodeType":"ElementaryTypeName","src":"2044:7:0","typeDescriptions":{}}},"id":31,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2044:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":32,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"2044:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":33,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"2069:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2044:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":35,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2077:31:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":27,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2036:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":36,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2036:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":37,"nodeType":"ExpressionStatement","src":"2036:73:0"},{"assignments":[39,null],"declarations":[{"constant":false,"id":39,"mutability":"mutable","name":"success","nameLocation":"2122:7:0","nodeType":"VariableDeclaration","scope":52,"src":"2117:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":38,"name":"bool","nodeType":"ElementaryTypeName","src":"2117:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":46,"initialValue":{"arguments":[{"hexValue":"","id":44,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2165:2:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":40,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22,"src":"2135:9:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"2135:14:0","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":43,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":42,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"2157:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2135:29:0","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":45,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2135:33:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2116:52:0"},{"expression":{"arguments":[{"id":48,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":39,"src":"2182:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":49,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2191:60:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":47,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2174:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":50,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2174:78:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":51,"nodeType":"ExpressionStatement","src":"2174:78:0"}]},"documentation":{"id":20,"nodeType":"StructuredDocumentation","src":"1080:876:0","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":53,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"1968:9:0","nodeType":"FunctionDefinition","parameters":{"id":25,"nodeType":"ParameterList","parameters":[{"constant":false,"id":22,"mutability":"mutable","name":"recipient","nameLocation":"1994:9:0","nodeType":"VariableDeclaration","scope":53,"src":"1978:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1978:15:0","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":24,"mutability":"mutable","name":"amount","nameLocation":"2013:6:0","nodeType":"VariableDeclaration","scope":53,"src":"2005:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":23,"name":"uint256","nodeType":"ElementaryTypeName","src":"2005:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1977:43:0"},"returnParameters":{"id":26,"nodeType":"ParameterList","parameters":[],"src":"2030:0:0"},"scope":296,"src":"1959:298:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":69,"nodeType":"Block","src":"3050:78:0","statements":[{"expression":{"arguments":[{"id":64,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"3076:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":65,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":58,"src":"3084:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":66,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3090:32:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":63,"name":"functionCall","nodeType":"Identifier","overloadedDeclarations":[70,90],"referencedDeclaration":90,"src":"3063:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":67,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3063:60:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":62,"id":68,"nodeType":"Return","src":"3056:67:0"}]},"documentation":{"id":54,"nodeType":"StructuredDocumentation","src":"2261:697:0","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":70,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"2970:12:0","nodeType":"FunctionDefinition","parameters":{"id":59,"nodeType":"ParameterList","parameters":[{"constant":false,"id":56,"mutability":"mutable","name":"target","nameLocation":"2991:6:0","nodeType":"VariableDeclaration","scope":70,"src":"2983:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":55,"name":"address","nodeType":"ElementaryTypeName","src":"2983:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":58,"mutability":"mutable","name":"data","nameLocation":"3012:4:0","nodeType":"VariableDeclaration","scope":70,"src":"2999:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":57,"name":"bytes","nodeType":"ElementaryTypeName","src":"2999:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2982:35:0"},"returnParameters":{"id":62,"nodeType":"ParameterList","parameters":[{"constant":false,"id":61,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":70,"src":"3036:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":60,"name":"bytes","nodeType":"ElementaryTypeName","src":"3036:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3035:14:0"},"scope":296,"src":"2961:167:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":89,"nodeType":"Block","src":"3469:70:0","statements":[{"expression":{"arguments":[{"id":83,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73,"src":"3504:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":84,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":75,"src":"3512:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":85,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3518:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":86,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":77,"src":"3521:12:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":82,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[110,160],"referencedDeclaration":160,"src":"3482:21:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":87,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3482:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":81,"id":88,"nodeType":"Return","src":"3475:59:0"}]},"documentation":{"id":71,"nodeType":"StructuredDocumentation","src":"3132:201:0","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":90,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3345:12:0","nodeType":"FunctionDefinition","parameters":{"id":78,"nodeType":"ParameterList","parameters":[{"constant":false,"id":73,"mutability":"mutable","name":"target","nameLocation":"3371:6:0","nodeType":"VariableDeclaration","scope":90,"src":"3363:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":72,"name":"address","nodeType":"ElementaryTypeName","src":"3363:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":75,"mutability":"mutable","name":"data","nameLocation":"3396:4:0","nodeType":"VariableDeclaration","scope":90,"src":"3383:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":74,"name":"bytes","nodeType":"ElementaryTypeName","src":"3383:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":77,"mutability":"mutable","name":"errorMessage","nameLocation":"3420:12:0","nodeType":"VariableDeclaration","scope":90,"src":"3406:26:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":76,"name":"string","nodeType":"ElementaryTypeName","src":"3406:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3357:79:0"},"returnParameters":{"id":81,"nodeType":"ParameterList","parameters":[{"constant":false,"id":80,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":90,"src":"3455:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":79,"name":"bytes","nodeType":"ElementaryTypeName","src":"3455:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3454:14:0"},"scope":296,"src":"3336:203:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":109,"nodeType":"Block","src":"4006:105:0","statements":[{"expression":{"arguments":[{"id":103,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":93,"src":"4041:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":104,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":95,"src":"4049:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":105,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"4055:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4062:43:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":102,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[110,160],"referencedDeclaration":160,"src":"4019:21:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4019:87:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":101,"id":108,"nodeType":"Return","src":"4012:94:0"}]},"documentation":{"id":91,"nodeType":"StructuredDocumentation","src":"3543:331:0","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":110,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"3886:21:0","nodeType":"FunctionDefinition","parameters":{"id":98,"nodeType":"ParameterList","parameters":[{"constant":false,"id":93,"mutability":"mutable","name":"target","nameLocation":"3921:6:0","nodeType":"VariableDeclaration","scope":110,"src":"3913:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":92,"name":"address","nodeType":"ElementaryTypeName","src":"3913:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":95,"mutability":"mutable","name":"data","nameLocation":"3946:4:0","nodeType":"VariableDeclaration","scope":110,"src":"3933:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":94,"name":"bytes","nodeType":"ElementaryTypeName","src":"3933:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":97,"mutability":"mutable","name":"value","nameLocation":"3964:5:0","nodeType":"VariableDeclaration","scope":110,"src":"3956:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":96,"name":"uint256","nodeType":"ElementaryTypeName","src":"3956:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3907:66:0"},"returnParameters":{"id":101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":110,"src":"3992:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":99,"name":"bytes","nodeType":"ElementaryTypeName","src":"3992:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3991:14:0"},"scope":296,"src":"3877:234:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":159,"nodeType":"Block","src":"4506:302:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":127,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4528:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$296","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$296","typeString":"library Address"}],"id":126,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4520:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":125,"name":"address","nodeType":"ElementaryTypeName","src":"4520:7:0","typeDescriptions":{}}},"id":128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4520:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"4520:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":130,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"4545:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4520:30:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4552:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":124,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4512:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4512:81:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":134,"nodeType":"ExpressionStatement","src":"4512:81:0"},{"expression":{"arguments":[{"arguments":[{"id":137,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":113,"src":"4618:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":136,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":19,"src":"4607:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4607:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4627:31:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":135,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4599:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4599:60:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":141,"nodeType":"ExpressionStatement","src":"4599:60:0"},{"assignments":[143,145],"declarations":[{"constant":false,"id":143,"mutability":"mutable","name":"success","nameLocation":"4672:7:0","nodeType":"VariableDeclaration","scope":159,"src":"4667:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":142,"name":"bool","nodeType":"ElementaryTypeName","src":"4667:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":145,"mutability":"mutable","name":"returndata","nameLocation":"4694:10:0","nodeType":"VariableDeclaration","scope":159,"src":"4681:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":144,"name":"bytes","nodeType":"ElementaryTypeName","src":"4681:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":152,"initialValue":{"arguments":[{"id":150,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":115,"src":"4734:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":146,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":113,"src":"4708:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"4708:11:0","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":148,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"4727:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"4708:25:0","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4708:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4666:73:0"},{"expression":{"arguments":[{"id":154,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":143,"src":"4769:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":155,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":145,"src":"4778:10:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":156,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":119,"src":"4790:12:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":153,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"4752:16:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4752:51:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":123,"id":158,"nodeType":"Return","src":"4745:58:0"}]},"documentation":{"id":111,"nodeType":"StructuredDocumentation","src":"4115:227:0","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":160,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4354:21:0","nodeType":"FunctionDefinition","parameters":{"id":120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":113,"mutability":"mutable","name":"target","nameLocation":"4389:6:0","nodeType":"VariableDeclaration","scope":160,"src":"4381:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":112,"name":"address","nodeType":"ElementaryTypeName","src":"4381:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":115,"mutability":"mutable","name":"data","nameLocation":"4414:4:0","nodeType":"VariableDeclaration","scope":160,"src":"4401:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":114,"name":"bytes","nodeType":"ElementaryTypeName","src":"4401:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":117,"mutability":"mutable","name":"value","nameLocation":"4432:5:0","nodeType":"VariableDeclaration","scope":160,"src":"4424:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":116,"name":"uint256","nodeType":"ElementaryTypeName","src":"4424:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":119,"mutability":"mutable","name":"errorMessage","nameLocation":"4457:12:0","nodeType":"VariableDeclaration","scope":160,"src":"4443:26:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":118,"name":"string","nodeType":"ElementaryTypeName","src":"4443:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4375:98:0"},"returnParameters":{"id":123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":122,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":160,"src":"4492:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":121,"name":"bytes","nodeType":"ElementaryTypeName","src":"4492:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4491:14:0"},"scope":296,"src":"4345:463:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":176,"nodeType":"Block","src":"5083:91:0","statements":[{"expression":{"arguments":[{"id":171,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":163,"src":"5115:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":172,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":165,"src":"5123:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5129:39:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":170,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[177,212],"referencedDeclaration":212,"src":"5096:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5096:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":169,"id":175,"nodeType":"Return","src":"5089:80:0"}]},"documentation":{"id":161,"nodeType":"StructuredDocumentation","src":"4812:156:0","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":177,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"4980:18:0","nodeType":"FunctionDefinition","parameters":{"id":166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":163,"mutability":"mutable","name":"target","nameLocation":"5012:6:0","nodeType":"VariableDeclaration","scope":177,"src":"5004:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":162,"name":"address","nodeType":"ElementaryTypeName","src":"5004:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":165,"mutability":"mutable","name":"data","nameLocation":"5037:4:0","nodeType":"VariableDeclaration","scope":177,"src":"5024:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":164,"name":"bytes","nodeType":"ElementaryTypeName","src":"5024:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4998:47:0"},"returnParameters":{"id":169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":168,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":177,"src":"5069:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":167,"name":"bytes","nodeType":"ElementaryTypeName","src":"5069:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5068:14:0"},"scope":296,"src":"4971:203:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":211,"nodeType":"Block","src":"5488:214:0","statements":[{"expression":{"arguments":[{"arguments":[{"id":191,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"5513:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":190,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":19,"src":"5502:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5502:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374","id":193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5522:38:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9","typeString":"literal_string \"Address: static call to non-contract\""},"value":"Address: static call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9","typeString":"literal_string \"Address: static call to non-contract\""}],"id":189,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5494:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5494:67:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":195,"nodeType":"ExpressionStatement","src":"5494:67:0"},{"assignments":[197,199],"declarations":[{"constant":false,"id":197,"mutability":"mutable","name":"success","nameLocation":"5574:7:0","nodeType":"VariableDeclaration","scope":211,"src":"5569:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":196,"name":"bool","nodeType":"ElementaryTypeName","src":"5569:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":199,"mutability":"mutable","name":"returndata","nameLocation":"5596:10:0","nodeType":"VariableDeclaration","scope":211,"src":"5583:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":198,"name":"bytes","nodeType":"ElementaryTypeName","src":"5583:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":204,"initialValue":{"arguments":[{"id":202,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":182,"src":"5628:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":200,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"5610:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","src":"5610:17:0","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5610:23:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5568:65:0"},{"expression":{"arguments":[{"id":206,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"5663:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":207,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":199,"src":"5672:10:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":208,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"5684:12:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":205,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"5646:16:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5646:51:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":188,"id":210,"nodeType":"Return","src":"5639:58:0"}]},"documentation":{"id":178,"nodeType":"StructuredDocumentation","src":"5178:163:0","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":212,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5353:18:0","nodeType":"FunctionDefinition","parameters":{"id":185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":180,"mutability":"mutable","name":"target","nameLocation":"5385:6:0","nodeType":"VariableDeclaration","scope":212,"src":"5377:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":179,"name":"address","nodeType":"ElementaryTypeName","src":"5377:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":182,"mutability":"mutable","name":"data","nameLocation":"5410:4:0","nodeType":"VariableDeclaration","scope":212,"src":"5397:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":181,"name":"bytes","nodeType":"ElementaryTypeName","src":"5397:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":184,"mutability":"mutable","name":"errorMessage","nameLocation":"5434:12:0","nodeType":"VariableDeclaration","scope":212,"src":"5420:26:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":183,"name":"string","nodeType":"ElementaryTypeName","src":"5420:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5371:79:0"},"returnParameters":{"id":188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":187,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":212,"src":"5474:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":186,"name":"bytes","nodeType":"ElementaryTypeName","src":"5474:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5473:14:0"},"scope":296,"src":"5344:358:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":228,"nodeType":"Block","src":"5964:95:0","statements":[{"expression":{"arguments":[{"id":223,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":215,"src":"5998:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":224,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":217,"src":"6006:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6012:41:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":222,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[229,264],"referencedDeclaration":264,"src":"5977:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5977:77:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":221,"id":227,"nodeType":"Return","src":"5970:84:0"}]},"documentation":{"id":213,"nodeType":"StructuredDocumentation","src":"5706:158:0","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":229,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"5876:20:0","nodeType":"FunctionDefinition","parameters":{"id":218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":215,"mutability":"mutable","name":"target","nameLocation":"5905:6:0","nodeType":"VariableDeclaration","scope":229,"src":"5897:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":214,"name":"address","nodeType":"ElementaryTypeName","src":"5897:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":217,"mutability":"mutable","name":"data","nameLocation":"5926:4:0","nodeType":"VariableDeclaration","scope":229,"src":"5913:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":216,"name":"bytes","nodeType":"ElementaryTypeName","src":"5913:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5896:35:0"},"returnParameters":{"id":221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":220,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":229,"src":"5950:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":219,"name":"bytes","nodeType":"ElementaryTypeName","src":"5950:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5949:14:0"},"scope":296,"src":"5867:192:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":263,"nodeType":"Block","src":"6372:218:0","statements":[{"expression":{"arguments":[{"arguments":[{"id":243,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"6397:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":242,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":19,"src":"6386:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6386:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374","id":245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6406:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520","typeString":"literal_string \"Address: delegate call to non-contract\""},"value":"Address: delegate call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520","typeString":"literal_string \"Address: delegate call to non-contract\""}],"id":241,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6378:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6378:69:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":247,"nodeType":"ExpressionStatement","src":"6378:69:0"},{"assignments":[249,251],"declarations":[{"constant":false,"id":249,"mutability":"mutable","name":"success","nameLocation":"6460:7:0","nodeType":"VariableDeclaration","scope":263,"src":"6455:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":248,"name":"bool","nodeType":"ElementaryTypeName","src":"6455:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":251,"mutability":"mutable","name":"returndata","nameLocation":"6482:10:0","nodeType":"VariableDeclaration","scope":263,"src":"6469:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":250,"name":"bytes","nodeType":"ElementaryTypeName","src":"6469:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":256,"initialValue":{"arguments":[{"id":254,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":234,"src":"6516:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":252,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"6496:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"delegatecall","nodeType":"MemberAccess","src":"6496:19:0","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6496:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6454:67:0"},{"expression":{"arguments":[{"id":258,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"6551:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":259,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":251,"src":"6560:10:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":260,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":236,"src":"6572:12:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":257,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"6534:16:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6534:51:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":240,"id":262,"nodeType":"Return","src":"6527:58:0"}]},"documentation":{"id":230,"nodeType":"StructuredDocumentation","src":"6063:165:0","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":264,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6240:20:0","nodeType":"FunctionDefinition","parameters":{"id":237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":232,"mutability":"mutable","name":"target","nameLocation":"6274:6:0","nodeType":"VariableDeclaration","scope":264,"src":"6266:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":231,"name":"address","nodeType":"ElementaryTypeName","src":"6266:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":234,"mutability":"mutable","name":"data","nameLocation":"6299:4:0","nodeType":"VariableDeclaration","scope":264,"src":"6286:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":233,"name":"bytes","nodeType":"ElementaryTypeName","src":"6286:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":236,"mutability":"mutable","name":"errorMessage","nameLocation":"6323:12:0","nodeType":"VariableDeclaration","scope":264,"src":"6309:26:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":235,"name":"string","nodeType":"ElementaryTypeName","src":"6309:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6260:79:0"},"returnParameters":{"id":240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":239,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":264,"src":"6358:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":238,"name":"bytes","nodeType":"ElementaryTypeName","src":"6358:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6357:14:0"},"scope":296,"src":"6231:359:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":294,"nodeType":"Block","src":"6942:436:0","statements":[{"condition":{"id":276,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":267,"src":"6952:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":292,"nodeType":"Block","src":"6999:375:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":280,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"7071:10:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7071:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7091:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7071:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":290,"nodeType":"Block","src":"7329:39:0","statements":[{"expression":{"arguments":[{"id":287,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":271,"src":"7346:12:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":286,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"7339:6:0","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7339:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":289,"nodeType":"ExpressionStatement","src":"7339:20:0"}]},"id":291,"nodeType":"IfStatement","src":"7067:301:0","trueBody":{"id":285,"nodeType":"Block","src":"7094:229:0","statements":[{"AST":{"nodeType":"YulBlock","src":"7198:117:0","statements":[{"nodeType":"YulVariableDeclaration","src":"7210:40:0","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"7239:10:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7233:5:0"},"nodeType":"YulFunctionCall","src":"7233:17:0"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"7214:15:0","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7272:2:0","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"7276:10:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7268:3:0"},"nodeType":"YulFunctionCall","src":"7268:19:0"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"7289:15:0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7261:6:0"},"nodeType":"YulFunctionCall","src":"7261:44:0"},"nodeType":"YulExpressionStatement","src":"7261:44:0"}]},"evmVersion":"london","externalReferences":[{"declaration":269,"isOffset":false,"isSlot":false,"src":"7239:10:0","valueSize":1},{"declaration":269,"isOffset":false,"isSlot":false,"src":"7276:10:0","valueSize":1}],"id":284,"nodeType":"InlineAssembly","src":"7189:126:0"}]}}]},"id":293,"nodeType":"IfStatement","src":"6948:426:0","trueBody":{"id":279,"nodeType":"Block","src":"6961:32:0","statements":[{"expression":{"id":277,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"6976:10:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":275,"id":278,"nodeType":"Return","src":"6969:17:0"}]}}]},"documentation":{"id":265,"nodeType":"StructuredDocumentation","src":"6594:199:0","text":" @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"},"id":295,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"6805:16:0","nodeType":"FunctionDefinition","parameters":{"id":272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":267,"mutability":"mutable","name":"success","nameLocation":"6832:7:0","nodeType":"VariableDeclaration","scope":295,"src":"6827:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":266,"name":"bool","nodeType":"ElementaryTypeName","src":"6827:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":269,"mutability":"mutable","name":"returndata","nameLocation":"6858:10:0","nodeType":"VariableDeclaration","scope":295,"src":"6845:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":268,"name":"bytes","nodeType":"ElementaryTypeName","src":"6845:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":271,"mutability":"mutable","name":"errorMessage","nameLocation":"6888:12:0","nodeType":"VariableDeclaration","scope":295,"src":"6874:26:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":270,"name":"string","nodeType":"ElementaryTypeName","src":"6874:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6821:83:0"},"returnParameters":{"id":275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":274,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":295,"src":"6928:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":273,"name":"bytes","nodeType":"ElementaryTypeName","src":"6928:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6927:14:0"},"scope":296,"src":"6796:582:0","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":297,"src":"179:7201:0","usedErrors":[]}],"src":"86:7295:0"},"id":0},"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Context.sol":{"ast":{"absolutePath":"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Context.sol","exportedSymbols":{"Context":[322]},"id":323,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":298,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:1"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":322,"linearizedBaseContracts":[322],"name":"Context","nameLocation":"575:7:1","nodeType":"ContractDefinition","nodes":[{"body":{"id":309,"nodeType":"Block","src":"657:37:1","statements":[{"expression":{"arguments":[{"expression":{"id":305,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"678:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"678:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":304,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"670:8:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":303,"name":"address","nodeType":"ElementaryTypeName","src":"670:8:1","stateMutability":"payable","typeDescriptions":{}}},"id":307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"670:19:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"functionReturnParameters":302,"id":308,"nodeType":"Return","src":"663:26:1"}]},"id":310,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"596:10:1","nodeType":"FunctionDefinition","parameters":{"id":299,"nodeType":"ParameterList","parameters":[],"src":"606:2:1"},"returnParameters":{"id":302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":301,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":310,"src":"640:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":300,"name":"address","nodeType":"ElementaryTypeName","src":"640:15:1","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"639:17:1"},"scope":322,"src":"587:107:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":320,"nodeType":"Block","src":"763:155:1","statements":[{"expression":{"id":315,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"769:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_Context_$322","typeString":"contract Context"}},"id":316,"nodeType":"ExpressionStatement","src":"769:4:1"},{"expression":{"expression":{"id":317,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"905:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"905:8:1","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":314,"id":319,"nodeType":"Return","src":"898:15:1"}]},"id":321,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"707:8:1","nodeType":"FunctionDefinition","parameters":{"id":311,"nodeType":"ParameterList","parameters":[],"src":"715:2:1"},"returnParameters":{"id":314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":313,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":321,"src":"749:12:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":312,"name":"bytes","nodeType":"ElementaryTypeName","src":"749:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"748:14:1"},"scope":322,"src":"698:220:1","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":323,"src":"557:363:1","usedErrors":[]}],"src":"32:889:1"},"id":1},"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/ERC20.sol":{"ast":{"absolutePath":"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/ERC20.sol","exportedSymbols":{"Address":[296],"Context":[322],"ERC20":[829],"IERC20":[907],"SafeMath":[1136]},"id":830,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":324,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:2"},{"absolutePath":"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Context.sol","file":"./Context.sol","id":325,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":830,"sourceUnit":323,"src":"58:23:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/IERC20.sol","file":"./IERC20.sol","id":326,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":830,"sourceUnit":908,"src":"82:22:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/SafeMath.sol","file":"./SafeMath.sol","id":327,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":830,"sourceUnit":1137,"src":"105:24:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Address.sol","file":"./Address.sol","id":328,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":830,"sourceUnit":297,"src":"130:23:2","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":330,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":322,"src":"1336:7:2"},"id":331,"nodeType":"InheritanceSpecifier","src":"1336:7:2"},{"baseName":{"id":332,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":907,"src":"1345:6:2"},"id":333,"nodeType":"InheritanceSpecifier","src":"1345:6:2"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":329,"nodeType":"StructuredDocumentation","src":"155:1162:2","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin guidelines: functions revert instead\n of returning `false` on failure. This behavior is nonetheless conventional\n and does not conflict with the expectations of ERC20 applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."},"fullyImplemented":true,"id":829,"linearizedBaseContracts":[829,907,322],"name":"ERC20","nameLocation":"1327:5:2","nodeType":"ContractDefinition","nodes":[{"id":336,"libraryName":{"id":334,"name":"SafeMath","nodeType":"IdentifierPath","referencedDeclaration":1136,"src":"1362:8:2"},"nodeType":"UsingForDirective","src":"1356:27:2","typeName":{"id":335,"name":"uint256","nodeType":"ElementaryTypeName","src":"1375:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"id":339,"libraryName":{"id":337,"name":"Address","nodeType":"IdentifierPath","referencedDeclaration":296,"src":"1392:7:2"},"nodeType":"UsingForDirective","src":"1386:26:2","typeName":{"id":338,"name":"address","nodeType":"ElementaryTypeName","src":"1404:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"constant":false,"id":343,"mutability":"mutable","name":"_balances","nameLocation":"1452:9:2","nodeType":"VariableDeclaration","scope":829,"src":"1416:45:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":342,"keyType":{"id":340,"name":"address","nodeType":"ElementaryTypeName","src":"1424:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1416:27:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":341,"name":"uint256","nodeType":"ElementaryTypeName","src":"1435:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":349,"mutability":"mutable","name":"_allowances","nameLocation":"1522:11:2","nodeType":"VariableDeclaration","scope":829,"src":"1466:67:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":348,"keyType":{"id":344,"name":"address","nodeType":"ElementaryTypeName","src":"1474:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1466:47:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueType":{"id":347,"keyType":{"id":345,"name":"address","nodeType":"ElementaryTypeName","src":"1493:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1485:27:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":346,"name":"uint256","nodeType":"ElementaryTypeName","src":"1504:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":351,"mutability":"mutable","name":"_totalSupply","nameLocation":"1554:12:2","nodeType":"VariableDeclaration","scope":829,"src":"1538:28:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":350,"name":"uint256","nodeType":"ElementaryTypeName","src":"1538:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":353,"mutability":"mutable","name":"_name","nameLocation":"1586:5:2","nodeType":"VariableDeclaration","scope":829,"src":"1571:20:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":352,"name":"string","nodeType":"ElementaryTypeName","src":"1571:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":355,"mutability":"mutable","name":"_symbol","nameLocation":"1610:7:2","nodeType":"VariableDeclaration","scope":829,"src":"1595:22:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":354,"name":"string","nodeType":"ElementaryTypeName","src":"1595:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":357,"mutability":"mutable","name":"_decimals","nameLocation":"1635:9:2","nodeType":"VariableDeclaration","scope":829,"src":"1621:23:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":356,"name":"uint8","nodeType":"ElementaryTypeName","src":"1621:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"private"},{"body":{"id":377,"nodeType":"Block","src":"2001:65:2","statements":[{"expression":{"id":367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":365,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":353,"src":"2007:5:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":366,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":360,"src":"2015:4:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2007:12:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":368,"nodeType":"ExpressionStatement","src":"2007:12:2"},{"expression":{"id":371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":369,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":355,"src":"2025:7:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":370,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"2035:6:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2025:16:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":372,"nodeType":"ExpressionStatement","src":"2025:16:2"},{"expression":{"id":375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":373,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":357,"src":"2047:9:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"3138","id":374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2059:2:2","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"2047:14:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":376,"nodeType":"ExpressionStatement","src":"2047:14:2"}]},"documentation":{"id":358,"nodeType":"StructuredDocumentation","src":"1649:295:2","text":" @dev Sets the values for {name} and {symbol}, initializes {decimals} with\n a default value of 18.\n To select a different value for {decimals}, use {_setupDecimals}.\n All three of these values are immutable: they can only be set once during\n construction."},"id":378,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":360,"mutability":"mutable","name":"name","nameLocation":"1973:4:2","nodeType":"VariableDeclaration","scope":378,"src":"1959:18:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":359,"name":"string","nodeType":"ElementaryTypeName","src":"1959:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":362,"mutability":"mutable","name":"symbol","nameLocation":"1993:6:2","nodeType":"VariableDeclaration","scope":378,"src":"1979:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":361,"name":"string","nodeType":"ElementaryTypeName","src":"1979:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1958:42:2"},"returnParameters":{"id":364,"nodeType":"ParameterList","parameters":[],"src":"2001:0:2"},"scope":829,"src":"1947:119:2","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":386,"nodeType":"Block","src":"2175:23:2","statements":[{"expression":{"id":384,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":353,"src":"2188:5:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":383,"id":385,"nodeType":"Return","src":"2181:12:2"}]},"documentation":{"id":379,"nodeType":"StructuredDocumentation","src":"2070:50:2","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":387,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2132:4:2","nodeType":"FunctionDefinition","parameters":{"id":380,"nodeType":"ParameterList","parameters":[],"src":"2136:2:2"},"returnParameters":{"id":383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":382,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":387,"src":"2160:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":381,"name":"string","nodeType":"ElementaryTypeName","src":"2160:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2159:15:2"},"scope":829,"src":"2123:75:2","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":395,"nodeType":"Block","src":"2355:25:2","statements":[{"expression":{"id":393,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":355,"src":"2368:7:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":392,"id":394,"nodeType":"Return","src":"2361:14:2"}]},"documentation":{"id":388,"nodeType":"StructuredDocumentation","src":"2202:96:2","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":396,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2310:6:2","nodeType":"FunctionDefinition","parameters":{"id":389,"nodeType":"ParameterList","parameters":[],"src":"2316:2:2"},"returnParameters":{"id":392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":391,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":396,"src":"2340:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":390,"name":"string","nodeType":"ElementaryTypeName","src":"2340:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2339:15:2"},"scope":829,"src":"2301:79:2","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":404,"nodeType":"Block","src":"3023:27:2","statements":[{"expression":{"id":402,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":357,"src":"3036:9:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":401,"id":403,"nodeType":"Return","src":"3029:16:2"}]},"documentation":{"id":397,"nodeType":"StructuredDocumentation","src":"2384:588:2","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5,05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n called.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":405,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"2984:8:2","nodeType":"FunctionDefinition","parameters":{"id":398,"nodeType":"ParameterList","parameters":[],"src":"2992:2:2"},"returnParameters":{"id":401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":400,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":405,"src":"3016:5:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":399,"name":"uint8","nodeType":"ElementaryTypeName","src":"3016:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3015:7:2"},"scope":829,"src":"2975:75:2","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[838],"body":{"id":414,"nodeType":"Block","src":"3164:30:2","statements":[{"expression":{"id":412,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"3177:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":411,"id":413,"nodeType":"Return","src":"3170:19:2"}]},"documentation":{"id":406,"nodeType":"StructuredDocumentation","src":"3054:45:2","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":415,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3111:11:2","nodeType":"FunctionDefinition","overrides":{"id":408,"nodeType":"OverrideSpecifier","overrides":[],"src":"3137:8:2"},"parameters":{"id":407,"nodeType":"ParameterList","parameters":[],"src":"3122:2:2"},"returnParameters":{"id":411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":410,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":415,"src":"3155:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":409,"name":"uint256","nodeType":"ElementaryTypeName","src":"3155:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3154:9:2"},"scope":829,"src":"3102:92:2","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[846],"body":{"id":428,"nodeType":"Block","src":"3319:36:2","statements":[{"expression":{"baseExpression":{"id":424,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":343,"src":"3332:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":426,"indexExpression":{"id":425,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":418,"src":"3342:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3332:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":423,"id":427,"nodeType":"Return","src":"3325:25:2"}]},"documentation":{"id":416,"nodeType":"StructuredDocumentation","src":"3198:43:2","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":429,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3253:9:2","nodeType":"FunctionDefinition","overrides":{"id":420,"nodeType":"OverrideSpecifier","overrides":[],"src":"3292:8:2"},"parameters":{"id":419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":418,"mutability":"mutable","name":"account","nameLocation":"3271:7:2","nodeType":"VariableDeclaration","scope":429,"src":"3263:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":417,"name":"address","nodeType":"ElementaryTypeName","src":"3263:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3262:17:2"},"returnParameters":{"id":423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":422,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":429,"src":"3310:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":421,"name":"uint256","nodeType":"ElementaryTypeName","src":"3310:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3309:9:2"},"scope":829,"src":"3244:111:2","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[856],"body":{"id":449,"nodeType":"Block","src":"3632:70:2","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":441,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":310,"src":"3648:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_payable_$","typeString":"function () view returns (address payable)"}},"id":442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3648:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":443,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":432,"src":"3662:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":444,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":434,"src":"3673:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":440,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":650,"src":"3638:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3638:42:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":446,"nodeType":"ExpressionStatement","src":"3638:42:2"},{"expression":{"hexValue":"74727565","id":447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3693:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":439,"id":448,"nodeType":"Return","src":"3686:11:2"}]},"documentation":{"id":430,"nodeType":"StructuredDocumentation","src":"3359:178:2","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."},"functionSelector":"a9059cbb","id":450,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3549:8:2","nodeType":"FunctionDefinition","overrides":{"id":436,"nodeType":"OverrideSpecifier","overrides":[],"src":"3608:8:2"},"parameters":{"id":435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":432,"mutability":"mutable","name":"recipient","nameLocation":"3566:9:2","nodeType":"VariableDeclaration","scope":450,"src":"3558:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":431,"name":"address","nodeType":"ElementaryTypeName","src":"3558:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":434,"mutability":"mutable","name":"amount","nameLocation":"3585:6:2","nodeType":"VariableDeclaration","scope":450,"src":"3577:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":433,"name":"uint256","nodeType":"ElementaryTypeName","src":"3577:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3557:35:2"},"returnParameters":{"id":439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":438,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":450,"src":"3626:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":437,"name":"bool","nodeType":"ElementaryTypeName","src":"3626:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3625:6:2"},"scope":829,"src":"3540:162:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[866],"body":{"id":467,"nodeType":"Block","src":"3862:45:2","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":461,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"3875:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":463,"indexExpression":{"id":462,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":453,"src":"3887:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3875:18:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":465,"indexExpression":{"id":464,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":455,"src":"3894:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3875:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":460,"id":466,"nodeType":"Return","src":"3868:34:2"}]},"documentation":{"id":451,"nodeType":"StructuredDocumentation","src":"3706:43:2","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":468,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3761:9:2","nodeType":"FunctionDefinition","overrides":{"id":457,"nodeType":"OverrideSpecifier","overrides":[],"src":"3835:8:2"},"parameters":{"id":456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":453,"mutability":"mutable","name":"owner","nameLocation":"3784:5:2","nodeType":"VariableDeclaration","scope":468,"src":"3776:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":452,"name":"address","nodeType":"ElementaryTypeName","src":"3776:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":455,"mutability":"mutable","name":"spender","nameLocation":"3803:7:2","nodeType":"VariableDeclaration","scope":468,"src":"3795:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":454,"name":"address","nodeType":"ElementaryTypeName","src":"3795:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3770:44:2"},"returnParameters":{"id":460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":459,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":468,"src":"3853:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":458,"name":"uint256","nodeType":"ElementaryTypeName","src":"3853:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3852:9:2"},"scope":829,"src":"3752:155:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[876],"body":{"id":488,"nodeType":"Block","src":"4118:67:2","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":480,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":310,"src":"4133:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_payable_$","typeString":"function () view returns (address payable)"}},"id":481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4133:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":482,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":471,"src":"4147:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":483,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":473,"src":"4156:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":479,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"4124:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4124:39:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":485,"nodeType":"ExpressionStatement","src":"4124:39:2"},{"expression":{"hexValue":"74727565","id":486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4176:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":478,"id":487,"nodeType":"Return","src":"4169:11:2"}]},"documentation":{"id":469,"nodeType":"StructuredDocumentation","src":"3911:115:2","text":" @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":489,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4038:7:2","nodeType":"FunctionDefinition","overrides":{"id":475,"nodeType":"OverrideSpecifier","overrides":[],"src":"4094:8:2"},"parameters":{"id":474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":471,"mutability":"mutable","name":"spender","nameLocation":"4054:7:2","nodeType":"VariableDeclaration","scope":489,"src":"4046:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":470,"name":"address","nodeType":"ElementaryTypeName","src":"4046:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":473,"mutability":"mutable","name":"amount","nameLocation":"4071:6:2","nodeType":"VariableDeclaration","scope":489,"src":"4063:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":472,"name":"uint256","nodeType":"ElementaryTypeName","src":"4063:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4045:33:2"},"returnParameters":{"id":478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":477,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":489,"src":"4112:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":476,"name":"bool","nodeType":"ElementaryTypeName","src":"4112:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4111:6:2"},"scope":829,"src":"4029:156:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[888],"body":{"id":526,"nodeType":"Block","src":"4747:215:2","statements":[{"expression":{"arguments":[{"id":503,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":492,"src":"4763:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":504,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"4771:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":505,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":496,"src":"4782:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":502,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":650,"src":"4753:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4753:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":507,"nodeType":"ExpressionStatement","src":"4753:36:2"},{"expression":{"arguments":[{"id":509,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":492,"src":"4811:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":510,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":310,"src":"4825:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_payable_$","typeString":"function () view returns (address payable)"}},"id":511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4825:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"arguments":[{"id":519,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":496,"src":"4883:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365","id":520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4891:42:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330","typeString":"literal_string \"ERC20: transfer amount exceeds allowance\""},"value":"ERC20: transfer amount exceeds allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330","typeString":"literal_string \"ERC20: transfer amount exceeds allowance\""}],"expression":{"baseExpression":{"baseExpression":{"id":512,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"4845:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":514,"indexExpression":{"id":513,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":492,"src":"4857:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4845:19:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":517,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":515,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":310,"src":"4865:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_payable_$","typeString":"function () view returns (address payable)"}},"id":516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4865:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4845:33:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":1091,"src":"4845:37:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256,string memory) pure returns (uint256)"}},"id":521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4845:89:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":508,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"4795:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4795:145:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":523,"nodeType":"ExpressionStatement","src":"4795:145:2"},{"expression":{"hexValue":"74727565","id":524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4953:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":501,"id":525,"nodeType":"Return","src":"4946:11:2"}]},"documentation":{"id":490,"nodeType":"StructuredDocumentation","src":"4189:427:2","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20};\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."},"functionSelector":"23b872dd","id":527,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4628:12:2","nodeType":"FunctionDefinition","overrides":{"id":498,"nodeType":"OverrideSpecifier","overrides":[],"src":"4723:8:2"},"parameters":{"id":497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":492,"mutability":"mutable","name":"sender","nameLocation":"4654:6:2","nodeType":"VariableDeclaration","scope":527,"src":"4646:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":491,"name":"address","nodeType":"ElementaryTypeName","src":"4646:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":494,"mutability":"mutable","name":"recipient","nameLocation":"4674:9:2","nodeType":"VariableDeclaration","scope":527,"src":"4666:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":493,"name":"address","nodeType":"ElementaryTypeName","src":"4666:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":496,"mutability":"mutable","name":"amount","nameLocation":"4697:6:2","nodeType":"VariableDeclaration","scope":527,"src":"4689:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":495,"name":"uint256","nodeType":"ElementaryTypeName","src":"4689:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4640:67:2"},"returnParameters":{"id":501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":500,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":527,"src":"4741:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":499,"name":"bool","nodeType":"ElementaryTypeName","src":"4741:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4740:6:2"},"scope":829,"src":"4619:343:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":554,"nodeType":"Block","src":"5425:111:2","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":538,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":310,"src":"5440:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_payable_$","typeString":"function () view returns (address payable)"}},"id":539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5440:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":540,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"5454:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":548,"name":"addedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"5502:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"baseExpression":{"id":541,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"5463:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":544,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":542,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":310,"src":"5475:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_payable_$","typeString":"function () view returns (address payable)"}},"id":543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5475:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5463:25:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":546,"indexExpression":{"id":545,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"5489:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5463:34:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":1042,"src":"5463:38:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5463:50:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":537,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"5431:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5431:83:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":551,"nodeType":"ExpressionStatement","src":"5431:83:2"},{"expression":{"hexValue":"74727565","id":552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5527:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":536,"id":553,"nodeType":"Return","src":"5520:11:2"}]},"documentation":{"id":528,"nodeType":"StructuredDocumentation","src":"4966:362:2","text":" @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"39509351","id":555,"implemented":true,"kind":"function","modifiers":[],"name":"increaseAllowance","nameLocation":"5340:17:2","nodeType":"FunctionDefinition","parameters":{"id":533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":530,"mutability":"mutable","name":"spender","nameLocation":"5366:7:2","nodeType":"VariableDeclaration","scope":555,"src":"5358:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":529,"name":"address","nodeType":"ElementaryTypeName","src":"5358:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":532,"mutability":"mutable","name":"addedValue","nameLocation":"5383:10:2","nodeType":"VariableDeclaration","scope":555,"src":"5375:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":531,"name":"uint256","nodeType":"ElementaryTypeName","src":"5375:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5357:37:2"},"returnParameters":{"id":536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":535,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":555,"src":"5419:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":534,"name":"bool","nodeType":"ElementaryTypeName","src":"5419:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5418:6:2"},"scope":829,"src":"5331:205:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":583,"nodeType":"Block","src":"6104:205:2","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":566,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":310,"src":"6126:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_payable_$","typeString":"function () view returns (address payable)"}},"id":567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6126:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":568,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"6146:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":576,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":560,"src":"6209:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6234:39:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""},"value":"ERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""}],"expression":{"baseExpression":{"baseExpression":{"id":569,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"6161:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":572,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":570,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":310,"src":"6173:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_payable_$","typeString":"function () view returns (address payable)"}},"id":571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6173:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6161:25:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":574,"indexExpression":{"id":573,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"6187:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6161:34:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":1091,"src":"6161:38:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256,string memory) pure returns (uint256)"}},"id":578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6161:120:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":565,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"6110:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6110:177:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":580,"nodeType":"ExpressionStatement","src":"6110:177:2"},{"expression":{"hexValue":"74727565","id":581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6300:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":564,"id":582,"nodeType":"Return","src":"6293:11:2"}]},"documentation":{"id":556,"nodeType":"StructuredDocumentation","src":"5540:450:2","text":" @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."},"functionSelector":"a457c2d7","id":584,"implemented":true,"kind":"function","modifiers":[],"name":"decreaseAllowance","nameLocation":"6002:17:2","nodeType":"FunctionDefinition","parameters":{"id":561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":558,"mutability":"mutable","name":"spender","nameLocation":"6033:7:2","nodeType":"VariableDeclaration","scope":584,"src":"6025:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":557,"name":"address","nodeType":"ElementaryTypeName","src":"6025:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":560,"mutability":"mutable","name":"subtractedValue","nameLocation":"6054:15:2","nodeType":"VariableDeclaration","scope":584,"src":"6046:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":559,"name":"uint256","nodeType":"ElementaryTypeName","src":"6046:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6019:54:2"},"returnParameters":{"id":564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":563,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":584,"src":"6098:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":562,"name":"bool","nodeType":"ElementaryTypeName","src":"6098:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6097:6:2"},"scope":829,"src":"5993:316:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":649,"nodeType":"Block","src":"6840:417:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":595,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"6854:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6872:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":597,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6864:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":596,"name":"address","nodeType":"ElementaryTypeName","src":"6864:7:2","typeDescriptions":{}}},"id":599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6864:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6854:20:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373","id":601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6876:39:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""},"value":"ERC20: transfer from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""}],"id":594,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6846:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6846:70:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":603,"nodeType":"ExpressionStatement","src":"6846:70:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":605,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"6930:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6951:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":607,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6943:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":606,"name":"address","nodeType":"ElementaryTypeName","src":"6943:7:2","typeDescriptions":{}}},"id":609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6943:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6930:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472657373","id":611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6955:37:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""},"value":"ERC20: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""}],"id":604,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6922:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6922:71:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":613,"nodeType":"ExpressionStatement","src":"6922:71:2"},{"expression":{"arguments":[{"id":615,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"7021:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":616,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"7029:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":617,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"7040:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":614,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":828,"src":"7000:20:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7000:47:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":619,"nodeType":"ExpressionStatement","src":"7000:47:2"},{"expression":{"id":630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":620,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":343,"src":"7054:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":622,"indexExpression":{"id":621,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"7064:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7054:17:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":627,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"7096:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365","id":628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7104:40:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""},"value":"ERC20: transfer amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""}],"expression":{"baseExpression":{"id":623,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":343,"src":"7074:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":625,"indexExpression":{"id":624,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"7084:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7074:17:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":1091,"src":"7074:21:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256,string memory) pure returns (uint256)"}},"id":629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7074:71:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7054:91:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":631,"nodeType":"ExpressionStatement","src":"7054:91:2"},{"expression":{"id":641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":632,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":343,"src":"7151:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":634,"indexExpression":{"id":633,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"7161:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7151:20:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":639,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"7199:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":635,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":343,"src":"7174:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":637,"indexExpression":{"id":636,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"7184:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7174:20:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":1042,"src":"7174:24:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7174:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7151:55:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":642,"nodeType":"ExpressionStatement","src":"7151:55:2"},{"eventCall":{"arguments":[{"id":644,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"7226:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":645,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"7234:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":646,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"7245:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":643,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":897,"src":"7217:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7217:35:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":648,"nodeType":"EmitStatement","src":"7212:40:2"}]},"documentation":{"id":585,"nodeType":"StructuredDocumentation","src":"6313:437:2","text":" @dev Moves tokens `amount` from `sender` to `recipient`.\n This is internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."},"id":650,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"6762:9:2","nodeType":"FunctionDefinition","parameters":{"id":592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":587,"mutability":"mutable","name":"sender","nameLocation":"6780:6:2","nodeType":"VariableDeclaration","scope":650,"src":"6772:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":586,"name":"address","nodeType":"ElementaryTypeName","src":"6772:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":589,"mutability":"mutable","name":"recipient","nameLocation":"6796:9:2","nodeType":"VariableDeclaration","scope":650,"src":"6788:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":588,"name":"address","nodeType":"ElementaryTypeName","src":"6788:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":591,"mutability":"mutable","name":"amount","nameLocation":"6815:6:2","nodeType":"VariableDeclaration","scope":650,"src":"6807:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":590,"name":"uint256","nodeType":"ElementaryTypeName","src":"6807:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6771:51:2"},"returnParameters":{"id":593,"nodeType":"ParameterList","parameters":[],"src":"6840:0:2"},"scope":829,"src":"6753:504:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":704,"nodeType":"Block","src":"7572:283:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":659,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":653,"src":"7586:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7605:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":661,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7597:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":660,"name":"address","nodeType":"ElementaryTypeName","src":"7597:7:2","typeDescriptions":{}}},"id":663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7597:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7586:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","id":665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7609:33:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""},"value":"ERC20: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""}],"id":658,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7578:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7578:65:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":667,"nodeType":"ExpressionStatement","src":"7578:65:2"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7679:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":670,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7671:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":669,"name":"address","nodeType":"ElementaryTypeName","src":"7671:7:2","typeDescriptions":{}}},"id":672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7671:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":673,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":653,"src":"7683:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":674,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":655,"src":"7692:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":668,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":828,"src":"7650:20:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7650:49:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":676,"nodeType":"ExpressionStatement","src":"7650:49:2"},{"expression":{"id":682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":677,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"7706:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":680,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":655,"src":"7738:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":678,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"7721:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":1042,"src":"7721:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7721:24:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7706:39:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":683,"nodeType":"ExpressionStatement","src":"7706:39:2"},{"expression":{"id":693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":684,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":343,"src":"7751:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":686,"indexExpression":{"id":685,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":653,"src":"7761:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7751:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":691,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":655,"src":"7795:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":687,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":343,"src":"7772:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":689,"indexExpression":{"id":688,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":653,"src":"7782:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7772:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":1042,"src":"7772:22:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7772:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7751:51:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":694,"nodeType":"ExpressionStatement","src":"7751:51:2"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7830:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":697,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7822:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":696,"name":"address","nodeType":"ElementaryTypeName","src":"7822:7:2","typeDescriptions":{}}},"id":699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7822:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":700,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":653,"src":"7834:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":701,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":655,"src":"7843:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":695,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":897,"src":"7813:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7813:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":703,"nodeType":"EmitStatement","src":"7808:42:2"}]},"documentation":{"id":651,"nodeType":"StructuredDocumentation","src":"7261:243:2","text":"@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements\n - `to` cannot be the zero address."},"id":705,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7516:5:2","nodeType":"FunctionDefinition","parameters":{"id":656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":653,"mutability":"mutable","name":"account","nameLocation":"7530:7:2","nodeType":"VariableDeclaration","scope":705,"src":"7522:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":652,"name":"address","nodeType":"ElementaryTypeName","src":"7522:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":655,"mutability":"mutable","name":"amount","nameLocation":"7547:6:2","nodeType":"VariableDeclaration","scope":705,"src":"7539:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":654,"name":"uint256","nodeType":"ElementaryTypeName","src":"7539:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7521:33:2"},"returnParameters":{"id":657,"nodeType":"ParameterList","parameters":[],"src":"7572:0:2"},"scope":829,"src":"7507:348:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":760,"nodeType":"Block","src":"8215:323:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":714,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"8229:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8248:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":716,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8240:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":715,"name":"address","nodeType":"ElementaryTypeName","src":"8240:7:2","typeDescriptions":{}}},"id":718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8240:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8229:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f2061646472657373","id":720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8252:35:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""},"value":"ERC20: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""}],"id":713,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8221:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8221:67:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":722,"nodeType":"ExpressionStatement","src":"8221:67:2"},{"expression":{"arguments":[{"id":724,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"8316:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8333:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":726,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8325:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":725,"name":"address","nodeType":"ElementaryTypeName","src":"8325:7:2","typeDescriptions":{}}},"id":728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8325:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":729,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":710,"src":"8337:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":723,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":828,"src":"8295:20:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8295:49:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":731,"nodeType":"ExpressionStatement","src":"8295:49:2"},{"expression":{"id":742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":732,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":343,"src":"8351:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":734,"indexExpression":{"id":733,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"8361:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8351:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":739,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":710,"src":"8395:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365","id":740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8403:36:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""},"value":"ERC20: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""}],"expression":{"baseExpression":{"id":735,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":343,"src":"8372:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":737,"indexExpression":{"id":736,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"8382:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8372:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":1091,"src":"8372:22:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256,string memory) pure returns (uint256)"}},"id":741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8372:68:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8351:89:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":743,"nodeType":"ExpressionStatement","src":"8351:89:2"},{"expression":{"id":749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":744,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"8446:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":747,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":710,"src":"8478:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":745,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"8461:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":1065,"src":"8461:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8461:24:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8446:39:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":750,"nodeType":"ExpressionStatement","src":"8446:39:2"},{"eventCall":{"arguments":[{"id":752,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"8505:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8522:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":754,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8514:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":753,"name":"address","nodeType":"ElementaryTypeName","src":"8514:7:2","typeDescriptions":{}}},"id":756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8514:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":757,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":710,"src":"8526:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":751,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":897,"src":"8496:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8496:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":759,"nodeType":"EmitStatement","src":"8491:42:2"}]},"documentation":{"id":706,"nodeType":"StructuredDocumentation","src":"7859:288:2","text":" @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."},"id":761,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"8159:5:2","nodeType":"FunctionDefinition","parameters":{"id":711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":708,"mutability":"mutable","name":"account","nameLocation":"8173:7:2","nodeType":"VariableDeclaration","scope":761,"src":"8165:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":707,"name":"address","nodeType":"ElementaryTypeName","src":"8165:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":710,"mutability":"mutable","name":"amount","nameLocation":"8190:6:2","nodeType":"VariableDeclaration","scope":761,"src":"8182:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":709,"name":"uint256","nodeType":"ElementaryTypeName","src":"8182:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8164:33:2"},"returnParameters":{"id":712,"nodeType":"ParameterList","parameters":[],"src":"8215:0:2"},"scope":829,"src":"8150:388:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":805,"nodeType":"Block","src":"9018:239:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":772,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":764,"src":"9032:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9049:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":774,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9041:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":773,"name":"address","nodeType":"ElementaryTypeName","src":"9041:7:2","typeDescriptions":{}}},"id":776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9041:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9032:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373","id":778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9053:38:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""},"value":"ERC20: approve from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""}],"id":771,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9024:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9024:68:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":780,"nodeType":"ExpressionStatement","src":"9024:68:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":782,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":766,"src":"9106:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9125:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":784,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9117:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":783,"name":"address","nodeType":"ElementaryTypeName","src":"9117:7:2","typeDescriptions":{}}},"id":786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9117:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9106:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f2061646472657373","id":788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9129:36:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""},"value":"ERC20: approve to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""}],"id":781,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9098:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9098:68:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":790,"nodeType":"ExpressionStatement","src":"9098:68:2"},{"expression":{"id":797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":791,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"9173:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":794,"indexExpression":{"id":792,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":764,"src":"9185:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9173:18:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":795,"indexExpression":{"id":793,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":766,"src":"9192:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9173:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":796,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":768,"src":"9203:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9173:36:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":798,"nodeType":"ExpressionStatement","src":"9173:36:2"},{"eventCall":{"arguments":[{"id":800,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":764,"src":"9229:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":801,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":766,"src":"9236:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":802,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":768,"src":"9245:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":799,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"9220:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9220:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":804,"nodeType":"EmitStatement","src":"9215:37:2"}]},"documentation":{"id":762,"nodeType":"StructuredDocumentation","src":"8542:390:2","text":" @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n This is internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."},"id":806,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8944:8:2","nodeType":"FunctionDefinition","parameters":{"id":769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":764,"mutability":"mutable","name":"owner","nameLocation":"8961:5:2","nodeType":"VariableDeclaration","scope":806,"src":"8953:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":763,"name":"address","nodeType":"ElementaryTypeName","src":"8953:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":766,"mutability":"mutable","name":"spender","nameLocation":"8976:7:2","nodeType":"VariableDeclaration","scope":806,"src":"8968:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":765,"name":"address","nodeType":"ElementaryTypeName","src":"8968:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":768,"mutability":"mutable","name":"amount","nameLocation":"8993:6:2","nodeType":"VariableDeclaration","scope":806,"src":"8985:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":767,"name":"uint256","nodeType":"ElementaryTypeName","src":"8985:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8952:48:2"},"returnParameters":{"id":770,"nodeType":"ParameterList","parameters":[],"src":"9018:0:2"},"scope":829,"src":"8935:322:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":816,"nodeType":"Block","src":"9614:32:2","statements":[{"expression":{"id":814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":812,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":357,"src":"9620:9:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":813,"name":"decimals_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":809,"src":"9632:9:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9620:21:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":815,"nodeType":"ExpressionStatement","src":"9620:21:2"}]},"documentation":{"id":807,"nodeType":"StructuredDocumentation","src":"9261:300:2","text":" @dev Sets {decimals} to a value other than the default one of 18.\n WARNING: This function should only be called from the constructor. Most\n applications that interact with token contracts will not expect\n {decimals} to ever change, and may work incorrectly if it does."},"id":817,"implemented":true,"kind":"function","modifiers":[],"name":"_setupDecimals","nameLocation":"9573:14:2","nodeType":"FunctionDefinition","parameters":{"id":810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":809,"mutability":"mutable","name":"decimals_","nameLocation":"9594:9:2","nodeType":"VariableDeclaration","scope":817,"src":"9588:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":808,"name":"uint8","nodeType":"ElementaryTypeName","src":"9588:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"9587:17:2"},"returnParameters":{"id":811,"nodeType":"ParameterList","parameters":[],"src":"9614:0:2"},"scope":829,"src":"9564:82:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":827,"nodeType":"Block","src":"10292:2:2","statements":[]},"documentation":{"id":818,"nodeType":"StructuredDocumentation","src":"9650:550:2","text":" @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be to transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":828,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"10212:20:2","nodeType":"FunctionDefinition","parameters":{"id":825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":820,"mutability":"mutable","name":"from","nameLocation":"10241:4:2","nodeType":"VariableDeclaration","scope":828,"src":"10233:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":819,"name":"address","nodeType":"ElementaryTypeName","src":"10233:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":822,"mutability":"mutable","name":"to","nameLocation":"10255:2:2","nodeType":"VariableDeclaration","scope":828,"src":"10247:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":821,"name":"address","nodeType":"ElementaryTypeName","src":"10247:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":824,"mutability":"mutable","name":"amount","nameLocation":"10267:6:2","nodeType":"VariableDeclaration","scope":828,"src":"10259:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":823,"name":"uint256","nodeType":"ElementaryTypeName","src":"10259:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10232:42:2"},"returnParameters":{"id":826,"nodeType":"ParameterList","parameters":[],"src":"10292:0:2"},"scope":829,"src":"10203:91:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":830,"src":"1318:8978:2","usedErrors":[]}],"src":"33:10264:2"},"id":2},"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/IERC20.sol":{"ast":{"absolutePath":"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/IERC20.sol","exportedSymbols":{"IERC20":[907]},"id":908,"license":"AGPL-3.0","nodeType":"SourceUnit","nodes":[{"id":831,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"37:23:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":832,"nodeType":"StructuredDocumentation","src":"62:70:3","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":907,"linearizedBaseContracts":[907],"name":"IERC20","nameLocation":"143:6:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":833,"nodeType":"StructuredDocumentation","src":"154:62:3","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":838,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"228:11:3","nodeType":"FunctionDefinition","parameters":{"id":834,"nodeType":"ParameterList","parameters":[],"src":"239:2:3"},"returnParameters":{"id":837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":836,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":838,"src":"265:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":835,"name":"uint256","nodeType":"ElementaryTypeName","src":"265:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"264:9:3"},"scope":907,"src":"219:55:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":839,"nodeType":"StructuredDocumentation","src":"278:68:3","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":846,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"358:9:3","nodeType":"FunctionDefinition","parameters":{"id":842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":841,"mutability":"mutable","name":"account","nameLocation":"376:7:3","nodeType":"VariableDeclaration","scope":846,"src":"368:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":840,"name":"address","nodeType":"ElementaryTypeName","src":"368:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"367:17:3"},"returnParameters":{"id":845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":844,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":846,"src":"408:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":843,"name":"uint256","nodeType":"ElementaryTypeName","src":"408:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"407:9:3"},"scope":907,"src":"349:68:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":847,"nodeType":"StructuredDocumentation","src":"421:197:3","text":" @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":856,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"630:8:3","nodeType":"FunctionDefinition","parameters":{"id":852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":849,"mutability":"mutable","name":"recipient","nameLocation":"647:9:3","nodeType":"VariableDeclaration","scope":856,"src":"639:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":848,"name":"address","nodeType":"ElementaryTypeName","src":"639:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":851,"mutability":"mutable","name":"amount","nameLocation":"666:6:3","nodeType":"VariableDeclaration","scope":856,"src":"658:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":850,"name":"uint256","nodeType":"ElementaryTypeName","src":"658:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"638:35:3"},"returnParameters":{"id":855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":854,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":856,"src":"692:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":853,"name":"bool","nodeType":"ElementaryTypeName","src":"692:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"691:6:3"},"scope":907,"src":"621:77:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":857,"nodeType":"StructuredDocumentation","src":"702:252:3","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":866,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"966:9:3","nodeType":"FunctionDefinition","parameters":{"id":862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":859,"mutability":"mutable","name":"owner","nameLocation":"984:5:3","nodeType":"VariableDeclaration","scope":866,"src":"976:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":858,"name":"address","nodeType":"ElementaryTypeName","src":"976:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":861,"mutability":"mutable","name":"spender","nameLocation":"999:7:3","nodeType":"VariableDeclaration","scope":866,"src":"991:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":860,"name":"address","nodeType":"ElementaryTypeName","src":"991:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"975:32:3"},"returnParameters":{"id":865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":864,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":866,"src":"1031:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":863,"name":"uint256","nodeType":"ElementaryTypeName","src":"1031:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1030:9:3"},"scope":907,"src":"957:83:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":867,"nodeType":"StructuredDocumentation","src":"1044:616:3","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":876,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"1672:7:3","nodeType":"FunctionDefinition","parameters":{"id":872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":869,"mutability":"mutable","name":"spender","nameLocation":"1688:7:3","nodeType":"VariableDeclaration","scope":876,"src":"1680:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":868,"name":"address","nodeType":"ElementaryTypeName","src":"1680:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":871,"mutability":"mutable","name":"amount","nameLocation":"1705:6:3","nodeType":"VariableDeclaration","scope":876,"src":"1697:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":870,"name":"uint256","nodeType":"ElementaryTypeName","src":"1697:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1679:33:3"},"returnParameters":{"id":875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":874,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":876,"src":"1731:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":873,"name":"bool","nodeType":"ElementaryTypeName","src":"1731:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1730:6:3"},"scope":907,"src":"1663:74:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":877,"nodeType":"StructuredDocumentation","src":"1741:280:3","text":" @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":888,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2033:12:3","nodeType":"FunctionDefinition","parameters":{"id":884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":879,"mutability":"mutable","name":"sender","nameLocation":"2054:6:3","nodeType":"VariableDeclaration","scope":888,"src":"2046:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":878,"name":"address","nodeType":"ElementaryTypeName","src":"2046:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":881,"mutability":"mutable","name":"recipient","nameLocation":"2070:9:3","nodeType":"VariableDeclaration","scope":888,"src":"2062:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":880,"name":"address","nodeType":"ElementaryTypeName","src":"2062:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":883,"mutability":"mutable","name":"amount","nameLocation":"2089:6:3","nodeType":"VariableDeclaration","scope":888,"src":"2081:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":882,"name":"uint256","nodeType":"ElementaryTypeName","src":"2081:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2045:51:3"},"returnParameters":{"id":887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":886,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":888,"src":"2115:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":885,"name":"bool","nodeType":"ElementaryTypeName","src":"2115:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2114:6:3"},"scope":907,"src":"2024:97:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":889,"nodeType":"StructuredDocumentation","src":"2125:148:3","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"id":897,"name":"Transfer","nameLocation":"2282:8:3","nodeType":"EventDefinition","parameters":{"id":896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":891,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"2307:4:3","nodeType":"VariableDeclaration","scope":897,"src":"2291:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":890,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":893,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"2329:2:3","nodeType":"VariableDeclaration","scope":897,"src":"2313:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":892,"name":"address","nodeType":"ElementaryTypeName","src":"2313:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":895,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"2341:5:3","nodeType":"VariableDeclaration","scope":897,"src":"2333:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":894,"name":"uint256","nodeType":"ElementaryTypeName","src":"2333:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:57:3"},"src":"2276:72:3"},{"anonymous":false,"documentation":{"id":898,"nodeType":"StructuredDocumentation","src":"2352:142:3","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"id":906,"name":"Approval","nameLocation":"2503:8:3","nodeType":"EventDefinition","parameters":{"id":905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":900,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"2528:5:3","nodeType":"VariableDeclaration","scope":906,"src":"2512:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":899,"name":"address","nodeType":"ElementaryTypeName","src":"2512:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":902,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"2551:7:3","nodeType":"VariableDeclaration","scope":906,"src":"2535:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":901,"name":"address","nodeType":"ElementaryTypeName","src":"2535:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":904,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"2568:5:3","nodeType":"VariableDeclaration","scope":906,"src":"2560:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":903,"name":"uint256","nodeType":"ElementaryTypeName","src":"2560:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2511:63:3"},"src":"2497:78:3"}],"scope":908,"src":"133:2444:3","usedErrors":[]}],"src":"37:2541:3"},"id":3},"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol":{"ast":{"absolutePath":"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol","exportedSymbols":{"Context":[322],"Ownable":[1016]},"id":1017,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":909,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:4"},{"absolutePath":"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Context.sol","file":"./Context.sol","id":910,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1017,"sourceUnit":323,"src":"58:23:4","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":912,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":322,"src":"598:7:4"},"id":913,"nodeType":"InheritanceSpecifier","src":"598:7:4"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":911,"nodeType":"StructuredDocumentation","src":"83:494:4","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":1016,"linearizedBaseContracts":[1016,322],"name":"Ownable","nameLocation":"587:7:4","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":915,"mutability":"mutable","name":"_owner","nameLocation":"626:6:4","nodeType":"VariableDeclaration","scope":1016,"src":"610:22:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":914,"name":"address","nodeType":"ElementaryTypeName","src":"610:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"id":921,"name":"OwnershipTransferred","nameLocation":"643:20:4","nodeType":"EventDefinition","parameters":{"id":920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":917,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"680:13:4","nodeType":"VariableDeclaration","scope":921,"src":"664:29:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":916,"name":"address","nodeType":"ElementaryTypeName","src":"664:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":919,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"711:8:4","nodeType":"VariableDeclaration","scope":921,"src":"695:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":918,"name":"address","nodeType":"ElementaryTypeName","src":"695:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"663:57:4"},"src":"637:84:4"},{"body":{"id":942,"nodeType":"Block","src":"829:121:4","statements":[{"assignments":[926],"declarations":[{"constant":false,"id":926,"mutability":"mutable","name":"msgSender","nameLocation":"843:9:4","nodeType":"VariableDeclaration","scope":942,"src":"835:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":925,"name":"address","nodeType":"ElementaryTypeName","src":"835:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":929,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":927,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":310,"src":"855:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_payable_$","typeString":"function () view returns (address payable)"}},"id":928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"855:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"VariableDeclarationStatement","src":"835:32:4"},{"expression":{"id":932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":930,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"873:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":931,"name":"msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":926,"src":"882:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"873:18:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":933,"nodeType":"ExpressionStatement","src":"873:18:4"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"931:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":936,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"923:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":935,"name":"address","nodeType":"ElementaryTypeName","src":"923:7:4","typeDescriptions":{}}},"id":938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"923:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":939,"name":"msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":926,"src":"935:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":934,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":921,"src":"902:20:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"902:43:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":941,"nodeType":"EmitStatement","src":"897:48:4"}]},"documentation":{"id":922,"nodeType":"StructuredDocumentation","src":"725:87:4","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":943,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":923,"nodeType":"ParameterList","parameters":[],"src":"826:2:4"},"returnParameters":{"id":924,"nodeType":"ParameterList","parameters":[],"src":"829:0:4"},"scope":1016,"src":"815:135:4","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":951,"nodeType":"Block","src":"1065:24:4","statements":[{"expression":{"id":949,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"1078:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":948,"id":950,"nodeType":"Return","src":"1071:13:4"}]},"documentation":{"id":944,"nodeType":"StructuredDocumentation","src":"954:61:4","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":952,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1027:5:4","nodeType":"FunctionDefinition","parameters":{"id":945,"nodeType":"ParameterList","parameters":[],"src":"1032:2:4"},"returnParameters":{"id":948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":947,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":952,"src":"1056:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":946,"name":"address","nodeType":"ElementaryTypeName","src":"1056:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1055:9:4"},"scope":1016,"src":"1018:71:4","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":964,"nodeType":"Block","src":"1190:85:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":956,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"1204:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":957,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":310,"src":"1214:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_payable_$","typeString":"function () view returns (address payable)"}},"id":958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1214:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"1204:22:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1228:34:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":955,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1196:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1196:67:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":962,"nodeType":"ExpressionStatement","src":"1196:67:4"},{"id":963,"nodeType":"PlaceholderStatement","src":"1269:1:4"}]},"documentation":{"id":953,"nodeType":"StructuredDocumentation","src":"1093:73:4","text":" @dev Throws if called by any account other than the owner."},"id":965,"name":"onlyOwner","nameLocation":"1178:9:4","nodeType":"ModifierDefinition","parameters":{"id":954,"nodeType":"ParameterList","parameters":[],"src":"1187:2:4"},"src":"1169:106:4","virtual":false,"visibility":"internal"},{"body":{"id":986,"nodeType":"Block","src":"1655:81:4","statements":[{"eventCall":{"arguments":[{"id":972,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"1687:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1703:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":974,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1695:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":973,"name":"address","nodeType":"ElementaryTypeName","src":"1695:7:4","typeDescriptions":{}}},"id":976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1695:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":971,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":921,"src":"1666:20:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1666:40:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":978,"nodeType":"EmitStatement","src":"1661:45:4"},{"expression":{"id":984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":979,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"1712:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1729:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":981,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1721:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":980,"name":"address","nodeType":"ElementaryTypeName","src":"1721:7:4","typeDescriptions":{}}},"id":983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1721:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1712:19:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":985,"nodeType":"ExpressionStatement","src":"1712:19:4"}]},"documentation":{"id":966,"nodeType":"StructuredDocumentation","src":"1279:319:4","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."},"functionSelector":"715018a6","id":987,"implemented":true,"kind":"function","modifiers":[{"id":969,"kind":"modifierInvocation","modifierName":{"id":968,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":965,"src":"1645:9:4"},"nodeType":"ModifierInvocation","src":"1645:9:4"}],"name":"renounceOwnership","nameLocation":"1610:17:4","nodeType":"FunctionDefinition","parameters":{"id":967,"nodeType":"ParameterList","parameters":[],"src":"1627:2:4"},"returnParameters":{"id":970,"nodeType":"ParameterList","parameters":[],"src":"1655:0:4"},"scope":1016,"src":"1601:135:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1014,"nodeType":"Block","src":"1945:156:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":996,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":990,"src":"1959:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1979:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":998,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1971:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":997,"name":"address","nodeType":"ElementaryTypeName","src":"1971:7:4","typeDescriptions":{}}},"id":1000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1971:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1959:22:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":1002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1983:40:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":995,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1951:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1951:73:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1004,"nodeType":"ExpressionStatement","src":"1951:73:4"},{"eventCall":{"arguments":[{"id":1006,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"2056:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1007,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":990,"src":"2064:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1005,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":921,"src":"2035:20:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":1008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2035:38:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1009,"nodeType":"EmitStatement","src":"2030:43:4"},{"expression":{"id":1012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1010,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"2079:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1011,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":990,"src":"2088:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2079:17:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1013,"nodeType":"ExpressionStatement","src":"2079:17:4"}]},"documentation":{"id":988,"nodeType":"StructuredDocumentation","src":"1740:132:4","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":1015,"implemented":true,"kind":"function","modifiers":[{"id":993,"kind":"modifierInvocation","modifierName":{"id":992,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":965,"src":"1935:9:4"},"nodeType":"ModifierInvocation","src":"1935:9:4"}],"name":"transferOwnership","nameLocation":"1884:17:4","nodeType":"FunctionDefinition","parameters":{"id":991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":990,"mutability":"mutable","name":"newOwner","nameLocation":"1910:8:4","nodeType":"VariableDeclaration","scope":1015,"src":"1902:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":989,"name":"address","nodeType":"ElementaryTypeName","src":"1902:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1901:18:4"},"returnParameters":{"id":994,"nodeType":"ParameterList","parameters":[],"src":"1945:0:4"},"scope":1016,"src":"1875:226:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":1017,"src":"578:1525:4","usedErrors":[]}],"src":"33:2071:4"},"id":4},"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/SafeMath.sol":{"ast":{"absolutePath":"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/SafeMath.sol","exportedSymbols":{"SafeMath":[1136]},"id":1137,"license":"AGPL-3.0","nodeType":"SourceUnit","nodes":[{"id":1018,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"37:23:5"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeMath","contractDependencies":[],"contractKind":"library","documentation":{"id":1019,"nodeType":"StructuredDocumentation","src":"62:178:5","text":"@title Optimized overflow and underflow safe math operations\n @notice Contains methods for doing math operations that revert on overflow or underflow for minimal gas cost"},"fullyImplemented":true,"id":1136,"linearizedBaseContracts":[1136],"name":"SafeMath","nameLocation":"248:8:5","nodeType":"ContractDefinition","nodes":[{"body":{"id":1041,"nodeType":"Block","src":"479:60:5","statements":[{"id":1040,"nodeType":"UncheckedBlock","src":"485:50:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"id":1034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1030,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1027,"src":"512:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1031,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"516:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1032,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1024,"src":"520:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"516:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"512:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1035,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"511:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1036,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"526:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"511:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1029,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"503:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"503:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1039,"nodeType":"ExpressionStatement","src":"503:25:5"}]}]},"documentation":{"id":1020,"nodeType":"StructuredDocumentation","src":"261:146:5","text":"@notice Returns x + y, reverts if sum overflows uint256\n @param x The augend\n @param y The addend\n @return z The sum of x and y"},"id":1042,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"419:3:5","nodeType":"FunctionDefinition","parameters":{"id":1025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1022,"mutability":"mutable","name":"x","nameLocation":"431:1:5","nodeType":"VariableDeclaration","scope":1042,"src":"423:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1021,"name":"uint256","nodeType":"ElementaryTypeName","src":"423:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1024,"mutability":"mutable","name":"y","nameLocation":"442:1:5","nodeType":"VariableDeclaration","scope":1042,"src":"434:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1023,"name":"uint256","nodeType":"ElementaryTypeName","src":"434:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"422:22:5"},"returnParameters":{"id":1028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1027,"mutability":"mutable","name":"z","nameLocation":"476:1:5","nodeType":"VariableDeclaration","scope":1042,"src":"468:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1026,"name":"uint256","nodeType":"ElementaryTypeName","src":"468:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"467:11:5"},"scope":1136,"src":"410:129:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1064,"nodeType":"Block","src":"762:60:5","statements":[{"id":1063,"nodeType":"UncheckedBlock","src":"768:50:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"id":1057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1053,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1050,"src":"795:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1054,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"799:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1055,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1047,"src":"803:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"799:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"795:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1058,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"794:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1059,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"809:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"794:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1052,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"786:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"786:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1062,"nodeType":"ExpressionStatement","src":"786:25:5"}]}]},"documentation":{"id":1043,"nodeType":"StructuredDocumentation","src":"543:147:5","text":"@notice Returns x - y, reverts if underflows\n @param x The minuend\n @param y The subtrahend\n @return z The difference of x and y"},"id":1065,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nameLocation":"702:3:5","nodeType":"FunctionDefinition","parameters":{"id":1048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1045,"mutability":"mutable","name":"x","nameLocation":"714:1:5","nodeType":"VariableDeclaration","scope":1065,"src":"706:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1044,"name":"uint256","nodeType":"ElementaryTypeName","src":"706:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1047,"mutability":"mutable","name":"y","nameLocation":"725:1:5","nodeType":"VariableDeclaration","scope":1065,"src":"717:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1046,"name":"uint256","nodeType":"ElementaryTypeName","src":"717:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"705:22:5"},"returnParameters":{"id":1051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1050,"mutability":"mutable","name":"z","nameLocation":"759:1:5","nodeType":"VariableDeclaration","scope":1065,"src":"751:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1049,"name":"uint256","nodeType":"ElementaryTypeName","src":"751:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"750:11:5"},"scope":1136,"src":"693:129:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1090,"nodeType":"Block","src":"1103:69:5","statements":[{"id":1089,"nodeType":"UncheckedBlock","src":"1109:59:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"id":1082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1078,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1075,"src":"1136:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1079,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"1140:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1080,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"1144:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1140:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1136:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1083,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1135:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1084,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"1150:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1135:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1086,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"1153:7:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1077,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1127:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1127:34:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1088,"nodeType":"ExpressionStatement","src":"1127:34:5"}]}]},"documentation":{"id":1066,"nodeType":"StructuredDocumentation","src":"826:182:5","text":"@notice Returns x - y, reverts if underflows\n @param x The minuend\n @param y The subtrahend\n @param message The error msg\n @return z The difference of x and y"},"id":1091,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nameLocation":"1020:3:5","nodeType":"FunctionDefinition","parameters":{"id":1073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1068,"mutability":"mutable","name":"x","nameLocation":"1032:1:5","nodeType":"VariableDeclaration","scope":1091,"src":"1024:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1067,"name":"uint256","nodeType":"ElementaryTypeName","src":"1024:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1070,"mutability":"mutable","name":"y","nameLocation":"1043:1:5","nodeType":"VariableDeclaration","scope":1091,"src":"1035:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1069,"name":"uint256","nodeType":"ElementaryTypeName","src":"1035:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1072,"mutability":"mutable","name":"message","nameLocation":"1060:7:5","nodeType":"VariableDeclaration","scope":1091,"src":"1046:21:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1071,"name":"string","nodeType":"ElementaryTypeName","src":"1046:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1023:45:5"},"returnParameters":{"id":1076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1075,"mutability":"mutable","name":"z","nameLocation":"1100:1:5","nodeType":"VariableDeclaration","scope":1091,"src":"1092:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1074,"name":"uint256","nodeType":"ElementaryTypeName","src":"1092:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1091:11:5"},"scope":1136,"src":"1011:161:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1119,"nodeType":"Block","src":"1396:74:5","statements":[{"id":1118,"nodeType":"UncheckedBlock","src":"1402:64:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1102,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"1428:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1433:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1428:6:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"id":1109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1105,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1099,"src":"1439:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1106,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"1443:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1107,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"1447:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1443:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1439:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1110,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1438:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1111,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"1452:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1438:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1113,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"1457:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1438:20:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1428:30:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1101,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1420:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1420:39:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1117,"nodeType":"ExpressionStatement","src":"1420:39:5"}]}]},"documentation":{"id":1092,"nodeType":"StructuredDocumentation","src":"1176:148:5","text":"@notice Returns x * y, reverts if overflows\n @param x The multiplicand\n @param y The multiplier\n @return z The product of x and y"},"id":1120,"implemented":true,"kind":"function","modifiers":[],"name":"mul","nameLocation":"1336:3:5","nodeType":"FunctionDefinition","parameters":{"id":1097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1094,"mutability":"mutable","name":"x","nameLocation":"1348:1:5","nodeType":"VariableDeclaration","scope":1120,"src":"1340:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1093,"name":"uint256","nodeType":"ElementaryTypeName","src":"1340:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1096,"mutability":"mutable","name":"y","nameLocation":"1359:1:5","nodeType":"VariableDeclaration","scope":1120,"src":"1351:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1095,"name":"uint256","nodeType":"ElementaryTypeName","src":"1351:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1339:22:5"},"returnParameters":{"id":1100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1099,"mutability":"mutable","name":"z","nameLocation":"1393:1:5","nodeType":"VariableDeclaration","scope":1120,"src":"1385:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1098,"name":"uint256","nodeType":"ElementaryTypeName","src":"1385:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1384:11:5"},"scope":1136,"src":"1327:143:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1134,"nodeType":"Block","src":"1747:23:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1130,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1123,"src":"1760:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1131,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"1764:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1760:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1129,"id":1133,"nodeType":"Return","src":"1753:12:5"}]},"documentation":{"id":1121,"nodeType":"StructuredDocumentation","src":"1474:201:5","text":"@notice Returns x / y, reverts if overflows - no specific check, solidity reverts on division by 0\n @param x The numerator\n @param y The denominator\n @return z The product of x and y"},"id":1135,"implemented":true,"kind":"function","modifiers":[],"name":"div","nameLocation":"1687:3:5","nodeType":"FunctionDefinition","parameters":{"id":1126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1123,"mutability":"mutable","name":"x","nameLocation":"1699:1:5","nodeType":"VariableDeclaration","scope":1135,"src":"1691:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1122,"name":"uint256","nodeType":"ElementaryTypeName","src":"1691:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1125,"mutability":"mutable","name":"y","nameLocation":"1710:1:5","nodeType":"VariableDeclaration","scope":1135,"src":"1702:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1124,"name":"uint256","nodeType":"ElementaryTypeName","src":"1702:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1690:22:5"},"returnParameters":{"id":1129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1128,"mutability":"mutable","name":"z","nameLocation":"1744:1:5","nodeType":"VariableDeclaration","scope":1135,"src":"1736:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1127,"name":"uint256","nodeType":"ElementaryTypeName","src":"1736:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1735:11:5"},"scope":1136,"src":"1678:92:5","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1137,"src":"240:1532:5","usedErrors":[]}],"src":"37:1736:5"},"id":5},"@aave/core-v3/contracts/dependencies/weth/WETH9.sol":{"ast":{"absolutePath":"@aave/core-v3/contracts/dependencies/weth/WETH9.sol","exportedSymbols":{"WETH9":[1385]},"id":1386,"nodeType":"SourceUnit","nodes":[{"id":1138,"literals":["solidity","^","0.8",".10"],"nodeType":"PragmaDirective","src":"686:24:6"},{"abstract":false,"baseContracts":[],"canonicalName":"WETH9","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1385,"linearizedBaseContracts":[1385],"name":"WETH9","nameLocation":"721:5:6","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"06fdde03","id":1141,"mutability":"mutable","name":"name","nameLocation":"745:4:6","nodeType":"VariableDeclaration","scope":1385,"src":"731:36:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1139,"name":"string","nodeType":"ElementaryTypeName","src":"731:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"57726170706564204574686572","id":1140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"752:15:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_00cd3d46df44f2cbb950cf84eb2e92aa2ddd23195b1a009173ea59a063357ed3","typeString":"literal_string \"Wrapped Ether\""},"value":"Wrapped Ether"},"visibility":"public"},{"constant":false,"functionSelector":"95d89b41","id":1144,"mutability":"mutable","name":"symbol","nameLocation":"785:6:6","nodeType":"VariableDeclaration","scope":1385,"src":"771:29:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1142,"name":"string","nodeType":"ElementaryTypeName","src":"771:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"57455448","id":1143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"794:6:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_0f8a193ff464434486c0daf7db2a895884365d2bc84ba47a68fcf89c1b14b5b8","typeString":"literal_string \"WETH\""},"value":"WETH"},"visibility":"public"},{"constant":false,"functionSelector":"313ce567","id":1147,"mutability":"mutable","name":"decimals","nameLocation":"817:8:6","nodeType":"VariableDeclaration","scope":1385,"src":"804:26:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1145,"name":"uint8","nodeType":"ElementaryTypeName","src":"804:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3138","id":1146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"828:2:6","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"visibility":"public"},{"anonymous":false,"id":1155,"name":"Approval","nameLocation":"841:8:6","nodeType":"EventDefinition","parameters":{"id":1154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1149,"indexed":true,"mutability":"mutable","name":"src","nameLocation":"866:3:6","nodeType":"VariableDeclaration","scope":1155,"src":"850:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1148,"name":"address","nodeType":"ElementaryTypeName","src":"850:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1151,"indexed":true,"mutability":"mutable","name":"guy","nameLocation":"887:3:6","nodeType":"VariableDeclaration","scope":1155,"src":"871:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1150,"name":"address","nodeType":"ElementaryTypeName","src":"871:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1153,"indexed":false,"mutability":"mutable","name":"wad","nameLocation":"900:3:6","nodeType":"VariableDeclaration","scope":1155,"src":"892:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1152,"name":"uint256","nodeType":"ElementaryTypeName","src":"892:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"849:55:6"},"src":"835:70:6"},{"anonymous":false,"id":1163,"name":"Transfer","nameLocation":"914:8:6","nodeType":"EventDefinition","parameters":{"id":1162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1157,"indexed":true,"mutability":"mutable","name":"src","nameLocation":"939:3:6","nodeType":"VariableDeclaration","scope":1163,"src":"923:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1156,"name":"address","nodeType":"ElementaryTypeName","src":"923:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1159,"indexed":true,"mutability":"mutable","name":"dst","nameLocation":"960:3:6","nodeType":"VariableDeclaration","scope":1163,"src":"944:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1158,"name":"address","nodeType":"ElementaryTypeName","src":"944:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1161,"indexed":false,"mutability":"mutable","name":"wad","nameLocation":"973:3:6","nodeType":"VariableDeclaration","scope":1163,"src":"965:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1160,"name":"uint256","nodeType":"ElementaryTypeName","src":"965:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"922:55:6"},"src":"908:70:6"},{"anonymous":false,"id":1169,"name":"Deposit","nameLocation":"987:7:6","nodeType":"EventDefinition","parameters":{"id":1168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1165,"indexed":true,"mutability":"mutable","name":"dst","nameLocation":"1011:3:6","nodeType":"VariableDeclaration","scope":1169,"src":"995:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1164,"name":"address","nodeType":"ElementaryTypeName","src":"995:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1167,"indexed":false,"mutability":"mutable","name":"wad","nameLocation":"1024:3:6","nodeType":"VariableDeclaration","scope":1169,"src":"1016:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1166,"name":"uint256","nodeType":"ElementaryTypeName","src":"1016:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"994:34:6"},"src":"981:48:6"},{"anonymous":false,"id":1175,"name":"Withdrawal","nameLocation":"1038:10:6","nodeType":"EventDefinition","parameters":{"id":1174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1171,"indexed":true,"mutability":"mutable","name":"src","nameLocation":"1065:3:6","nodeType":"VariableDeclaration","scope":1175,"src":"1049:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1170,"name":"address","nodeType":"ElementaryTypeName","src":"1049:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1173,"indexed":false,"mutability":"mutable","name":"wad","nameLocation":"1078:3:6","nodeType":"VariableDeclaration","scope":1175,"src":"1070:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1172,"name":"uint256","nodeType":"ElementaryTypeName","src":"1070:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1048:34:6"},"src":"1032:51:6"},{"constant":false,"functionSelector":"70a08231","id":1179,"mutability":"mutable","name":"balanceOf","nameLocation":"1122:9:6","nodeType":"VariableDeclaration","scope":1385,"src":"1087:44:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1178,"keyType":{"id":1176,"name":"address","nodeType":"ElementaryTypeName","src":"1095:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1087:27:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":1177,"name":"uint256","nodeType":"ElementaryTypeName","src":"1106:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"dd62ed3e","id":1185,"mutability":"mutable","name":"allowance","nameLocation":"1190:9:6","nodeType":"VariableDeclaration","scope":1385,"src":"1135:64:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":1184,"keyType":{"id":1180,"name":"address","nodeType":"ElementaryTypeName","src":"1143:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1135:47:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueType":{"id":1183,"keyType":{"id":1181,"name":"address","nodeType":"ElementaryTypeName","src":"1162:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1154:27:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":1182,"name":"uint256","nodeType":"ElementaryTypeName","src":"1173:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"public"},{"body":{"id":1191,"nodeType":"Block","src":"1231:20:6","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1188,"name":"deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"1237:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1237:9:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1190,"nodeType":"ExpressionStatement","src":"1237:9:6"}]},"id":1192,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1186,"nodeType":"ParameterList","parameters":[],"src":"1211:2:6"},"returnParameters":{"id":1187,"nodeType":"ParameterList","parameters":[],"src":"1231:0:6"},"scope":1385,"src":"1204:47:6","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":1210,"nodeType":"Block","src":"1289:86:6","statements":[{"expression":{"id":1201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1195,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"1295:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1198,"indexExpression":{"expression":{"id":1196,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1305:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1305:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1295:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":1199,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1320:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"1320:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1295:34:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1202,"nodeType":"ExpressionStatement","src":"1295:34:6"},{"eventCall":{"arguments":[{"expression":{"id":1204,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1348:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1348:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1206,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1360:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"1360:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1203,"name":"Deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"1340:7:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1340:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1209,"nodeType":"EmitStatement","src":"1335:35:6"}]},"functionSelector":"d0e30db0","id":1211,"implemented":true,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"1264:7:6","nodeType":"FunctionDefinition","parameters":{"id":1193,"nodeType":"ParameterList","parameters":[],"src":"1271:2:6"},"returnParameters":{"id":1194,"nodeType":"ParameterList","parameters":[],"src":"1289:0:6"},"scope":1385,"src":"1255:120:6","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":1247,"nodeType":"Block","src":"1417:159:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1217,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"1431:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1220,"indexExpression":{"expression":{"id":1218,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1441:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1441:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1431:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1221,"name":"wad","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"1456:3:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1431:28:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1216,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1423:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1423:37:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1224,"nodeType":"ExpressionStatement","src":"1423:37:6"},{"expression":{"id":1230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1225,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"1466:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1228,"indexExpression":{"expression":{"id":1226,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1476:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1476:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1466:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1229,"name":"wad","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"1491:3:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1466:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1231,"nodeType":"ExpressionStatement","src":"1466:28:6"},{"expression":{"arguments":[{"id":1238,"name":"wad","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"1529:3:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":1234,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1508:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1508:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1233,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1500:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":1232,"name":"address","nodeType":"ElementaryTypeName","src":"1500:8:6","stateMutability":"payable","typeDescriptions":{}}},"id":1236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1500:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","src":"1500:28:6","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1500:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1240,"nodeType":"ExpressionStatement","src":"1500:33:6"},{"eventCall":{"arguments":[{"expression":{"id":1242,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1555:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1555:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1244,"name":"wad","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"1567:3:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1241,"name":"Withdrawal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1175,"src":"1544:10:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1544:27:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1246,"nodeType":"EmitStatement","src":"1539:32:6"}]},"functionSelector":"2e1a7d4d","id":1248,"implemented":true,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"1388:8:6","nodeType":"FunctionDefinition","parameters":{"id":1214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1213,"mutability":"mutable","name":"wad","nameLocation":"1405:3:6","nodeType":"VariableDeclaration","scope":1248,"src":"1397:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1212,"name":"uint256","nodeType":"ElementaryTypeName","src":"1397:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1396:13:6"},"returnParameters":{"id":1215,"nodeType":"ParameterList","parameters":[],"src":"1417:0:6"},"scope":1385,"src":"1379:197:6","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1259,"nodeType":"Block","src":"1633:39:6","statements":[{"expression":{"expression":{"arguments":[{"id":1255,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1654:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_WETH9_$1385","typeString":"contract WETH9"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_WETH9_$1385","typeString":"contract WETH9"}],"id":1254,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1646:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1253,"name":"address","nodeType":"ElementaryTypeName","src":"1646:7:6","typeDescriptions":{}}},"id":1256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1646:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"1646:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1252,"id":1258,"nodeType":"Return","src":"1639:28:6"}]},"functionSelector":"18160ddd","id":1260,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"1589:11:6","nodeType":"FunctionDefinition","parameters":{"id":1249,"nodeType":"ParameterList","parameters":[],"src":"1600:2:6"},"returnParameters":{"id":1252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1251,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1260,"src":"1624:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1250,"name":"uint256","nodeType":"ElementaryTypeName","src":"1624:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1623:9:6"},"scope":1385,"src":"1580:92:6","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1287,"nodeType":"Block","src":"1741:101:6","statements":[{"expression":{"id":1276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1269,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1185,"src":"1747:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1273,"indexExpression":{"expression":{"id":1270,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1757:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1757:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1747:21:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1274,"indexExpression":{"id":1272,"name":"guy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1262,"src":"1769:3:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1747:26:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1275,"name":"wad","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1264,"src":"1776:3:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1747:32:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1277,"nodeType":"ExpressionStatement","src":"1747:32:6"},{"eventCall":{"arguments":[{"expression":{"id":1279,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1799:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1799:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1281,"name":"guy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1262,"src":"1811:3:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1282,"name":"wad","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1264,"src":"1816:3:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1278,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1155,"src":"1790:8:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1790:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1284,"nodeType":"EmitStatement","src":"1785:35:6"},{"expression":{"hexValue":"74727565","id":1285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1833:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1268,"id":1286,"nodeType":"Return","src":"1826:11:6"}]},"functionSelector":"095ea7b3","id":1288,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"1685:7:6","nodeType":"FunctionDefinition","parameters":{"id":1265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1262,"mutability":"mutable","name":"guy","nameLocation":"1701:3:6","nodeType":"VariableDeclaration","scope":1288,"src":"1693:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1261,"name":"address","nodeType":"ElementaryTypeName","src":"1693:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1264,"mutability":"mutable","name":"wad","nameLocation":"1714:3:6","nodeType":"VariableDeclaration","scope":1288,"src":"1706:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1263,"name":"uint256","nodeType":"ElementaryTypeName","src":"1706:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1692:26:6"},"returnParameters":{"id":1268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1267,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1288,"src":"1735:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1266,"name":"bool","nodeType":"ElementaryTypeName","src":"1735:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1734:6:6"},"scope":1385,"src":"1676:166:6","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1304,"nodeType":"Block","src":"1912:52:6","statements":[{"expression":{"arguments":[{"expression":{"id":1298,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1938:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1938:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1300,"name":"dst","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1290,"src":"1950:3:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1301,"name":"wad","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1292,"src":"1955:3:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1297,"name":"transferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"1925:12:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) returns (bool)"}},"id":1302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1925:34:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1296,"id":1303,"nodeType":"Return","src":"1918:41:6"}]},"functionSelector":"a9059cbb","id":1305,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1855:8:6","nodeType":"FunctionDefinition","parameters":{"id":1293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1290,"mutability":"mutable","name":"dst","nameLocation":"1872:3:6","nodeType":"VariableDeclaration","scope":1305,"src":"1864:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1289,"name":"address","nodeType":"ElementaryTypeName","src":"1864:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1292,"mutability":"mutable","name":"wad","nameLocation":"1885:3:6","nodeType":"VariableDeclaration","scope":1305,"src":"1877:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1291,"name":"uint256","nodeType":"ElementaryTypeName","src":"1877:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1863:26:6"},"returnParameters":{"id":1296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1295,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1305,"src":"1906:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1294,"name":"bool","nodeType":"ElementaryTypeName","src":"1906:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1905:6:6"},"scope":1385,"src":"1846:118:6","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1383,"nodeType":"Block","src":"2051:327:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1317,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"2065:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1319,"indexExpression":{"id":1318,"name":"src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1307,"src":"2075:3:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2065:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1320,"name":"wad","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1311,"src":"2083:3:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2065:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1316,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2057:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2057:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1323,"nodeType":"ExpressionStatement","src":"2057:30:6"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1324,"name":"src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1307,"src":"2098:3:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":1325,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2105:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2105:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2098:17:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":1328,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1185,"src":"2119:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1330,"indexExpression":{"id":1329,"name":"src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1307,"src":"2129:3:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2119:14:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1333,"indexExpression":{"expression":{"id":1331,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2134:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2134:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2119:26:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":1336,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2154:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1335,"name":"uint256","nodeType":"ElementaryTypeName","src":"2154:7:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1334,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2149:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2149:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1338,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"2149:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2119:47:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2098:68:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1362,"nodeType":"IfStatement","src":"2094:172:6","trueBody":{"id":1361,"nodeType":"Block","src":"2168:98:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":1342,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1185,"src":"2184:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1344,"indexExpression":{"id":1343,"name":"src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1307,"src":"2194:3:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2184:14:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1347,"indexExpression":{"expression":{"id":1345,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2199:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2199:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2184:26:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1348,"name":"wad","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1311,"src":"2214:3:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2184:33:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1341,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2176:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2176:42:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1351,"nodeType":"ExpressionStatement","src":"2176:42:6"},{"expression":{"id":1359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1352,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1185,"src":"2226:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1356,"indexExpression":{"id":1353,"name":"src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1307,"src":"2236:3:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2226:14:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1357,"indexExpression":{"expression":{"id":1354,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2241:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2241:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2226:26:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1358,"name":"wad","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1311,"src":"2256:3:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2226:33:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1360,"nodeType":"ExpressionStatement","src":"2226:33:6"}]}},{"expression":{"id":1367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1363,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"2272:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1365,"indexExpression":{"id":1364,"name":"src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1307,"src":"2282:3:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2272:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1366,"name":"wad","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1311,"src":"2290:3:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2272:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1368,"nodeType":"ExpressionStatement","src":"2272:21:6"},{"expression":{"id":1373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1369,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"2299:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1371,"indexExpression":{"id":1370,"name":"dst","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"2309:3:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2299:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1372,"name":"wad","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1311,"src":"2317:3:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2299:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1374,"nodeType":"ExpressionStatement","src":"2299:21:6"},{"eventCall":{"arguments":[{"id":1376,"name":"src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1307,"src":"2341:3:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1377,"name":"dst","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"2346:3:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1378,"name":"wad","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1311,"src":"2351:3:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1375,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1163,"src":"2332:8:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2332:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1380,"nodeType":"EmitStatement","src":"2327:28:6"},{"expression":{"hexValue":"74727565","id":1381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2369:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1315,"id":1382,"nodeType":"Return","src":"2362:11:6"}]},"functionSelector":"23b872dd","id":1384,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"1977:12:6","nodeType":"FunctionDefinition","parameters":{"id":1312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1307,"mutability":"mutable","name":"src","nameLocation":"1998:3:6","nodeType":"VariableDeclaration","scope":1384,"src":"1990:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1306,"name":"address","nodeType":"ElementaryTypeName","src":"1990:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1309,"mutability":"mutable","name":"dst","nameLocation":"2011:3:6","nodeType":"VariableDeclaration","scope":1384,"src":"2003:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1308,"name":"address","nodeType":"ElementaryTypeName","src":"2003:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1311,"mutability":"mutable","name":"wad","nameLocation":"2024:3:6","nodeType":"VariableDeclaration","scope":1384,"src":"2016:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1310,"name":"uint256","nodeType":"ElementaryTypeName","src":"2016:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1989:39:6"},"returnParameters":{"id":1315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1314,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1384,"src":"2045:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1313,"name":"bool","nodeType":"ElementaryTypeName","src":"2045:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2044:6:6"},"scope":1385,"src":"1968:410:6","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":1386,"src":"712:1668:6","usedErrors":[]}],"src":"686:36850:6"},"id":6},"@aave/core-v3/contracts/interfaces/IERC20WithPermit.sol":{"ast":{"absolutePath":"@aave/core-v3/contracts/interfaces/IERC20WithPermit.sol","exportedSymbols":{"IERC20":[907],"IERC20WithPermit":[1411]},"id":1412,"license":"AGPL-3.0","nodeType":"SourceUnit","nodes":[{"id":1387,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"37:23:7"},{"absolutePath":"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/IERC20.sol","file":"../dependencies/openzeppelin/contracts/IERC20.sol","id":1389,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1412,"sourceUnit":908,"src":"62:73:7","symbolAliases":[{"foreign":{"id":1388,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"src":"70:6:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1391,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":907,"src":"274:6:7"},"id":1392,"nodeType":"InheritanceSpecifier","src":"274:6:7"}],"canonicalName":"IERC20WithPermit","contractDependencies":[],"contractKind":"interface","documentation":{"id":1390,"nodeType":"StructuredDocumentation","src":"137:106:7","text":" @title IERC20WithPermit\n @author Aave\n @notice Interface for the permit function (EIP-2612)"},"fullyImplemented":false,"id":1411,"linearizedBaseContracts":[1411,907],"name":"IERC20WithPermit","nameLocation":"254:16:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1393,"nodeType":"StructuredDocumentation","src":"285:494:7","text":" @notice Allow passing a signed message to approve spending\n @dev implements the permit function as for\n https://github.com/ethereum/EIPs/blob/8a34d644aacf0f9f8f00815307fd7dd5da07655f/EIPS/eip-2612.md\n @param owner The owner of the funds\n @param spender The spender\n @param value The amount\n @param deadline The deadline timestamp, type(uint256).max for max deadline\n @param v Signature param\n @param s Signature param\n @param r Signature param"},"functionSelector":"d505accf","id":1410,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"791:6:7","nodeType":"FunctionDefinition","parameters":{"id":1408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1395,"mutability":"mutable","name":"owner","nameLocation":"811:5:7","nodeType":"VariableDeclaration","scope":1410,"src":"803:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1394,"name":"address","nodeType":"ElementaryTypeName","src":"803:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1397,"mutability":"mutable","name":"spender","nameLocation":"830:7:7","nodeType":"VariableDeclaration","scope":1410,"src":"822:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1396,"name":"address","nodeType":"ElementaryTypeName","src":"822:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1399,"mutability":"mutable","name":"value","nameLocation":"851:5:7","nodeType":"VariableDeclaration","scope":1410,"src":"843:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1398,"name":"uint256","nodeType":"ElementaryTypeName","src":"843:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1401,"mutability":"mutable","name":"deadline","nameLocation":"870:8:7","nodeType":"VariableDeclaration","scope":1410,"src":"862:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1400,"name":"uint256","nodeType":"ElementaryTypeName","src":"862:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1403,"mutability":"mutable","name":"v","nameLocation":"890:1:7","nodeType":"VariableDeclaration","scope":1410,"src":"884:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1402,"name":"uint8","nodeType":"ElementaryTypeName","src":"884:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1405,"mutability":"mutable","name":"r","nameLocation":"905:1:7","nodeType":"VariableDeclaration","scope":1410,"src":"897:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1404,"name":"bytes32","nodeType":"ElementaryTypeName","src":"897:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1407,"mutability":"mutable","name":"s","nameLocation":"920:1:7","nodeType":"VariableDeclaration","scope":1410,"src":"912:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1406,"name":"bytes32","nodeType":"ElementaryTypeName","src":"912:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"797:128:7"},"returnParameters":{"id":1409,"nodeType":"ParameterList","parameters":[],"src":"934:0:7"},"scope":1411,"src":"782:153:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1412,"src":"244:693:7","usedErrors":[]}],"src":"37:901:7"},"id":7},"contracts/mocks/WETH9Mock.sol":{"ast":{"absolutePath":"contracts/mocks/WETH9Mock.sol","exportedSymbols":{"Ownable":[1016],"WETH9":[1385],"WETH9Mock":[1518]},"id":1519,"license":"BUSL-1.1","nodeType":"SourceUnit","nodes":[{"id":1413,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"37:23:8"},{"absolutePath":"@aave/core-v3/contracts/dependencies/weth/WETH9.sol","file":"@aave/core-v3/contracts/dependencies/weth/WETH9.sol","id":1415,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1519,"sourceUnit":1386,"src":"62:74:8","symbolAliases":[{"foreign":{"id":1414,"name":"WETH9","nodeType":"Identifier","overloadedDeclarations":[],"src":"70:5:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol","file":"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol","id":1417,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1519,"sourceUnit":1017,"src":"137:96:8","symbolAliases":[{"foreign":{"id":1416,"name":"Ownable","nodeType":"Identifier","overloadedDeclarations":[],"src":"145:7:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1418,"name":"WETH9","nodeType":"IdentifierPath","referencedDeclaration":1385,"src":"257:5:8"},"id":1419,"nodeType":"InheritanceSpecifier","src":"257:5:8"},{"baseName":{"id":1420,"name":"Ownable","nodeType":"IdentifierPath","referencedDeclaration":1016,"src":"264:7:8"},"id":1421,"nodeType":"InheritanceSpecifier","src":"264:7:8"}],"canonicalName":"WETH9Mock","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1518,"linearizedBaseContracts":[1518,1016,322,1385],"name":"WETH9Mock","nameLocation":"244:9:8","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1423,"mutability":"mutable","name":"_protected","nameLocation":"290:10:8","nodeType":"VariableDeclaration","scope":1518,"src":"276:24:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1422,"name":"bool","nodeType":"ElementaryTypeName","src":"276:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"body":{"id":1441,"nodeType":"Block","src":"447:124:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1426,"name":"_protected","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1423,"src":"457:10:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"74727565","id":1427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"471:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"457:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1439,"nodeType":"IfStatement","src":"453:107:8","trueBody":{"id":1438,"nodeType":"Block","src":"477:83:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1430,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":952,"src":"493:5:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"493:7:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1432,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":310,"src":"504:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_payable_$","typeString":"function () view returns (address payable)"}},"id":1433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"504:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"493:23:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":1435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"518:34:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":1429,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"485:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"485:68:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1437,"nodeType":"ExpressionStatement","src":"485:68:8"}]}},{"id":1440,"nodeType":"PlaceholderStatement","src":"565:1:8"}]},"documentation":{"id":1424,"nodeType":"StructuredDocumentation","src":"305:107:8","text":" @dev Function modifier, if _protected is enabled then msg.sender is required to be the owner"},"id":1442,"name":"onlyOwnerIfProtected","nameLocation":"424:20:8","nodeType":"ModifierDefinition","parameters":{"id":1425,"nodeType":"ParameterList","parameters":[],"src":"444:2:8"},"src":"415:156:8","virtual":false,"visibility":"internal"},{"body":{"id":1467,"nodeType":"Block","src":"652:105:8","statements":[{"expression":{"id":1453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1451,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1141,"src":"658:4:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1452,"name":"mockName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1444,"src":"665:8:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"658:15:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1454,"nodeType":"ExpressionStatement","src":"658:15:8"},{"expression":{"id":1457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1455,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"679:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1456,"name":"mockSymbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1446,"src":"688:10:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"679:19:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1458,"nodeType":"ExpressionStatement","src":"679:19:8"},{"expression":{"arguments":[{"id":1460,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1448,"src":"723:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1459,"name":"transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1015,"src":"705:17:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"705:24:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1462,"nodeType":"ExpressionStatement","src":"705:24:8"},{"expression":{"id":1465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1463,"name":"_protected","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1423,"src":"735:10:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"748:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"735:17:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1466,"nodeType":"ExpressionStatement","src":"735:17:8"}]},"id":1468,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1444,"mutability":"mutable","name":"mockName","nameLocation":"601:8:8","nodeType":"VariableDeclaration","scope":1468,"src":"587:22:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1443,"name":"string","nodeType":"ElementaryTypeName","src":"587:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1446,"mutability":"mutable","name":"mockSymbol","nameLocation":"625:10:8","nodeType":"VariableDeclaration","scope":1468,"src":"611:24:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1445,"name":"string","nodeType":"ElementaryTypeName","src":"611:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1448,"mutability":"mutable","name":"owner","nameLocation":"645:5:8","nodeType":"VariableDeclaration","scope":1468,"src":"637:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1447,"name":"address","nodeType":"ElementaryTypeName","src":"637:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"586:65:8"},"returnParameters":{"id":1450,"nodeType":"ParameterList","parameters":[],"src":"652:0:8"},"scope":1518,"src":"575:182:8","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1496,"nodeType":"Block","src":"850:102:8","statements":[{"expression":{"id":1483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1479,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"856:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1481,"indexExpression":{"id":1480,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1470,"src":"866:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"856:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1482,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1472,"src":"878:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"856:27:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1484,"nodeType":"ExpressionStatement","src":"856:27:8"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"911:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1487,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"903:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1486,"name":"address","nodeType":"ElementaryTypeName","src":"903:7:8","typeDescriptions":{}}},"id":1489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"903:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1490,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1470,"src":"915:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1491,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1472,"src":"924:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1485,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1163,"src":"894:8:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"894:36:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1493,"nodeType":"EmitStatement","src":"889:41:8"},{"expression":{"hexValue":"74727565","id":1494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"943:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1478,"id":1495,"nodeType":"Return","src":"936:11:8"}]},"functionSelector":"40c10f19","id":1497,"implemented":true,"kind":"function","modifiers":[{"id":1475,"kind":"modifierInvocation","modifierName":{"id":1474,"name":"onlyOwnerIfProtected","nodeType":"IdentifierPath","referencedDeclaration":1442,"src":"814:20:8"},"nodeType":"ModifierInvocation","src":"814:20:8"}],"name":"mint","nameLocation":"770:4:8","nodeType":"FunctionDefinition","parameters":{"id":1473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1470,"mutability":"mutable","name":"account","nameLocation":"783:7:8","nodeType":"VariableDeclaration","scope":1497,"src":"775:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1469,"name":"address","nodeType":"ElementaryTypeName","src":"775:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1472,"mutability":"mutable","name":"value","nameLocation":"800:5:8","nodeType":"VariableDeclaration","scope":1497,"src":"792:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1471,"name":"uint256","nodeType":"ElementaryTypeName","src":"792:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"774:32:8"},"returnParameters":{"id":1478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1477,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1497,"src":"844:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1476,"name":"bool","nodeType":"ElementaryTypeName","src":"844:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"843:6:8"},"scope":1518,"src":"761:191:8","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1508,"nodeType":"Block","src":"1007:29:8","statements":[{"expression":{"id":1506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1504,"name":"_protected","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1423,"src":"1013:10:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1505,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"1026:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1013:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1507,"nodeType":"ExpressionStatement","src":"1013:18:8"}]},"functionSelector":"1c02bc31","id":1509,"implemented":true,"kind":"function","modifiers":[{"id":1502,"kind":"modifierInvocation","modifierName":{"id":1501,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":965,"src":"997:9:8"},"nodeType":"ModifierInvocation","src":"997:9:8"}],"name":"setProtected","nameLocation":"965:12:8","nodeType":"FunctionDefinition","parameters":{"id":1500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1499,"mutability":"mutable","name":"state","nameLocation":"983:5:8","nodeType":"VariableDeclaration","scope":1509,"src":"978:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1498,"name":"bool","nodeType":"ElementaryTypeName","src":"978:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"977:12:8"},"returnParameters":{"id":1503,"nodeType":"ParameterList","parameters":[],"src":"1007:0:8"},"scope":1518,"src":"956:80:8","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1516,"nodeType":"Block","src":"1090:28:8","statements":[{"expression":{"id":1514,"name":"_protected","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1423,"src":"1103:10:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1513,"id":1515,"nodeType":"Return","src":"1096:17:8"}]},"functionSelector":"5300f82b","id":1517,"implemented":true,"kind":"function","modifiers":[],"name":"isProtected","nameLocation":"1049:11:8","nodeType":"FunctionDefinition","parameters":{"id":1510,"nodeType":"ParameterList","parameters":[],"src":"1060:2:8"},"returnParameters":{"id":1513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1512,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1517,"src":"1084:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1511,"name":"bool","nodeType":"ElementaryTypeName","src":"1084:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1083:6:8"},"scope":1518,"src":"1040:78:8","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":1519,"src":"235:885:8","usedErrors":[]}],"src":"37:1084:8"},"id":8},"contracts/mocks/testnet-helpers/Faucet.sol":{"ast":{"absolutePath":"contracts/mocks/testnet-helpers/Faucet.sol","exportedSymbols":{"Faucet":[1792],"IFaucet":[1865],"Ownable":[1016],"TestnetERC20":[2151]},"id":1793,"license":"BUSL-1.1","nodeType":"SourceUnit","nodes":[{"id":1520,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"37:23:9"},{"absolutePath":"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol","file":"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol","id":1522,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1793,"sourceUnit":1017,"src":"62:96:9","symbolAliases":[{"foreign":{"id":1521,"name":"Ownable","nodeType":"Identifier","overloadedDeclarations":[],"src":"70:7:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/mocks/testnet-helpers/TestnetERC20.sol","file":"./TestnetERC20.sol","id":1524,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1793,"sourceUnit":2152,"src":"159:48:9","symbolAliases":[{"foreign":{"id":1523,"name":"TestnetERC20","nodeType":"Identifier","overloadedDeclarations":[],"src":"167:12:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/mocks/testnet-helpers/IFaucet.sol","file":"./IFaucet.sol","id":1526,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1793,"sourceUnit":1866,"src":"208:38:9","symbolAliases":[{"foreign":{"id":1525,"name":"IFaucet","nodeType":"Identifier","overloadedDeclarations":[],"src":"216:7:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1528,"name":"IFaucet","nodeType":"IdentifierPath","referencedDeclaration":1865,"src":"324:7:9"},"id":1529,"nodeType":"InheritanceSpecifier","src":"324:7:9"},{"baseName":{"id":1530,"name":"Ownable","nodeType":"IdentifierPath","referencedDeclaration":1016,"src":"333:7:9"},"id":1531,"nodeType":"InheritanceSpecifier","src":"333:7:9"}],"canonicalName":"Faucet","contractDependencies":[],"contractKind":"contract","documentation":{"id":1527,"nodeType":"StructuredDocumentation","src":"248:56:9","text":" @title Faucet\n @dev Ownable Faucet Contract"},"fullyImplemented":true,"id":1792,"linearizedBaseContracts":[1792,1016,322,1865],"name":"Faucet","nameLocation":"314:6:9","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1533,"mutability":"mutable","name":"maximumMintAmount","nameLocation":"362:17:9","nodeType":"VariableDeclaration","scope":1792,"src":"345:34:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1532,"name":"uint256","nodeType":"ElementaryTypeName","src":"345:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1537,"mutability":"mutable","name":"_nonMintable","nameLocation":"478:12:9","nodeType":"VariableDeclaration","scope":1792,"src":"444:46:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":1536,"keyType":{"id":1534,"name":"address","nodeType":"ElementaryTypeName","src":"452:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"444:24:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":1535,"name":"bool","nodeType":"ElementaryTypeName","src":"463:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":1539,"mutability":"mutable","name":"_permissioned","nameLocation":"664:13:9","nodeType":"VariableDeclaration","scope":1792,"src":"650:27:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1538,"name":"bool","nodeType":"ElementaryTypeName","src":"650:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"body":{"id":1569,"nodeType":"Block","src":"750:141:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1549,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"764:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"781:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1551,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"773:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1550,"name":"address","nodeType":"ElementaryTypeName","src":"773:7:9","typeDescriptions":{}}},"id":1553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"773:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"764:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1548,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"756:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"756:28:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1556,"nodeType":"ExpressionStatement","src":"756:28:9"},{"expression":{"arguments":[{"id":1558,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"808:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1557,"name":"transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1015,"src":"790:17:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"790:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1560,"nodeType":"ExpressionStatement","src":"790:24:9"},{"expression":{"id":1563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1561,"name":"_permissioned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1539,"src":"820:13:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1562,"name":"permissioned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1543,"src":"836:12:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"820:28:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1564,"nodeType":"ExpressionStatement","src":"820:28:9"},{"expression":{"id":1567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1565,"name":"maximumMintAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1533,"src":"854:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1566,"name":"maxMinAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"874:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"854:32:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1568,"nodeType":"ExpressionStatement","src":"854:32:9"}]},"id":1570,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1541,"mutability":"mutable","name":"owner","nameLocation":"702:5:9","nodeType":"VariableDeclaration","scope":1570,"src":"694:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1540,"name":"address","nodeType":"ElementaryTypeName","src":"694:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1543,"mutability":"mutable","name":"permissioned","nameLocation":"714:12:9","nodeType":"VariableDeclaration","scope":1570,"src":"709:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1542,"name":"bool","nodeType":"ElementaryTypeName","src":"709:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1545,"mutability":"mutable","name":"maxMinAmount","nameLocation":"736:12:9","nodeType":"VariableDeclaration","scope":1570,"src":"728:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1544,"name":"uint256","nodeType":"ElementaryTypeName","src":"728:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"693:56:9"},"returnParameters":{"id":1547,"nodeType":"ParameterList","parameters":[],"src":"750:0:9"},"scope":1792,"src":"682:209:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1588,"nodeType":"Block","src":"1043:127:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1573,"name":"_permissioned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1539,"src":"1053:13:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"74727565","id":1574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1070:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1053:21:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1586,"nodeType":"IfStatement","src":"1049:110:9","trueBody":{"id":1585,"nodeType":"Block","src":"1076:83:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1577,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":952,"src":"1092:5:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1092:7:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1579,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":310,"src":"1103:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_payable_$","typeString":"function () view returns (address payable)"}},"id":1580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1103:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"1092:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":1582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1117:34:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":1576,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1084:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1084:68:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1584,"nodeType":"ExpressionStatement","src":"1084:68:9"}]}},{"id":1587,"nodeType":"PlaceholderStatement","src":"1164:1:9"}]},"documentation":{"id":1571,"nodeType":"StructuredDocumentation","src":"895:110:9","text":" @dev Function modifier, if _permissioned is enabled then msg.sender is required to be the owner"},"id":1589,"name":"onlyOwnerIfPermissioned","nameLocation":"1017:23:9","nodeType":"ModifierDefinition","parameters":{"id":1572,"nodeType":"ParameterList","parameters":[],"src":"1040:2:9"},"src":"1008:162:9","virtual":false,"visibility":"internal"},{"baseFunctions":[1806],"body":{"id":1638,"nodeType":"Block","src":"1333:268:9","statements":[{"expression":{"arguments":[{"id":1608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1347:20:9","subExpression":{"baseExpression":{"id":1605,"name":"_nonMintable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1537,"src":"1348:12:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1607,"indexExpression":{"id":1606,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1592,"src":"1361:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1348:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4572726f723a206e6f74206d696e7461626c65","id":1609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1369:21:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_0ede82dc9ae41bf2b2aee39aeb0f1780b14caf910cda71c7ce68835c5a4ee7f4","typeString":"literal_string \"Error: not mintable\""},"value":"Error: not mintable"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0ede82dc9ae41bf2b2aee39aeb0f1780b14caf910cda71c7ce68835c5a4ee7f4","typeString":"literal_string \"Error: not mintable\""}],"id":1604,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1339:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1339:52:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1611,"nodeType":"ExpressionStatement","src":"1339:52:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1613,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1596,"src":"1412:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1614,"name":"maximumMintAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1533,"src":"1422:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1443:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":1617,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1592,"src":"1462:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1616,"name":"TestnetERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2151,"src":"1449:12:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TestnetERC20_$2151_$","typeString":"type(contract TestnetERC20)"}},"id":1618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1449:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_TestnetERC20_$2151","typeString":"contract TestnetERC20"}},"id":1619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"decimals","nodeType":"MemberAccess","referencedDeclaration":405,"src":"1449:28:9","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint8_$","typeString":"function () view external returns (uint8)"}},"id":1620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1449:30:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"1443:36:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1622,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1442:38:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1422:58:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1412:68:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4572726f723a204d696e74206c696d6974207472616e73616374696f6e206578636565646564","id":1625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1488:40:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_4c70a5af4f9f1eecb7d3eacc63eb554c1747b9b8db0d040cf0e0675c3461312e","typeString":"literal_string \"Error: Mint limit transaction exceeded\""},"value":"Error: Mint limit transaction exceeded"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4c70a5af4f9f1eecb7d3eacc63eb554c1747b9b8db0d040cf0e0675c3461312e","typeString":"literal_string \"Error: Mint limit transaction exceeded\""}],"id":1612,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1397:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1397:137:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1627,"nodeType":"ExpressionStatement","src":"1397:137:9"},{"expression":{"arguments":[{"id":1632,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1594,"src":"1566:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1633,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1596,"src":"1570:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":1629,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1592,"src":"1554:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1628,"name":"TestnetERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2151,"src":"1541:12:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TestnetERC20_$2151_$","typeString":"type(contract TestnetERC20)"}},"id":1630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1541:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_TestnetERC20_$2151","typeString":"contract TestnetERC20"}},"id":1631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mint","nodeType":"MemberAccess","referencedDeclaration":2118,"src":"1541:24:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1541:36:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1635,"nodeType":"ExpressionStatement","src":"1541:36:9"},{"expression":{"id":1636,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1596,"src":"1590:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1603,"id":1637,"nodeType":"Return","src":"1583:13:9"}]},"documentation":{"id":1590,"nodeType":"StructuredDocumentation","src":"1174:23:9","text":"@inheritdoc IFaucet"},"functionSelector":"c6c3bbe6","id":1639,"implemented":true,"kind":"function","modifiers":[{"id":1600,"kind":"modifierInvocation","modifierName":{"id":1599,"name":"onlyOwnerIfPermissioned","nodeType":"IdentifierPath","referencedDeclaration":1589,"src":"1291:23:9"},"nodeType":"ModifierInvocation","src":"1291:23:9"}],"name":"mint","nameLocation":"1209:4:9","nodeType":"FunctionDefinition","overrides":{"id":1598,"nodeType":"OverrideSpecifier","overrides":[],"src":"1282:8:9"},"parameters":{"id":1597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1592,"mutability":"mutable","name":"token","nameLocation":"1227:5:9","nodeType":"VariableDeclaration","scope":1639,"src":"1219:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1591,"name":"address","nodeType":"ElementaryTypeName","src":"1219:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1594,"mutability":"mutable","name":"to","nameLocation":"1246:2:9","nodeType":"VariableDeclaration","scope":1639,"src":"1238:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1593,"name":"address","nodeType":"ElementaryTypeName","src":"1238:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1596,"mutability":"mutable","name":"amount","nameLocation":"1262:6:9","nodeType":"VariableDeclaration","scope":1639,"src":"1254:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1595,"name":"uint256","nodeType":"ElementaryTypeName","src":"1254:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1213:59:9"},"returnParameters":{"id":1603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1602,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1639,"src":"1324:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1601,"name":"uint256","nodeType":"ElementaryTypeName","src":"1324:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1323:9:9"},"scope":1792,"src":"1200:401:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[1812],"body":{"id":1652,"nodeType":"Block","src":"1703:39:9","statements":[{"expression":{"id":1650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1648,"name":"_permissioned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1539,"src":"1709:13:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1649,"name":"permissioned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1642,"src":"1725:12:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1709:28:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1651,"nodeType":"ExpressionStatement","src":"1709:28:9"}]},"documentation":{"id":1640,"nodeType":"StructuredDocumentation","src":"1605:23:9","text":"@inheritdoc IFaucet"},"functionSelector":"1a678cd3","id":1653,"implemented":true,"kind":"function","modifiers":[{"id":1646,"kind":"modifierInvocation","modifierName":{"id":1645,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":965,"src":"1693:9:9"},"nodeType":"ModifierInvocation","src":"1693:9:9"}],"name":"setPermissioned","nameLocation":"1640:15:9","nodeType":"FunctionDefinition","overrides":{"id":1644,"nodeType":"OverrideSpecifier","overrides":[],"src":"1684:8:9"},"parameters":{"id":1643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1642,"mutability":"mutable","name":"permissioned","nameLocation":"1661:12:9","nodeType":"VariableDeclaration","scope":1653,"src":"1656:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1641,"name":"bool","nodeType":"ElementaryTypeName","src":"1656:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1655:19:9"},"returnParameters":{"id":1647,"nodeType":"ParameterList","parameters":[],"src":"1703:0:9"},"scope":1792,"src":"1631:111:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[1818],"body":{"id":1662,"nodeType":"Block","src":"1836:31:9","statements":[{"expression":{"id":1660,"name":"_permissioned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1539,"src":"1849:13:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1659,"id":1661,"nodeType":"Return","src":"1842:20:9"}]},"documentation":{"id":1654,"nodeType":"StructuredDocumentation","src":"1746:23:9","text":"@inheritdoc IFaucet"},"functionSelector":"e2a4157c","id":1663,"implemented":true,"kind":"function","modifiers":[],"name":"isPermissioned","nameLocation":"1781:14:9","nodeType":"FunctionDefinition","overrides":{"id":1656,"nodeType":"OverrideSpecifier","overrides":[],"src":"1812:8:9"},"parameters":{"id":1655,"nodeType":"ParameterList","parameters":[],"src":"1795:2:9"},"returnParameters":{"id":1659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1658,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1663,"src":"1830:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1657,"name":"bool","nodeType":"ElementaryTypeName","src":"1830:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1829:6:9"},"scope":1792,"src":"1772:95:9","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[1826],"body":{"id":1681,"nodeType":"Block","src":"1974:40:9","statements":[{"expression":{"id":1679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1674,"name":"_nonMintable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1537,"src":"1980:12:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1676,"indexExpression":{"id":1675,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1666,"src":"1993:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1980:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2002:7:9","subExpression":{"id":1677,"name":"active","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1668,"src":"2003:6:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1980:29:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1680,"nodeType":"ExpressionStatement","src":"1980:29:9"}]},"documentation":{"id":1664,"nodeType":"StructuredDocumentation","src":"1871:23:9","text":"@inheritdoc IFaucet"},"functionSelector":"f7eb06c4","id":1682,"implemented":true,"kind":"function","modifiers":[{"id":1672,"kind":"modifierInvocation","modifierName":{"id":1671,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":965,"src":"1964:9:9"},"nodeType":"ModifierInvocation","src":"1964:9:9"}],"name":"setMintable","nameLocation":"1906:11:9","nodeType":"FunctionDefinition","overrides":{"id":1670,"nodeType":"OverrideSpecifier","overrides":[],"src":"1955:8:9"},"parameters":{"id":1669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1666,"mutability":"mutable","name":"asset","nameLocation":"1926:5:9","nodeType":"VariableDeclaration","scope":1682,"src":"1918:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1665,"name":"address","nodeType":"ElementaryTypeName","src":"1918:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1668,"mutability":"mutable","name":"active","nameLocation":"1938:6:9","nodeType":"VariableDeclaration","scope":1682,"src":"1933:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1667,"name":"bool","nodeType":"ElementaryTypeName","src":"1933:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1917:28:9"},"returnParameters":{"id":1673,"nodeType":"ParameterList","parameters":[],"src":"1974:0:9"},"scope":1792,"src":"1897:117:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[1834],"body":{"id":1696,"nodeType":"Block","src":"2117:38:9","statements":[{"expression":{"id":1694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2130:20:9","subExpression":{"baseExpression":{"id":1691,"name":"_nonMintable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1537,"src":"2131:12:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1693,"indexExpression":{"id":1692,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1685,"src":"2144:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2131:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1690,"id":1695,"nodeType":"Return","src":"2123:27:9"}]},"documentation":{"id":1683,"nodeType":"StructuredDocumentation","src":"2018:23:9","text":"@inheritdoc IFaucet"},"functionSelector":"222b15fb","id":1697,"implemented":true,"kind":"function","modifiers":[],"name":"isMintable","nameLocation":"2053:10:9","nodeType":"FunctionDefinition","overrides":{"id":1687,"nodeType":"OverrideSpecifier","overrides":[],"src":"2093:8:9"},"parameters":{"id":1686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1685,"mutability":"mutable","name":"asset","nameLocation":"2072:5:9","nodeType":"VariableDeclaration","scope":1697,"src":"2064:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1684,"name":"address","nodeType":"ElementaryTypeName","src":"2064:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2063:15:9"},"returnParameters":{"id":1690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1689,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1697,"src":"2111:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1688,"name":"bool","nodeType":"ElementaryTypeName","src":"2111:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2110:6:9"},"scope":1792,"src":"2044:111:9","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[1843],"body":{"id":1731,"nodeType":"Block","src":"2312:131:9","statements":[{"body":{"id":1729,"nodeType":"Block","src":"2370:69:9","statements":[{"expression":{"arguments":[{"id":1726,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1703,"src":"2423:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"baseExpression":{"id":1721,"name":"childContracts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1701,"src":"2386:14:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":1723,"indexExpression":{"id":1722,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1710,"src":"2401:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2386:17:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1720,"name":"Ownable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1016,"src":"2378:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Ownable_$1016_$","typeString":"type(contract Ownable)"}},"id":1724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2378:26:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_Ownable_$1016","typeString":"contract Ownable"}},"id":1725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferOwnership","nodeType":"MemberAccess","referencedDeclaration":1015,"src":"2378:44:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$returns$__$","typeString":"function (address) external"}},"id":1727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2378:54:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1728,"nodeType":"ExpressionStatement","src":"2378:54:9"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1713,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1710,"src":"2338:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1714,"name":"childContracts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1701,"src":"2342:14:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":1715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2342:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2338:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1730,"initializationExpression":{"assignments":[1710],"declarations":[{"constant":false,"id":1710,"mutability":"mutable","name":"i","nameLocation":"2331:1:9","nodeType":"VariableDeclaration","scope":1730,"src":"2323:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1709,"name":"uint256","nodeType":"ElementaryTypeName","src":"2323:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1712,"initialValue":{"hexValue":"30","id":1711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2335:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2323:13:9"},"loopExpression":{"expression":{"id":1718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2365:3:9","subExpression":{"id":1717,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1710,"src":"2365:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1719,"nodeType":"ExpressionStatement","src":"2365:3:9"},"nodeType":"ForStatement","src":"2318:121:9"}]},"documentation":{"id":1698,"nodeType":"StructuredDocumentation","src":"2159:23:9","text":"@inheritdoc IFaucet"},"functionSelector":"506f26cc","id":1732,"implemented":true,"kind":"function","modifiers":[{"id":1707,"kind":"modifierInvocation","modifierName":{"id":1706,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":965,"src":"2302:9:9"},"nodeType":"ModifierInvocation","src":"2302:9:9"}],"name":"transferOwnershipOfChild","nameLocation":"2194:24:9","nodeType":"FunctionDefinition","overrides":{"id":1705,"nodeType":"OverrideSpecifier","overrides":[],"src":"2293:8:9"},"parameters":{"id":1704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1701,"mutability":"mutable","name":"childContracts","nameLocation":"2243:14:9","nodeType":"VariableDeclaration","scope":1732,"src":"2224:33:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1699,"name":"address","nodeType":"ElementaryTypeName","src":"2224:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1700,"nodeType":"ArrayTypeName","src":"2224:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1703,"mutability":"mutable","name":"newOwner","nameLocation":"2271:8:9","nodeType":"VariableDeclaration","scope":1732,"src":"2263:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1702,"name":"address","nodeType":"ElementaryTypeName","src":"2263:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2218:65:9"},"returnParameters":{"id":1708,"nodeType":"ParameterList","parameters":[],"src":"2312:0:9"},"scope":1792,"src":"2185:258:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[1852],"body":{"id":1766,"nodeType":"Block","src":"2589:128:9","statements":[{"body":{"id":1764,"nodeType":"Block","src":"2647:66:9","statements":[{"expression":{"arguments":[{"id":1761,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1738,"src":"2700:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"arguments":[{"baseExpression":{"id":1756,"name":"childContracts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1736,"src":"2668:14:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":1758,"indexExpression":{"id":1757,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1745,"src":"2683:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2668:17:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1755,"name":"TestnetERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2151,"src":"2655:12:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TestnetERC20_$2151_$","typeString":"type(contract TestnetERC20)"}},"id":1759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2655:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_TestnetERC20_$2151","typeString":"contract TestnetERC20"}},"id":1760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"setProtected","nodeType":"MemberAccess","referencedDeclaration":2142,"src":"2655:44:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bool_$returns$__$","typeString":"function (bool) external"}},"id":1762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2655:51:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1763,"nodeType":"ExpressionStatement","src":"2655:51:9"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1748,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1745,"src":"2615:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1749,"name":"childContracts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1736,"src":"2619:14:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":1750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2619:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2615:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1765,"initializationExpression":{"assignments":[1745],"declarations":[{"constant":false,"id":1745,"mutability":"mutable","name":"i","nameLocation":"2608:1:9","nodeType":"VariableDeclaration","scope":1765,"src":"2600:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1744,"name":"uint256","nodeType":"ElementaryTypeName","src":"2600:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1747,"initialValue":{"hexValue":"30","id":1746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2612:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2600:13:9"},"loopExpression":{"expression":{"id":1753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2642:3:9","subExpression":{"id":1752,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1745,"src":"2642:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1754,"nodeType":"ExpressionStatement","src":"2642:3:9"},"nodeType":"ForStatement","src":"2595:118:9"}]},"documentation":{"id":1733,"nodeType":"StructuredDocumentation","src":"2447:23:9","text":"@inheritdoc IFaucet"},"functionSelector":"ca51a903","id":1767,"implemented":true,"kind":"function","modifiers":[{"id":1742,"kind":"modifierInvocation","modifierName":{"id":1741,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":965,"src":"2579:9:9"},"nodeType":"ModifierInvocation","src":"2579:9:9"}],"name":"setProtectedOfChild","nameLocation":"2482:19:9","nodeType":"FunctionDefinition","overrides":{"id":1740,"nodeType":"OverrideSpecifier","overrides":[],"src":"2570:8:9"},"parameters":{"id":1739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1736,"mutability":"mutable","name":"childContracts","nameLocation":"2526:14:9","nodeType":"VariableDeclaration","scope":1767,"src":"2507:33:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1734,"name":"address","nodeType":"ElementaryTypeName","src":"2507:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1735,"nodeType":"ArrayTypeName","src":"2507:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1738,"mutability":"mutable","name":"state","nameLocation":"2551:5:9","nodeType":"VariableDeclaration","scope":1767,"src":"2546:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1737,"name":"bool","nodeType":"ElementaryTypeName","src":"2546:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2501:59:9"},"returnParameters":{"id":1743,"nodeType":"ParameterList","parameters":[],"src":"2589:0:9"},"scope":1792,"src":"2473:244:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[1858],"body":{"id":1780,"nodeType":"Block","src":"2832:47:9","statements":[{"expression":{"id":1778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1776,"name":"maximumMintAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1533,"src":"2838:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1777,"name":"newMaxMintAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1770,"src":"2858:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2838:36:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1779,"nodeType":"ExpressionStatement","src":"2838:36:9"}]},"documentation":{"id":1768,"nodeType":"StructuredDocumentation","src":"2722:23:9","text":"@inheritdoc IFaucet"},"functionSelector":"9420d476","id":1781,"implemented":true,"kind":"function","modifiers":[{"id":1774,"kind":"modifierInvocation","modifierName":{"id":1773,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":965,"src":"2822:9:9"},"nodeType":"ModifierInvocation","src":"2822:9:9"}],"name":"setMaximumMintAmount","nameLocation":"2757:20:9","nodeType":"FunctionDefinition","overrides":{"id":1772,"nodeType":"OverrideSpecifier","overrides":[],"src":"2813:8:9"},"parameters":{"id":1771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1770,"mutability":"mutable","name":"newMaxMintAmount","nameLocation":"2786:16:9","nodeType":"VariableDeclaration","scope":1781,"src":"2778:24:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1769,"name":"uint256","nodeType":"ElementaryTypeName","src":"2778:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2777:26:9"},"returnParameters":{"id":1775,"nodeType":"ParameterList","parameters":[],"src":"2832:0:9"},"scope":1792,"src":"2748:131:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[1864],"body":{"id":1790,"nodeType":"Block","src":"2982:35:9","statements":[{"expression":{"id":1788,"name":"maximumMintAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1533,"src":"2995:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1787,"id":1789,"nodeType":"Return","src":"2988:24:9"}]},"documentation":{"id":1782,"nodeType":"StructuredDocumentation","src":"2883:23:9","text":"@inheritdoc IFaucet"},"functionSelector":"dd26b1d3","id":1791,"implemented":true,"kind":"function","modifiers":[],"name":"getMaximumMintAmount","nameLocation":"2918:20:9","nodeType":"FunctionDefinition","overrides":{"id":1784,"nodeType":"OverrideSpecifier","overrides":[],"src":"2955:8:9"},"parameters":{"id":1783,"nodeType":"ParameterList","parameters":[],"src":"2938:2:9"},"returnParameters":{"id":1787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1786,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1791,"src":"2973:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1785,"name":"uint256","nodeType":"ElementaryTypeName","src":"2973:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2972:9:9"},"scope":1792,"src":"2909:108:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1793,"src":"305:2714:9","usedErrors":[]}],"src":"37:2983:9"},"id":9},"contracts/mocks/testnet-helpers/IFaucet.sol":{"ast":{"absolutePath":"contracts/mocks/testnet-helpers/IFaucet.sol","exportedSymbols":{"IFaucet":[1865]},"id":1866,"license":"BUSL-1.1","nodeType":"SourceUnit","nodes":[{"id":1794,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"37:23:10"},{"abstract":false,"baseContracts":[],"canonicalName":"IFaucet","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1865,"linearizedBaseContracts":[1865],"name":"IFaucet","nameLocation":"72:7:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1795,"nodeType":"StructuredDocumentation","src":"84:277:10","text":" @notice Function to mint Testnet tokens to the destination address\n @param token The address of the token to perform the mint\n @param to The address to send the minted tokens\n @param amount The amount of tokens to mint\n @return The amount minted*"},"functionSelector":"c6c3bbe6","id":1806,"implemented":false,"kind":"function","modifiers":[],"name":"mint","nameLocation":"373:4:10","nodeType":"FunctionDefinition","parameters":{"id":1802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1797,"mutability":"mutable","name":"token","nameLocation":"386:5:10","nodeType":"VariableDeclaration","scope":1806,"src":"378:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1796,"name":"address","nodeType":"ElementaryTypeName","src":"378:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1799,"mutability":"mutable","name":"to","nameLocation":"401:2:10","nodeType":"VariableDeclaration","scope":1806,"src":"393:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1798,"name":"address","nodeType":"ElementaryTypeName","src":"393:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1801,"mutability":"mutable","name":"amount","nameLocation":"413:6:10","nodeType":"VariableDeclaration","scope":1806,"src":"405:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1800,"name":"uint256","nodeType":"ElementaryTypeName","src":"405:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"377:43:10"},"returnParameters":{"id":1805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1804,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1806,"src":"439:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1803,"name":"uint256","nodeType":"ElementaryTypeName","src":"439:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"438:9:10"},"scope":1865,"src":"364:84:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1807,"nodeType":"StructuredDocumentation","src":"452:198:10","text":" @notice Enable or disable the need of authentication to call `mint` function\n @param value If true, ask for authentication at `mint` function, if false, disable the authentication"},"functionSelector":"1a678cd3","id":1812,"implemented":false,"kind":"function","modifiers":[],"name":"setPermissioned","nameLocation":"662:15:10","nodeType":"FunctionDefinition","parameters":{"id":1810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1809,"mutability":"mutable","name":"value","nameLocation":"683:5:10","nodeType":"VariableDeclaration","scope":1812,"src":"678:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1808,"name":"bool","nodeType":"ElementaryTypeName","src":"678:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"677:12:10"},"returnParameters":{"id":1811,"nodeType":"ParameterList","parameters":[],"src":"698:0:10"},"scope":1865,"src":"653:46:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1813,"nodeType":"StructuredDocumentation","src":"703:168:10","text":" @notice Getter to determine if permissioned mode is enabled or disabled\n @return Returns a boolean, if true the mode is enabled, if false is disabled"},"functionSelector":"e2a4157c","id":1818,"implemented":false,"kind":"function","modifiers":[],"name":"isPermissioned","nameLocation":"883:14:10","nodeType":"FunctionDefinition","parameters":{"id":1814,"nodeType":"ParameterList","parameters":[],"src":"897:2:10"},"returnParameters":{"id":1817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1816,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1818,"src":"923:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1815,"name":"bool","nodeType":"ElementaryTypeName","src":"923:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"922:6:10"},"scope":1865,"src":"874:55:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1819,"nodeType":"StructuredDocumentation","src":"933:167:10","text":" @notice Enable or disable the minting of the faucet asset\n @param asset The address of the asset\n @param active True to enable, false to disable"},"functionSelector":"f7eb06c4","id":1826,"implemented":false,"kind":"function","modifiers":[],"name":"setMintable","nameLocation":"1112:11:10","nodeType":"FunctionDefinition","parameters":{"id":1824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1821,"mutability":"mutable","name":"asset","nameLocation":"1132:5:10","nodeType":"VariableDeclaration","scope":1826,"src":"1124:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1820,"name":"address","nodeType":"ElementaryTypeName","src":"1124:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1823,"mutability":"mutable","name":"active","nameLocation":"1144:6:10","nodeType":"VariableDeclaration","scope":1826,"src":"1139:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1822,"name":"bool","nodeType":"ElementaryTypeName","src":"1139:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1123:28:10"},"returnParameters":{"id":1825,"nodeType":"ParameterList","parameters":[],"src":"1160:0:10"},"scope":1865,"src":"1103:58:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1827,"nodeType":"StructuredDocumentation","src":"1165:163:10","text":" @notice Returns whether the asset is mintable\n @param asset The address of the asset\n @return True if the asset is mintable, false otherwise"},"functionSelector":"222b15fb","id":1834,"implemented":false,"kind":"function","modifiers":[],"name":"isMintable","nameLocation":"1340:10:10","nodeType":"FunctionDefinition","parameters":{"id":1830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1829,"mutability":"mutable","name":"asset","nameLocation":"1359:5:10","nodeType":"VariableDeclaration","scope":1834,"src":"1351:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1828,"name":"address","nodeType":"ElementaryTypeName","src":"1351:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1350:15:10"},"returnParameters":{"id":1833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1832,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1834,"src":"1389:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1831,"name":"bool","nodeType":"ElementaryTypeName","src":"1389:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1388:6:10"},"scope":1865,"src":"1331:64:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1835,"nodeType":"StructuredDocumentation","src":"1399:176:10","text":" @notice Transfer the ownership of child contracts\n @param childContracts A list of child contract addresses\n @param newOwner The address of the new owner"},"functionSelector":"506f26cc","id":1843,"implemented":false,"kind":"function","modifiers":[],"name":"transferOwnershipOfChild","nameLocation":"1587:24:10","nodeType":"FunctionDefinition","parameters":{"id":1841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1838,"mutability":"mutable","name":"childContracts","nameLocation":"1631:14:10","nodeType":"VariableDeclaration","scope":1843,"src":"1612:33:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1836,"name":"address","nodeType":"ElementaryTypeName","src":"1612:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1837,"nodeType":"ArrayTypeName","src":"1612:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1840,"mutability":"mutable","name":"newOwner","nameLocation":"1655:8:10","nodeType":"VariableDeclaration","scope":1843,"src":"1647:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1839,"name":"address","nodeType":"ElementaryTypeName","src":"1647:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1611:53:10"},"returnParameters":{"id":1842,"nodeType":"ParameterList","parameters":[],"src":"1673:0:10"},"scope":1865,"src":"1578:96:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1844,"nodeType":"StructuredDocumentation","src":"1678:236:10","text":" @notice Updates protection of minting feature of child token contracts\n @param childContracts A list of child token contract addresses\n @param state True if tokens are only mintable through Faucet, false otherwise"},"functionSelector":"ca51a903","id":1852,"implemented":false,"kind":"function","modifiers":[],"name":"setProtectedOfChild","nameLocation":"1926:19:10","nodeType":"FunctionDefinition","parameters":{"id":1850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1847,"mutability":"mutable","name":"childContracts","nameLocation":"1965:14:10","nodeType":"VariableDeclaration","scope":1852,"src":"1946:33:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1845,"name":"address","nodeType":"ElementaryTypeName","src":"1946:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1846,"nodeType":"ArrayTypeName","src":"1946:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1849,"mutability":"mutable","name":"state","nameLocation":"1986:5:10","nodeType":"VariableDeclaration","scope":1852,"src":"1981:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1848,"name":"bool","nodeType":"ElementaryTypeName","src":"1981:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1945:47:10"},"returnParameters":{"id":1851,"nodeType":"ParameterList","parameters":[],"src":"2001:0:10"},"scope":1865,"src":"1917:85:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1853,"nodeType":"StructuredDocumentation","src":"2006:171:10","text":" @notice Updates the maximum amount of tokens per mint allowed\n @param newMaxMintAmount The new value of maximum amount of tokens per mint (whole tokens)"},"functionSelector":"9420d476","id":1858,"implemented":false,"kind":"function","modifiers":[],"name":"setMaximumMintAmount","nameLocation":"2189:20:10","nodeType":"FunctionDefinition","parameters":{"id":1856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1855,"mutability":"mutable","name":"newMaxMintAmount","nameLocation":"2218:16:10","nodeType":"VariableDeclaration","scope":1858,"src":"2210:24:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1854,"name":"uint256","nodeType":"ElementaryTypeName","src":"2210:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2209:26:10"},"returnParameters":{"id":1857,"nodeType":"ParameterList","parameters":[],"src":"2244:0:10"},"scope":1865,"src":"2180:65:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1859,"nodeType":"StructuredDocumentation","src":"2249:150:10","text":" @notice Returns the maximum amount of tokens per mint allowed\n @return The maximum amount of tokens per mint allowed (whole tokens)"},"functionSelector":"dd26b1d3","id":1864,"implemented":false,"kind":"function","modifiers":[],"name":"getMaximumMintAmount","nameLocation":"2411:20:10","nodeType":"FunctionDefinition","parameters":{"id":1860,"nodeType":"ParameterList","parameters":[],"src":"2431:2:10"},"returnParameters":{"id":1863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1862,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1864,"src":"2457:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1861,"name":"uint256","nodeType":"ElementaryTypeName","src":"2457:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2456:9:10"},"scope":1865,"src":"2402:64:10","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1866,"src":"62:2406:10","usedErrors":[]}],"src":"37:2432:10"},"id":10},"contracts/mocks/testnet-helpers/TestnetERC20.sol":{"ast":{"absolutePath":"contracts/mocks/testnet-helpers/TestnetERC20.sol","exportedSymbols":{"ERC20":[829],"IERC20WithPermit":[1411],"Ownable":[1016],"TestnetERC20":[2151]},"id":2152,"license":"BUSL-1.1","nodeType":"SourceUnit","nodes":[{"id":1867,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"37:23:11"},{"absolutePath":"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol","file":"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol","id":1869,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2152,"sourceUnit":1017,"src":"62:96:11","symbolAliases":[{"foreign":{"id":1868,"name":"Ownable","nodeType":"Identifier","overloadedDeclarations":[],"src":"70:7:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/ERC20.sol","file":"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/ERC20.sol","id":1871,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2152,"sourceUnit":830,"src":"159:92:11","symbolAliases":[{"foreign":{"id":1870,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"src":"167:5:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@aave/core-v3/contracts/interfaces/IERC20WithPermit.sol","file":"@aave/core-v3/contracts/interfaces/IERC20WithPermit.sol","id":1873,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2152,"sourceUnit":1412,"src":"252:89:11","symbolAliases":[{"foreign":{"id":1872,"name":"IERC20WithPermit","nodeType":"Identifier","overloadedDeclarations":[],"src":"260:16:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1875,"name":"IERC20WithPermit","nodeType":"IdentifierPath","referencedDeclaration":1411,"src":"427:16:11"},"id":1876,"nodeType":"InheritanceSpecifier","src":"427:16:11"},{"baseName":{"id":1877,"name":"ERC20","nodeType":"IdentifierPath","referencedDeclaration":829,"src":"445:5:11"},"id":1878,"nodeType":"InheritanceSpecifier","src":"445:5:11"},{"baseName":{"id":1879,"name":"Ownable","nodeType":"IdentifierPath","referencedDeclaration":1016,"src":"452:7:11"},"id":1880,"nodeType":"InheritanceSpecifier","src":"452:7:11"}],"canonicalName":"TestnetERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":1874,"nodeType":"StructuredDocumentation","src":"343:58:11","text":" @title TestnetERC20\n @dev ERC20 minting logic"},"fullyImplemented":true,"id":2151,"linearizedBaseContracts":[2151,1016,829,1411,907,322],"name":"TestnetERC20","nameLocation":"411:12:11","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"78160376","id":1886,"mutability":"constant","name":"EIP712_REVISION","nameLocation":"486:15:11","nodeType":"VariableDeclaration","scope":2151,"src":"464:50:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1881,"name":"bytes","nodeType":"ElementaryTypeName","src":"464:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":{"arguments":[{"hexValue":"31","id":1884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"510:3:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""}],"id":1883,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"504:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1882,"name":"bytes","nodeType":"ElementaryTypeName","src":"504:5:11","typeDescriptions":{}}},"id":1885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"504:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"visibility":"public"},{"constant":true,"id":1891,"mutability":"constant","name":"EIP712_DOMAIN","nameLocation":"544:13:11","nodeType":"VariableDeclaration","scope":2151,"src":"518:141:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1887,"name":"bytes32","nodeType":"ElementaryTypeName","src":"518:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":1889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"574:84:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":1888,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"564:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"564:95:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":true,"functionSelector":"30adf81f","id":1896,"mutability":"constant","name":"PERMIT_TYPEHASH","nameLocation":"687:15:11","nodeType":"VariableDeclaration","scope":2151,"src":"663:141:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1892,"name":"bytes32","nodeType":"ElementaryTypeName","src":"663:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529","id":1894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"719:84:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""},"value":"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""}],"id":1893,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"709:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"709:95:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":false,"id":1900,"mutability":"mutable","name":"_nonces","nameLocation":"892:7:11","nodeType":"VariableDeclaration","scope":2151,"src":"855:44:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1899,"keyType":{"id":1897,"name":"address","nodeType":"ElementaryTypeName","src":"863:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"855:27:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":1898,"name":"uint256","nodeType":"ElementaryTypeName","src":"874:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"},{"constant":false,"functionSelector":"3644e515","id":1902,"mutability":"mutable","name":"DOMAIN_SEPARATOR","nameLocation":"919:16:11","nodeType":"VariableDeclaration","scope":2151,"src":"904:31:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1901,"name":"bytes32","nodeType":"ElementaryTypeName","src":"904:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":false,"id":1904,"mutability":"mutable","name":"_protected","nameLocation":"954:10:11","nodeType":"VariableDeclaration","scope":2151,"src":"940:24:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1903,"name":"bool","nodeType":"ElementaryTypeName","src":"940:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"body":{"id":1922,"nodeType":"Block","src":"1111:124:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1907,"name":"_protected","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"1121:10:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"74727565","id":1908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1135:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1121:18:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1920,"nodeType":"IfStatement","src":"1117:107:11","trueBody":{"id":1919,"nodeType":"Block","src":"1141:83:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1911,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":952,"src":"1157:5:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1157:7:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1913,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":310,"src":"1168:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_payable_$","typeString":"function () view returns (address payable)"}},"id":1914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1168:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"1157:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":1916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1182:34:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":1910,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1149:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1149:68:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1918,"nodeType":"ExpressionStatement","src":"1149:68:11"}]}},{"id":1921,"nodeType":"PlaceholderStatement","src":"1229:1:11"}]},"documentation":{"id":1905,"nodeType":"StructuredDocumentation","src":"969:107:11","text":" @dev Function modifier, if _protected is enabled then msg.sender is required to be the owner"},"id":1923,"name":"onlyOwnerIfProtected","nameLocation":"1088:20:11","nodeType":"ModifierDefinition","parameters":{"id":1906,"nodeType":"ParameterList","parameters":[],"src":"1108:2:11"},"src":"1079:156:11","virtual":false,"visibility":"internal"},{"body":{"id":1987,"nodeType":"Block","src":"1364:357:11","statements":[{"assignments":[1939],"declarations":[{"constant":false,"id":1939,"mutability":"mutable","name":"chainId","nameLocation":"1378:7:11","nodeType":"VariableDeclaration","scope":1987,"src":"1370:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1938,"name":"uint256","nodeType":"ElementaryTypeName","src":"1370:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1942,"initialValue":{"expression":{"id":1940,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1388:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"chainid","nodeType":"MemberAccess","src":"1388:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1370:31:11"},{"expression":{"id":1964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1943,"name":"DOMAIN_SEPARATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1902,"src":"1408:16:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":1947,"name":"EIP712_DOMAIN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1891,"src":"1464:13:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"arguments":[{"id":1951,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1925,"src":"1503:4:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1950,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1497:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1949,"name":"bytes","nodeType":"ElementaryTypeName","src":"1497:5:11","typeDescriptions":{}}},"id":1952,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1497:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1948,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1487:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1487:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":1955,"name":"EIP712_REVISION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1886,"src":"1529:15:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1954,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1519:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1519:26:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1957,"name":"chainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1939,"src":"1555:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":1960,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1580:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_TestnetERC20_$2151","typeString":"contract TestnetERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_TestnetERC20_$2151","typeString":"contract TestnetERC20"}],"id":1959,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1572:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1958,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:11","typeDescriptions":{}}},"id":1961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1572:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1945,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1444:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1946,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"1444:10:11","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1444:149:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1944,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1427:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1427:172:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1408:191:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1965,"nodeType":"ExpressionStatement","src":"1408:191:11"},{"expression":{"arguments":[{"id":1967,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1929,"src":"1620:8:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1966,"name":"_setupDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":817,"src":"1605:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":1968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1605:24:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1969,"nodeType":"ExpressionStatement","src":"1605:24:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1971,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"1643:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1660:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1973,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1652:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1972,"name":"address","nodeType":"ElementaryTypeName","src":"1652:7:11","typeDescriptions":{}}},"id":1975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1652:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1643:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1970,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1635:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1635:28:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1978,"nodeType":"ExpressionStatement","src":"1635:28:11"},{"expression":{"arguments":[{"id":1980,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"1687:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1979,"name":"transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1015,"src":"1669:17:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1669:24:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1982,"nodeType":"ExpressionStatement","src":"1669:24:11"},{"expression":{"id":1985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1983,"name":"_protected","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"1699:10:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1712:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1699:17:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1986,"nodeType":"ExpressionStatement","src":"1699:17:11"}]},"id":1988,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":1934,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1925,"src":"1350:4:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1935,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1927,"src":"1356:6:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":1936,"kind":"baseConstructorSpecifier","modifierName":{"id":1933,"name":"ERC20","nodeType":"IdentifierPath","referencedDeclaration":829,"src":"1344:5:11"},"nodeType":"ModifierInvocation","src":"1344:19:11"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1925,"mutability":"mutable","name":"name","nameLocation":"1270:4:11","nodeType":"VariableDeclaration","scope":1988,"src":"1256:18:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1924,"name":"string","nodeType":"ElementaryTypeName","src":"1256:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1927,"mutability":"mutable","name":"symbol","nameLocation":"1294:6:11","nodeType":"VariableDeclaration","scope":1988,"src":"1280:20:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1926,"name":"string","nodeType":"ElementaryTypeName","src":"1280:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1929,"mutability":"mutable","name":"decimals","nameLocation":"1312:8:11","nodeType":"VariableDeclaration","scope":1988,"src":"1306:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1928,"name":"uint8","nodeType":"ElementaryTypeName","src":"1306:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1931,"mutability":"mutable","name":"owner","nameLocation":"1334:5:11","nodeType":"VariableDeclaration","scope":1988,"src":"1326:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1930,"name":"address","nodeType":"ElementaryTypeName","src":"1326:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1250:93:11"},"returnParameters":{"id":1937,"nodeType":"ParameterList","parameters":[],"src":"1364:0:11"},"scope":2151,"src":"1239:482:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1410],"body":{"id":2078,"nodeType":"Block","src":"1922:567:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2008,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1991,"src":"1936:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1953:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2010,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1945:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2009,"name":"address","nodeType":"ElementaryTypeName","src":"1945:7:11","typeDescriptions":{}}},"id":2012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1945:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1936:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"494e56414c49445f4f574e4552","id":2014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1957:15:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_a30e2b4f22d955e30086ae3aef0adfd87eec9d0d3f055d6aa9af61f522dda886","typeString":"literal_string \"INVALID_OWNER\""},"value":"INVALID_OWNER"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a30e2b4f22d955e30086ae3aef0adfd87eec9d0d3f055d6aa9af61f522dda886","typeString":"literal_string \"INVALID_OWNER\""}],"id":2007,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1928:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1928:45:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2016,"nodeType":"ExpressionStatement","src":"1928:45:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2018,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2018:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"2018:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":2020,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1997,"src":"2037:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2018:27:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"494e56414c49445f45585049524154494f4e","id":2022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2047:20:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fe3e5cf49f72bf8a6a8455c3e990f8479f5dfa09ac808886f330a39b0029c2d","typeString":"literal_string \"INVALID_EXPIRATION\""},"value":"INVALID_EXPIRATION"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9fe3e5cf49f72bf8a6a8455c3e990f8479f5dfa09ac808886f330a39b0029c2d","typeString":"literal_string \"INVALID_EXPIRATION\""}],"id":2017,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2010:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2010:58:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2024,"nodeType":"ExpressionStatement","src":"2010:58:11"},{"assignments":[2026],"declarations":[{"constant":false,"id":2026,"mutability":"mutable","name":"currentValidNonce","nameLocation":"2082:17:11","nodeType":"VariableDeclaration","scope":2078,"src":"2074:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2025,"name":"uint256","nodeType":"ElementaryTypeName","src":"2074:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2030,"initialValue":{"baseExpression":{"id":2027,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1900,"src":"2102:7:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2029,"indexExpression":{"id":2028,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1991,"src":"2110:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2102:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2074:42:11"},{"assignments":[2032],"declarations":[{"constant":false,"id":2032,"mutability":"mutable","name":"digest","nameLocation":"2130:6:11","nodeType":"VariableDeclaration","scope":2078,"src":"2122:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2031,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2122:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2051,"initialValue":{"arguments":[{"arguments":[{"hexValue":"1901","id":2036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2182:10:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","typeString":"literal_string hex\"1901\""},"value":"\u0019\u0001"},{"id":2037,"name":"DOMAIN_SEPARATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1902,"src":"2202:16:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"arguments":[{"id":2041,"name":"PERMIT_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1896,"src":"2249:15:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2042,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1991,"src":"2266:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2043,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1993,"src":"2273:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2044,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1995,"src":"2282:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2045,"name":"currentValidNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2026,"src":"2289:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2046,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1997,"src":"2308:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2039,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2238:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2040,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"2238:10:11","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2238:79:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2038,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2228:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2228:90:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","typeString":"literal_string hex\"1901\""},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2034,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2156:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2035,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"2156:16:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2156:170:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2033,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2139:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2139:193:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2122:210:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2053,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1991,"src":"2346:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":2055,"name":"digest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2032,"src":"2365:6:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2056,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"2373:1:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2057,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2001,"src":"2376:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2058,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2003,"src":"2379:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2054,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"2355:9:11","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":2059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2355:26:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2346:35:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"494e56414c49445f5349474e4154555245","id":2061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2383:19:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_5e2e9eaa2d734966dea0900deacd15b20129fbce05255d633a3ce5ebca181b88","typeString":"literal_string \"INVALID_SIGNATURE\""},"value":"INVALID_SIGNATURE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5e2e9eaa2d734966dea0900deacd15b20129fbce05255d633a3ce5ebca181b88","typeString":"literal_string \"INVALID_SIGNATURE\""}],"id":2052,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2338:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2338:65:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2063,"nodeType":"ExpressionStatement","src":"2338:65:11"},{"expression":{"id":2070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2064,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1900,"src":"2409:7:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2066,"indexExpression":{"id":2065,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1991,"src":"2417:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2409:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2067,"name":"currentValidNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2026,"src":"2426:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2446:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2426:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2409:38:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2071,"nodeType":"ExpressionStatement","src":"2409:38:11"},{"expression":{"arguments":[{"id":2073,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1991,"src":"2462:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2074,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1993,"src":"2469:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2075,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1995,"src":"2478:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2072,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"2453:8:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2453:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2077,"nodeType":"ExpressionStatement","src":"2453:31:11"}]},"documentation":{"id":1989,"nodeType":"StructuredDocumentation","src":"1725:32:11","text":"@inheritdoc IERC20WithPermit"},"functionSelector":"d505accf","id":2079,"implemented":true,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1769:6:11","nodeType":"FunctionDefinition","overrides":{"id":2005,"nodeType":"OverrideSpecifier","overrides":[],"src":"1913:8:11"},"parameters":{"id":2004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1991,"mutability":"mutable","name":"owner","nameLocation":"1789:5:11","nodeType":"VariableDeclaration","scope":2079,"src":"1781:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1990,"name":"address","nodeType":"ElementaryTypeName","src":"1781:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1993,"mutability":"mutable","name":"spender","nameLocation":"1808:7:11","nodeType":"VariableDeclaration","scope":2079,"src":"1800:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1992,"name":"address","nodeType":"ElementaryTypeName","src":"1800:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1995,"mutability":"mutable","name":"value","nameLocation":"1829:5:11","nodeType":"VariableDeclaration","scope":2079,"src":"1821:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1994,"name":"uint256","nodeType":"ElementaryTypeName","src":"1821:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1997,"mutability":"mutable","name":"deadline","nameLocation":"1848:8:11","nodeType":"VariableDeclaration","scope":2079,"src":"1840:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1996,"name":"uint256","nodeType":"ElementaryTypeName","src":"1840:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1999,"mutability":"mutable","name":"v","nameLocation":"1868:1:11","nodeType":"VariableDeclaration","scope":2079,"src":"1862:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1998,"name":"uint8","nodeType":"ElementaryTypeName","src":"1862:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2001,"mutability":"mutable","name":"r","nameLocation":"1883:1:11","nodeType":"VariableDeclaration","scope":2079,"src":"1875:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2000,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1875:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2003,"mutability":"mutable","name":"s","nameLocation":"1898:1:11","nodeType":"VariableDeclaration","scope":2079,"src":"1890:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2002,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1890:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1775:128:11"},"returnParameters":{"id":2006,"nodeType":"ParameterList","parameters":[],"src":"1922:0:11"},"scope":2151,"src":"1760:729:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2097,"nodeType":"Block","src":"2738:54:11","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2090,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":310,"src":"2750:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_payable_$","typeString":"function () view returns (address payable)"}},"id":2091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2750:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":2092,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2082,"src":"2764:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2089,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":705,"src":"2744:5:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2744:26:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2094,"nodeType":"ExpressionStatement","src":"2744:26:11"},{"expression":{"hexValue":"74727565","id":2095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2783:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2088,"id":2096,"nodeType":"Return","src":"2776:11:11"}]},"documentation":{"id":2080,"nodeType":"StructuredDocumentation","src":"2493:162:11","text":" @dev Function to mint tokens\n @param value The amount of tokens to mint.\n @return A boolean that indicates if the operation was successful."},"functionSelector":"a0712d68","id":2098,"implemented":true,"kind":"function","modifiers":[{"id":2085,"kind":"modifierInvocation","modifierName":{"id":2084,"name":"onlyOwnerIfProtected","nodeType":"IdentifierPath","referencedDeclaration":1923,"src":"2702:20:11"},"nodeType":"ModifierInvocation","src":"2702:20:11"}],"name":"mint","nameLocation":"2667:4:11","nodeType":"FunctionDefinition","parameters":{"id":2083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2082,"mutability":"mutable","name":"value","nameLocation":"2680:5:11","nodeType":"VariableDeclaration","scope":2098,"src":"2672:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2081,"name":"uint256","nodeType":"ElementaryTypeName","src":"2672:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2671:15:11"},"returnParameters":{"id":2088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2087,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2098,"src":"2732:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2086,"name":"bool","nodeType":"ElementaryTypeName","src":"2732:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2731:6:11"},"scope":2151,"src":"2658:134:11","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":2117,"nodeType":"Block","src":"3117:49:11","statements":[{"expression":{"arguments":[{"id":2111,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2101,"src":"3129:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2112,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2103,"src":"3138:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2110,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":705,"src":"3123:5:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3123:21:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2114,"nodeType":"ExpressionStatement","src":"3123:21:11"},{"expression":{"hexValue":"74727565","id":2115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3157:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2109,"id":2116,"nodeType":"Return","src":"3150:11:11"}]},"documentation":{"id":2099,"nodeType":"StructuredDocumentation","src":"2796:221:11","text":" @dev Function to mint tokens to address\n @param account The account to mint tokens.\n @param value The amount of tokens to mint.\n @return A boolean that indicates if the operation was successful."},"functionSelector":"40c10f19","id":2118,"implemented":true,"kind":"function","modifiers":[{"id":2106,"kind":"modifierInvocation","modifierName":{"id":2105,"name":"onlyOwnerIfProtected","nodeType":"IdentifierPath","referencedDeclaration":1923,"src":"3081:20:11"},"nodeType":"ModifierInvocation","src":"3081:20:11"}],"name":"mint","nameLocation":"3029:4:11","nodeType":"FunctionDefinition","parameters":{"id":2104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2101,"mutability":"mutable","name":"account","nameLocation":"3042:7:11","nodeType":"VariableDeclaration","scope":2118,"src":"3034:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2100,"name":"address","nodeType":"ElementaryTypeName","src":"3034:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2103,"mutability":"mutable","name":"value","nameLocation":"3059:5:11","nodeType":"VariableDeclaration","scope":2118,"src":"3051:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2102,"name":"uint256","nodeType":"ElementaryTypeName","src":"3051:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3033:32:11"},"returnParameters":{"id":2109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2108,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2118,"src":"3111:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2107,"name":"bool","nodeType":"ElementaryTypeName","src":"3111:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3110:6:11"},"scope":2151,"src":"3020:146:11","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":2129,"nodeType":"Block","src":"3231:32:11","statements":[{"expression":{"baseExpression":{"id":2125,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1900,"src":"3244:7:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2127,"indexExpression":{"id":2126,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2120,"src":"3252:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3244:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2124,"id":2128,"nodeType":"Return","src":"3237:21:11"}]},"functionSelector":"7ecebe00","id":2130,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"3179:6:11","nodeType":"FunctionDefinition","parameters":{"id":2121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2120,"mutability":"mutable","name":"owner","nameLocation":"3194:5:11","nodeType":"VariableDeclaration","scope":2130,"src":"3186:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2119,"name":"address","nodeType":"ElementaryTypeName","src":"3186:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3185:15:11"},"returnParameters":{"id":2124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2123,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2130,"src":"3222:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2122,"name":"uint256","nodeType":"ElementaryTypeName","src":"3222:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3221:9:11"},"scope":2151,"src":"3170:93:11","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2141,"nodeType":"Block","src":"3318:29:11","statements":[{"expression":{"id":2139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2137,"name":"_protected","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"3324:10:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2138,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2132,"src":"3337:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3324:18:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2140,"nodeType":"ExpressionStatement","src":"3324:18:11"}]},"functionSelector":"1c02bc31","id":2142,"implemented":true,"kind":"function","modifiers":[{"id":2135,"kind":"modifierInvocation","modifierName":{"id":2134,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":965,"src":"3308:9:11"},"nodeType":"ModifierInvocation","src":"3308:9:11"}],"name":"setProtected","nameLocation":"3276:12:11","nodeType":"FunctionDefinition","parameters":{"id":2133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2132,"mutability":"mutable","name":"state","nameLocation":"3294:5:11","nodeType":"VariableDeclaration","scope":2142,"src":"3289:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2131,"name":"bool","nodeType":"ElementaryTypeName","src":"3289:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3288:12:11"},"returnParameters":{"id":2136,"nodeType":"ParameterList","parameters":[],"src":"3318:0:11"},"scope":2151,"src":"3267:80:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2149,"nodeType":"Block","src":"3401:28:11","statements":[{"expression":{"id":2147,"name":"_protected","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"3414:10:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2146,"id":2148,"nodeType":"Return","src":"3407:17:11"}]},"functionSelector":"5300f82b","id":2150,"implemented":true,"kind":"function","modifiers":[],"name":"isProtected","nameLocation":"3360:11:11","nodeType":"FunctionDefinition","parameters":{"id":2143,"nodeType":"ParameterList","parameters":[],"src":"3371:2:11"},"returnParameters":{"id":2146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2145,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2150,"src":"3395:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2144,"name":"bool","nodeType":"ElementaryTypeName","src":"3395:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3394:6:11"},"scope":2151,"src":"3351:78:11","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":2152,"src":"402:3029:11","usedErrors":[]}],"src":"37:3395:11"},"id":11}},"contracts":{"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Address.sol":{"Address":{"abi":[],"devdoc":{"details":"Collection of functions related to the address type","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f9f20014eafb7e762a73dd65eaaca75251a013fcb03c5723aec42619eb2fe24364736f6c634300080a0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 CALLCODE STOP EQ 0xEA 0xFB PUSH31 0x762A73DD65EAACA75251A013FCB03C5723AEC42619EB2FE24364736F6C6343 STOP ADDMOD EXP STOP CALLER ","sourceMap":"179:7201:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;179:7201:0;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f9f20014eafb7e762a73dd65eaaca75251a013fcb03c5723aec42619eb2fe24364736f6c634300080a0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 CALLCODE STOP EQ 0xEA 0xFB PUSH31 0x762A73DD65EAACA75251A013FCB03C5723AEC42619EB2FE24364736F6C6343 STOP ADDMOD EXP STOP CALLER ","sourceMap":"179:7201:0:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"functionCall(address,bytes memory)":"infinite","functionCall(address,bytes memory,string memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionCallWithValue(address,bytes memory,uint256,string memory)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionDelegateCall(address,bytes memory,string memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory,string memory)":"infinite","isContract(address)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory,string memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":25000},\"remappings\":[]},\"sources\":{\"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Address.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n  /**\\n   * @dev Returns true if `account` is a contract.\\n   *\\n   * [IMPORTANT]\\n   * ====\\n   * It is unsafe to assume that an address for which this function returns\\n   * false is an externally-owned account (EOA) and not a contract.\\n   *\\n   * Among others, `isContract` will return false for the following\\n   * types of addresses:\\n   *\\n   *  - an externally-owned account\\n   *  - a contract in construction\\n   *  - an address where a contract will be created\\n   *  - an address where a contract lived, but was destroyed\\n   * ====\\n   */\\n  function isContract(address account) internal view returns (bool) {\\n    // This method relies on extcodesize, which returns 0 for contracts in\\n    // construction, since the code is only stored at the end of the\\n    // constructor execution.\\n\\n    uint256 size;\\n    assembly {\\n      size := extcodesize(account)\\n    }\\n    return size > 0;\\n  }\\n\\n  /**\\n   * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n   * `recipient`, forwarding all available gas and reverting on errors.\\n   *\\n   * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n   * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n   * imposed by `transfer`, making them unable to receive funds via\\n   * `transfer`. {sendValue} removes this limitation.\\n   *\\n   * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n   *\\n   * IMPORTANT: because control is transferred to `recipient`, care must be\\n   * taken to not create reentrancy vulnerabilities. Consider using\\n   * {ReentrancyGuard} or the\\n   * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n   */\\n  function sendValue(address payable recipient, uint256 amount) internal {\\n    require(address(this).balance >= amount, 'Address: insufficient balance');\\n\\n    (bool success, ) = recipient.call{value: amount}('');\\n    require(success, 'Address: unable to send value, recipient may have reverted');\\n  }\\n\\n  /**\\n   * @dev Performs a Solidity function call using a low level `call`. A\\n   * plain `call` is an unsafe replacement for a function call: use this\\n   * function instead.\\n   *\\n   * If `target` reverts with a revert reason, it is bubbled up by this\\n   * function (like regular Solidity function calls).\\n   *\\n   * Returns the raw returned data. To convert to the expected return value,\\n   * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n   *\\n   * Requirements:\\n   *\\n   * - `target` must be a contract.\\n   * - calling `target` with `data` must not revert.\\n   *\\n   * _Available since v3.1._\\n   */\\n  function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n    return functionCall(target, data, 'Address: low-level call failed');\\n  }\\n\\n  /**\\n   * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n   * `errorMessage` as a fallback revert reason when `target` reverts.\\n   *\\n   * _Available since v3.1._\\n   */\\n  function functionCall(\\n    address target,\\n    bytes memory data,\\n    string memory errorMessage\\n  ) internal returns (bytes memory) {\\n    return functionCallWithValue(target, data, 0, errorMessage);\\n  }\\n\\n  /**\\n   * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n   * but also transferring `value` wei to `target`.\\n   *\\n   * Requirements:\\n   *\\n   * - the calling contract must have an ETH balance of at least `value`.\\n   * - the called Solidity function must be `payable`.\\n   *\\n   * _Available since v3.1._\\n   */\\n  function functionCallWithValue(\\n    address target,\\n    bytes memory data,\\n    uint256 value\\n  ) internal returns (bytes memory) {\\n    return functionCallWithValue(target, data, value, 'Address: low-level call with value failed');\\n  }\\n\\n  /**\\n   * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n   * with `errorMessage` as a fallback revert reason when `target` reverts.\\n   *\\n   * _Available since v3.1._\\n   */\\n  function functionCallWithValue(\\n    address target,\\n    bytes memory data,\\n    uint256 value,\\n    string memory errorMessage\\n  ) internal returns (bytes memory) {\\n    require(address(this).balance >= value, 'Address: insufficient balance for call');\\n    require(isContract(target), 'Address: call to non-contract');\\n\\n    (bool success, bytes memory returndata) = target.call{value: value}(data);\\n    return verifyCallResult(success, returndata, errorMessage);\\n  }\\n\\n  /**\\n   * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n   * but performing a static call.\\n   *\\n   * _Available since v3.3._\\n   */\\n  function functionStaticCall(\\n    address target,\\n    bytes memory data\\n  ) internal view returns (bytes memory) {\\n    return functionStaticCall(target, data, 'Address: low-level static call failed');\\n  }\\n\\n  /**\\n   * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n   * but performing a static call.\\n   *\\n   * _Available since v3.3._\\n   */\\n  function functionStaticCall(\\n    address target,\\n    bytes memory data,\\n    string memory errorMessage\\n  ) internal view returns (bytes memory) {\\n    require(isContract(target), 'Address: static call to non-contract');\\n\\n    (bool success, bytes memory returndata) = target.staticcall(data);\\n    return verifyCallResult(success, returndata, errorMessage);\\n  }\\n\\n  /**\\n   * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n   * but performing a delegate call.\\n   *\\n   * _Available since v3.4._\\n   */\\n  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n    return functionDelegateCall(target, data, 'Address: low-level delegate call failed');\\n  }\\n\\n  /**\\n   * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n   * but performing a delegate call.\\n   *\\n   * _Available since v3.4._\\n   */\\n  function functionDelegateCall(\\n    address target,\\n    bytes memory data,\\n    string memory errorMessage\\n  ) internal returns (bytes memory) {\\n    require(isContract(target), 'Address: delegate call to non-contract');\\n\\n    (bool success, bytes memory returndata) = target.delegatecall(data);\\n    return verifyCallResult(success, returndata, errorMessage);\\n  }\\n\\n  /**\\n   * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n   * revert reason using the provided one.\\n   *\\n   * _Available since v4.3._\\n   */\\n  function verifyCallResult(\\n    bool success,\\n    bytes memory returndata,\\n    string memory errorMessage\\n  ) internal pure returns (bytes memory) {\\n    if (success) {\\n      return returndata;\\n    } else {\\n      // Look for revert reason and bubble it up if present\\n      if (returndata.length > 0) {\\n        // The easiest way to bubble the revert reason is using memory via assembly\\n\\n        assembly {\\n          let returndata_size := mload(returndata)\\n          revert(add(32, returndata), returndata_size)\\n        }\\n      } else {\\n        revert(errorMessage);\\n      }\\n    }\\n  }\\n}\\n\",\"keccak256\":\"0x4ce20476966f73ba3c0aeb85b602b6ecc4e715f5bd9524d1c6286819282c76c5\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Context.sol":{"Context":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":25000},\"remappings\":[]},\"sources\":{\"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n  function _msgSender() internal view virtual returns (address payable) {\\n    return payable(msg.sender);\\n  }\\n\\n  function _msgData() internal view virtual returns (bytes memory) {\\n    this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n    return msg.data;\\n  }\\n}\\n\",\"keccak256\":\"0xc0df5ebb2c3d8b4509464c40a88cc51e5e5f5e4a26fafc909330e9bb2658f641\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.","kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"constructor":{"details":"Sets the values for {name} and {symbol}, initializes {decimals} with a default value of 18. To select a different value for {decimals}, use {_setupDecimals}. All three of these values are immutable: they can only be set once during construction."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_378":{"entryPoint":null,"id":378,"parameterSlots":2,"returnSlots":0},"abi_decode_string_fromMemory":{"entryPoint":305,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":488,"id":null,"parameterSlots":2,"returnSlots":2},"extract_byte_array_length":{"entryPoint":594,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x41":{"entryPoint":283,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1985:12","statements":[{"nodeType":"YulBlock","src":"6:3:12","statements":[]},{"body":{"nodeType":"YulBlock","src":"46:95:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"63:1:12","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"70:3:12","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"75:10:12","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"66:3:12"},"nodeType":"YulFunctionCall","src":"66:20:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56:6:12"},"nodeType":"YulFunctionCall","src":"56:31:12"},"nodeType":"YulExpressionStatement","src":"56:31:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:1:12","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"106:4:12","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"96:6:12"},"nodeType":"YulFunctionCall","src":"96:15:12"},"nodeType":"YulExpressionStatement","src":"96:15:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"127:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"130:4:12","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"120:6:12"},"nodeType":"YulFunctionCall","src":"120:15:12"},"nodeType":"YulExpressionStatement","src":"120:15:12"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"14:127:12"},{"body":{"nodeType":"YulBlock","src":"210:821:12","statements":[{"body":{"nodeType":"YulBlock","src":"259:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"268:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"271:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"261:6:12"},"nodeType":"YulFunctionCall","src":"261:12:12"},"nodeType":"YulExpressionStatement","src":"261:12:12"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"238:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"246:4:12","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"234:3:12"},"nodeType":"YulFunctionCall","src":"234:17:12"},{"name":"end","nodeType":"YulIdentifier","src":"253:3:12"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"230:3:12"},"nodeType":"YulFunctionCall","src":"230:27:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"223:6:12"},"nodeType":"YulFunctionCall","src":"223:35:12"},"nodeType":"YulIf","src":"220:55:12"},{"nodeType":"YulVariableDeclaration","src":"284:23:12","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"300:6:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"294:5:12"},"nodeType":"YulFunctionCall","src":"294:13:12"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"288:2:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"316:28:12","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"334:2:12","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"338:1:12","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"330:3:12"},"nodeType":"YulFunctionCall","src":"330:10:12"},{"kind":"number","nodeType":"YulLiteral","src":"342:1:12","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"326:3:12"},"nodeType":"YulFunctionCall","src":"326:18:12"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"320:2:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"367:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"369:16:12"},"nodeType":"YulFunctionCall","src":"369:18:12"},"nodeType":"YulExpressionStatement","src":"369:18:12"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"359:2:12"},{"name":"_2","nodeType":"YulIdentifier","src":"363:2:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"356:2:12"},"nodeType":"YulFunctionCall","src":"356:10:12"},"nodeType":"YulIf","src":"353:36:12"},{"nodeType":"YulVariableDeclaration","src":"398:17:12","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"412:2:12","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"408:3:12"},"nodeType":"YulFunctionCall","src":"408:7:12"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"402:2:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"424:23:12","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"444:2:12","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"438:5:12"},"nodeType":"YulFunctionCall","src":"438:9:12"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"428:6:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"456:71:12","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"478:6:12"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"502:2:12"},{"kind":"number","nodeType":"YulLiteral","src":"506:4:12","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"498:3:12"},"nodeType":"YulFunctionCall","src":"498:13:12"},{"name":"_3","nodeType":"YulIdentifier","src":"513:2:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"494:3:12"},"nodeType":"YulFunctionCall","src":"494:22:12"},{"kind":"number","nodeType":"YulLiteral","src":"518:2:12","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"490:3:12"},"nodeType":"YulFunctionCall","src":"490:31:12"},{"name":"_3","nodeType":"YulIdentifier","src":"523:2:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"486:3:12"},"nodeType":"YulFunctionCall","src":"486:40:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"474:3:12"},"nodeType":"YulFunctionCall","src":"474:53:12"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"460:10:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"586:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"588:16:12"},"nodeType":"YulFunctionCall","src":"588:18:12"},"nodeType":"YulExpressionStatement","src":"588:18:12"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"545:10:12"},{"name":"_2","nodeType":"YulIdentifier","src":"557:2:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"542:2:12"},"nodeType":"YulFunctionCall","src":"542:18:12"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"565:10:12"},{"name":"memPtr","nodeType":"YulIdentifier","src":"577:6:12"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"562:2:12"},"nodeType":"YulFunctionCall","src":"562:22:12"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"539:2:12"},"nodeType":"YulFunctionCall","src":"539:46:12"},"nodeType":"YulIf","src":"536:72:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"624:2:12","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"628:10:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"617:6:12"},"nodeType":"YulFunctionCall","src":"617:22:12"},"nodeType":"YulExpressionStatement","src":"617:22:12"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"655:6:12"},{"name":"_1","nodeType":"YulIdentifier","src":"663:2:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"648:6:12"},"nodeType":"YulFunctionCall","src":"648:18:12"},"nodeType":"YulExpressionStatement","src":"648:18:12"},{"nodeType":"YulVariableDeclaration","src":"675:14:12","value":{"kind":"number","nodeType":"YulLiteral","src":"685:4:12","type":"","value":"0x20"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"679:2:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"735:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"744:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"747:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"737:6:12"},"nodeType":"YulFunctionCall","src":"737:12:12"},"nodeType":"YulExpressionStatement","src":"737:12:12"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"712:6:12"},{"name":"_1","nodeType":"YulIdentifier","src":"720:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"708:3:12"},"nodeType":"YulFunctionCall","src":"708:15:12"},{"name":"_4","nodeType":"YulIdentifier","src":"725:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"704:3:12"},"nodeType":"YulFunctionCall","src":"704:24:12"},{"name":"end","nodeType":"YulIdentifier","src":"730:3:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"701:2:12"},"nodeType":"YulFunctionCall","src":"701:33:12"},"nodeType":"YulIf","src":"698:53:12"},{"nodeType":"YulVariableDeclaration","src":"760:10:12","value":{"kind":"number","nodeType":"YulLiteral","src":"769:1:12","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"764:1:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"825:87:12","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"854:6:12"},{"name":"i","nodeType":"YulIdentifier","src":"862:1:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"850:3:12"},"nodeType":"YulFunctionCall","src":"850:14:12"},{"name":"_4","nodeType":"YulIdentifier","src":"866:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"846:3:12"},"nodeType":"YulFunctionCall","src":"846:23:12"},{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"885:6:12"},{"name":"i","nodeType":"YulIdentifier","src":"893:1:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"881:3:12"},"nodeType":"YulFunctionCall","src":"881:14:12"},{"name":"_4","nodeType":"YulIdentifier","src":"897:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"877:3:12"},"nodeType":"YulFunctionCall","src":"877:23:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"871:5:12"},"nodeType":"YulFunctionCall","src":"871:30:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"839:6:12"},"nodeType":"YulFunctionCall","src":"839:63:12"},"nodeType":"YulExpressionStatement","src":"839:63:12"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"790:1:12"},{"name":"_1","nodeType":"YulIdentifier","src":"793:2:12"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"787:2:12"},"nodeType":"YulFunctionCall","src":"787:9:12"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"797:19:12","statements":[{"nodeType":"YulAssignment","src":"799:15:12","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"808:1:12"},{"name":"_4","nodeType":"YulIdentifier","src":"811:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"804:3:12"},"nodeType":"YulFunctionCall","src":"804:10:12"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"799:1:12"}]}]},"pre":{"nodeType":"YulBlock","src":"783:3:12","statements":[]},"src":"779:133:12"},{"body":{"nodeType":"YulBlock","src":"942:59:12","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"971:6:12"},{"name":"_1","nodeType":"YulIdentifier","src":"979:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"967:3:12"},"nodeType":"YulFunctionCall","src":"967:15:12"},{"name":"_4","nodeType":"YulIdentifier","src":"984:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"963:3:12"},"nodeType":"YulFunctionCall","src":"963:24:12"},{"kind":"number","nodeType":"YulLiteral","src":"989:1:12","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"956:6:12"},"nodeType":"YulFunctionCall","src":"956:35:12"},"nodeType":"YulExpressionStatement","src":"956:35:12"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"927:1:12"},{"name":"_1","nodeType":"YulIdentifier","src":"930:2:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"924:2:12"},"nodeType":"YulFunctionCall","src":"924:9:12"},"nodeType":"YulIf","src":"921:80:12"},{"nodeType":"YulAssignment","src":"1010:15:12","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"1019:6:12"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1010:5:12"}]}]},"name":"abi_decode_string_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"184:6:12","type":""},{"name":"end","nodeType":"YulTypedName","src":"192:3:12","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"200:5:12","type":""}],"src":"146:885:12"},{"body":{"nodeType":"YulBlock","src":"1154:444:12","statements":[{"body":{"nodeType":"YulBlock","src":"1200:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1209:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1212:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1202:6:12"},"nodeType":"YulFunctionCall","src":"1202:12:12"},"nodeType":"YulExpressionStatement","src":"1202:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1175:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"1184:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1171:3:12"},"nodeType":"YulFunctionCall","src":"1171:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"1196:2:12","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1167:3:12"},"nodeType":"YulFunctionCall","src":"1167:32:12"},"nodeType":"YulIf","src":"1164:52:12"},{"nodeType":"YulVariableDeclaration","src":"1225:30:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1245:9:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1239:5:12"},"nodeType":"YulFunctionCall","src":"1239:16:12"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1229:6:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1264:28:12","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1282:2:12","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1286:1:12","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1278:3:12"},"nodeType":"YulFunctionCall","src":"1278:10:12"},{"kind":"number","nodeType":"YulLiteral","src":"1290:1:12","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1274:3:12"},"nodeType":"YulFunctionCall","src":"1274:18:12"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1268:2:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"1319:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1328:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1331:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1321:6:12"},"nodeType":"YulFunctionCall","src":"1321:12:12"},"nodeType":"YulExpressionStatement","src":"1321:12:12"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1307:6:12"},{"name":"_1","nodeType":"YulIdentifier","src":"1315:2:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1304:2:12"},"nodeType":"YulFunctionCall","src":"1304:14:12"},"nodeType":"YulIf","src":"1301:34:12"},{"nodeType":"YulAssignment","src":"1344:71:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1387:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"1398:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1383:3:12"},"nodeType":"YulFunctionCall","src":"1383:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1407:7:12"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1354:28:12"},"nodeType":"YulFunctionCall","src":"1354:61:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1344:6:12"}]},{"nodeType":"YulVariableDeclaration","src":"1424:41:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1450:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"1461:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1446:3:12"},"nodeType":"YulFunctionCall","src":"1446:18:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1440:5:12"},"nodeType":"YulFunctionCall","src":"1440:25:12"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"1428:8:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"1494:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1503:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1506:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1496:6:12"},"nodeType":"YulFunctionCall","src":"1496:12:12"},"nodeType":"YulExpressionStatement","src":"1496:12:12"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"1480:8:12"},{"name":"_1","nodeType":"YulIdentifier","src":"1490:2:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1477:2:12"},"nodeType":"YulFunctionCall","src":"1477:16:12"},"nodeType":"YulIf","src":"1474:36:12"},{"nodeType":"YulAssignment","src":"1519:73:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1562:9:12"},{"name":"offset_1","nodeType":"YulIdentifier","src":"1573:8:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1558:3:12"},"nodeType":"YulFunctionCall","src":"1558:24:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1584:7:12"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1529:28:12"},"nodeType":"YulFunctionCall","src":"1529:63:12"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1519:6:12"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1112:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1123:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1135:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1143:6:12","type":""}],"src":"1036:562:12"},{"body":{"nodeType":"YulBlock","src":"1658:325:12","statements":[{"nodeType":"YulAssignment","src":"1668:22:12","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1682:1:12","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"1685:4:12"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1678:3:12"},"nodeType":"YulFunctionCall","src":"1678:12:12"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1668:6:12"}]},{"nodeType":"YulVariableDeclaration","src":"1699:38:12","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1729:4:12"},{"kind":"number","nodeType":"YulLiteral","src":"1735:1:12","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1725:3:12"},"nodeType":"YulFunctionCall","src":"1725:12:12"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"1703:18:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"1776:31:12","statements":[{"nodeType":"YulAssignment","src":"1778:27:12","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1792:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"1800:4:12","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1788:3:12"},"nodeType":"YulFunctionCall","src":"1788:17:12"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1778:6:12"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1756:18:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1749:6:12"},"nodeType":"YulFunctionCall","src":"1749:26:12"},"nodeType":"YulIf","src":"1746:61:12"},{"body":{"nodeType":"YulBlock","src":"1866:111:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1887:1:12","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1894:3:12","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1899:10:12","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1890:3:12"},"nodeType":"YulFunctionCall","src":"1890:20:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1880:6:12"},"nodeType":"YulFunctionCall","src":"1880:31:12"},"nodeType":"YulExpressionStatement","src":"1880:31:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1931:1:12","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1934:4:12","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1924:6:12"},"nodeType":"YulFunctionCall","src":"1924:15:12"},"nodeType":"YulExpressionStatement","src":"1924:15:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1959:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1962:4:12","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1952:6:12"},"nodeType":"YulFunctionCall","src":"1952:15:12"},"nodeType":"YulExpressionStatement","src":"1952:15:12"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1822:18:12"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1845:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"1853:2:12","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1842:2:12"},"nodeType":"YulFunctionCall","src":"1842:14:12"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1819:2:12"},"nodeType":"YulFunctionCall","src":"1819:38:12"},"nodeType":"YulIf","src":"1816:161:12"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1638:4:12","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1647:6:12","type":""}],"src":"1603:380:12"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), 0)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}","id":12,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162000d0d38038062000d0d8339810160408190526200003491620001e8565b81516200004990600390602085019062000075565b5080516200005f90600490602084019062000075565b50506005805460ff19166012179055506200028f565b828054620000839062000252565b90600052602060002090601f016020900481019282620000a75760008555620000f2565b82601f10620000c257805160ff1916838001178555620000f2565b82800160010185558215620000f2579182015b82811115620000f2578251825591602001919060010190620000d5565b506200010092915062000104565b5090565b5b8082111562000100576000815560010162000105565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200014357600080fd5b81516001600160401b03808211156200016057620001606200011b565b604051601f8301601f19908116603f011681019082821181831017156200018b576200018b6200011b565b81604052838152602092508683858801011115620001a857600080fd5b600091505b83821015620001cc5785820183015181830184015290820190620001ad565b83821115620001de5760008385830101525b9695505050505050565b60008060408385031215620001fc57600080fd5b82516001600160401b03808211156200021457600080fd5b620002228683870162000131565b935060208501519150808211156200023957600080fd5b50620002488582860162000131565b9150509250929050565b600181811c908216806200026757607f821691505b602082108114156200028957634e487b7160e01b600052602260045260246000fd5b50919050565b610a6e806200029f6000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c80633950935111610081578063a457c2d71161005b578063a457c2d71461019a578063a9059cbb146101ad578063dd62ed3e146101c057600080fd5b8063395093511461014957806370a082311461015c57806395d89b411461019257600080fd5b806318160ddd116100b257806318160ddd1461010f57806323b872dd14610121578063313ce5671461013457600080fd5b806306fdde03146100ce578063095ea7b3146100ec575b600080fd5b6100d6610206565b6040516100e3919061081a565b60405180910390f35b6100ff6100fa3660046108b6565b610298565b60405190151581526020016100e3565b6002545b6040519081526020016100e3565b6100ff61012f3660046108e0565b6102af565b60055460405160ff90911681526020016100e3565b6100ff6101573660046108b6565b610325565b61011361016a36600461091c565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b6100d6610368565b6100ff6101a83660046108b6565b610377565b6100ff6101bb3660046108b6565b6103d3565b6101136101ce36600461093e565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b60606003805461021590610971565b80601f016020809104026020016040519081016040528092919081815260200182805461024190610971565b801561028e5780601f106102635761010080835404028352916020019161028e565b820191906000526020600020905b81548152906001019060200180831161027157829003601f168201915b5050505050905090565b60006102a53384846103e0565b5060015b92915050565b60006102bc848484610599565b61031b8433610316856040518060600160405280602881526020016109ec6028913973ffffffffffffffffffffffffffffffffffffffff8a16600090815260016020908152604080832033845290915290205491906107c3565b6103e0565b5060019392505050565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490916102a5918590610316908661080a565b60606004805461021590610971565b60006102a5338461031685604051806060016040528060258152602001610a146025913933600090815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8d16845290915290205491906107c3565b60006102a5338484610599565b73ffffffffffffffffffffffffffffffffffffffff8316610487576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f726573730000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff821661052a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f7373000000000000000000000000000000000000000000000000000000000000606482015260840161047e565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff831661063c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f6472657373000000000000000000000000000000000000000000000000000000606482015260840161047e565b73ffffffffffffffffffffffffffffffffffffffff82166106df576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f6573730000000000000000000000000000000000000000000000000000000000606482015260840161047e565b610729816040518060600160405280602681526020016109c66026913973ffffffffffffffffffffffffffffffffffffffff861660009081526020819052604090205491906107c3565b73ffffffffffffffffffffffffffffffffffffffff8085166000908152602081905260408082209390935590841681522054610765908261080a565b73ffffffffffffffffffffffffffffffffffffffff8381166000818152602081815260409182902094909455518481529092918616917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910161058c565b8183038184821115610802576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047e919061081a565b509392505050565b808201828110156102a957600080fd5b600060208083528351808285015260005b818110156108475785810183015185820160400152820161082b565b81811115610859576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b803573ffffffffffffffffffffffffffffffffffffffff811681146108b157600080fd5b919050565b600080604083850312156108c957600080fd5b6108d28361088d565b946020939093013593505050565b6000806000606084860312156108f557600080fd5b6108fe8461088d565b925061090c6020850161088d565b9150604084013590509250925092565b60006020828403121561092e57600080fd5b6109378261088d565b9392505050565b6000806040838503121561095157600080fd5b61095a8361088d565b91506109686020840161088d565b90509250929050565b600181811c9082168061098557607f821691505b602082108114156109bf577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b5091905056fe45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220fd2c11cfac536a0fe169bd478163dc416442b9c31de074a5cb90bed92510c21f64736f6c634300080a0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xD0D CODESIZE SUB DUP1 PUSH3 0xD0D DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x1E8 JUMP JUMPDEST DUP2 MLOAD PUSH3 0x49 SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x75 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x5F SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x75 JUMP JUMPDEST POP POP PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x12 OR SWAP1 SSTORE POP PUSH3 0x28F JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x83 SWAP1 PUSH3 0x252 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0xA7 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xF2 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xC2 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xF2 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xF2 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xF2 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xD5 JUMP JUMPDEST POP PUSH3 0x100 SWAP3 SWAP2 POP PUSH3 0x104 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x100 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x105 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x143 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x160 JUMPI PUSH3 0x160 PUSH3 0x11B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x18B JUMPI PUSH3 0x18B PUSH3 0x11B JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x1A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x1CC JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x1AD JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x1DE JUMPI PUSH1 0x0 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x214 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x222 DUP7 DUP4 DUP8 ADD PUSH3 0x131 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x239 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x248 DUP6 DUP3 DUP7 ADD PUSH3 0x131 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x267 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x289 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA6E DUP1 PUSH3 0x29F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x15C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x134 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xEC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD6 PUSH2 0x206 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x81A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFF PUSH2 0xFA CALLDATASIZE PUSH1 0x4 PUSH2 0x8B6 JUMP JUMPDEST PUSH2 0x298 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE3 JUMP JUMPDEST PUSH2 0xFF PUSH2 0x12F CALLDATASIZE PUSH1 0x4 PUSH2 0x8E0 JUMP JUMPDEST PUSH2 0x2AF JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE3 JUMP JUMPDEST PUSH2 0xFF PUSH2 0x157 CALLDATASIZE PUSH1 0x4 PUSH2 0x8B6 JUMP JUMPDEST PUSH2 0x325 JUMP JUMPDEST PUSH2 0x113 PUSH2 0x16A CALLDATASIZE PUSH1 0x4 PUSH2 0x91C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xD6 PUSH2 0x368 JUMP JUMPDEST PUSH2 0xFF PUSH2 0x1A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x8B6 JUMP JUMPDEST PUSH2 0x377 JUMP JUMPDEST PUSH2 0xFF PUSH2 0x1BB CALLDATASIZE PUSH1 0x4 PUSH2 0x8B6 JUMP JUMPDEST PUSH2 0x3D3 JUMP JUMPDEST PUSH2 0x113 PUSH2 0x1CE CALLDATASIZE PUSH1 0x4 PUSH2 0x93E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x215 SWAP1 PUSH2 0x971 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x241 SWAP1 PUSH2 0x971 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x28E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x263 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x28E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x271 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A5 CALLER DUP5 DUP5 PUSH2 0x3E0 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BC DUP5 DUP5 DUP5 PUSH2 0x599 JUMP JUMPDEST PUSH2 0x31B DUP5 CALLER PUSH2 0x316 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x9EC PUSH1 0x28 SWAP2 CODECOPY PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x7C3 JUMP JUMPDEST PUSH2 0x3E0 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x2A5 SWAP2 DUP6 SWAP1 PUSH2 0x316 SWAP1 DUP7 PUSH2 0x80A JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x215 SWAP1 PUSH2 0x971 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A5 CALLER DUP5 PUSH2 0x316 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA14 PUSH1 0x25 SWAP2 CODECOPY CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x7C3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A5 CALLER DUP5 DUP5 PUSH2 0x599 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x487 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x52A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x47E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x63C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x47E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x6DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x47E JUMP JUMPDEST PUSH2 0x729 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x9C6 PUSH1 0x26 SWAP2 CODECOPY PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x7C3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x765 SWAP1 DUP3 PUSH2 0x80A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE MLOAD DUP5 DUP2 MSTORE SWAP1 SWAP3 SWAP2 DUP7 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH2 0x58C JUMP JUMPDEST DUP2 DUP4 SUB DUP2 DUP5 DUP3 GT ISZERO PUSH2 0x802 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47E SWAP2 SWAP1 PUSH2 0x81A JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP3 DUP2 LT ISZERO PUSH2 0x2A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x847 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x82B JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x859 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x8B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x8C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8D2 DUP4 PUSH2 0x88D JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x8F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8FE DUP5 PUSH2 0x88D JUMP JUMPDEST SWAP3 POP PUSH2 0x90C PUSH1 0x20 DUP6 ADD PUSH2 0x88D JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x92E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x937 DUP3 PUSH2 0x88D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x951 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x95A DUP4 PUSH2 0x88D JUMP JUMPDEST SWAP2 POP PUSH2 0x968 PUSH1 0x20 DUP5 ADD PUSH2 0x88D JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x985 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x9BF JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x2062616C616E636545524332303A207472616E73 PUSH7 0x657220616D6F75 PUSH15 0x74206578636565647320616C6C6F77 PUSH2 0x6E63 PUSH6 0x45524332303A KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x7358221220FD2C GT 0xCF 0xAC MSTORE8 PUSH11 0xFE169BD478163DC416442 0xB9 0xC3 SAR 0xE0 PUSH21 0xA5CB90BED92510C21F64736F6C634300080A003300 ","sourceMap":"1318:8978:2:-:0;;;1947:119;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2007:12;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;2025:16:2;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;;2047:9:2;:14;;-1:-1:-1;;2047:14:2;2059:2;2047:14;;;-1:-1:-1;1318:8978:2;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1318:8978:2;;;-1:-1:-1;1318:8978:2;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:12;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:12;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:12;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:12:o;1036:562::-;1135:6;1143;1196:2;1184:9;1175:7;1171:23;1167:32;1164:52;;;1212:1;1209;1202:12;1164:52;1239:16;;-1:-1:-1;;;;;1304:14:12;;;1301:34;;;1331:1;1328;1321:12;1301:34;1354:61;1407:7;1398:6;1387:9;1383:22;1354:61;:::i;:::-;1344:71;;1461:2;1450:9;1446:18;1440:25;1424:41;;1490:2;1480:8;1477:16;1474:36;;;1506:1;1503;1496:12;1474:36;;1529:63;1584:7;1573:8;1562:9;1558:24;1529:63;:::i;:::-;1519:73;;;1036:562;;;;;:::o;1603:380::-;1682:1;1678:12;;;;1725;;;1746:61;;1800:4;1792:6;1788:17;1778:27;;1746:61;1853:2;1845:6;1842:14;1822:18;1819:38;1816:161;;;1899:10;1894:3;1890:20;1887:1;1880:31;1934:4;1931:1;1924:15;1962:4;1959:1;1952:15;1816:161;;1603:380;;;:::o;:::-;1318:8978:2;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_approve_806":{"entryPoint":992,"id":806,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_828":{"entryPoint":null,"id":828,"parameterSlots":3,"returnSlots":0},"@_msgSender_310":{"entryPoint":null,"id":310,"parameterSlots":0,"returnSlots":1},"@_transfer_650":{"entryPoint":1433,"id":650,"parameterSlots":3,"returnSlots":0},"@add_1042":{"entryPoint":2058,"id":1042,"parameterSlots":2,"returnSlots":1},"@allowance_468":{"entryPoint":null,"id":468,"parameterSlots":2,"returnSlots":1},"@approve_489":{"entryPoint":664,"id":489,"parameterSlots":2,"returnSlots":1},"@balanceOf_429":{"entryPoint":null,"id":429,"parameterSlots":1,"returnSlots":1},"@decimals_405":{"entryPoint":null,"id":405,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_584":{"entryPoint":887,"id":584,"parameterSlots":2,"returnSlots":1},"@increaseAllowance_555":{"entryPoint":805,"id":555,"parameterSlots":2,"returnSlots":1},"@name_387":{"entryPoint":518,"id":387,"parameterSlots":0,"returnSlots":1},"@sub_1091":{"entryPoint":1987,"id":1091,"parameterSlots":3,"returnSlots":1},"@symbol_396":{"entryPoint":872,"id":396,"parameterSlots":0,"returnSlots":1},"@totalSupply_415":{"entryPoint":null,"id":415,"parameterSlots":0,"returnSlots":1},"@transferFrom_527":{"entryPoint":687,"id":527,"parameterSlots":3,"returnSlots":1},"@transfer_450":{"entryPoint":979,"id":450,"parameterSlots":2,"returnSlots":1},"abi_decode_address":{"entryPoint":2189,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":2332,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":2366,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":2272,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":2230,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2074,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":2417,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4544:12","statements":[{"nodeType":"YulBlock","src":"6:3:12","statements":[]},{"body":{"nodeType":"YulBlock","src":"135:535:12","statements":[{"nodeType":"YulVariableDeclaration","src":"145:12:12","value":{"kind":"number","nodeType":"YulLiteral","src":"155:2:12","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"149:2:12","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"173:9:12"},{"name":"_1","nodeType":"YulIdentifier","src":"184:2:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"166:6:12"},"nodeType":"YulFunctionCall","src":"166:21:12"},"nodeType":"YulExpressionStatement","src":"166:21:12"},{"nodeType":"YulVariableDeclaration","src":"196:27:12","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"216:6:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"210:5:12"},"nodeType":"YulFunctionCall","src":"210:13:12"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"200:6:12","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"243:9:12"},{"name":"_1","nodeType":"YulIdentifier","src":"254:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"239:3:12"},"nodeType":"YulFunctionCall","src":"239:18:12"},{"name":"length","nodeType":"YulIdentifier","src":"259:6:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"232:6:12"},"nodeType":"YulFunctionCall","src":"232:34:12"},"nodeType":"YulExpressionStatement","src":"232:34:12"},{"nodeType":"YulVariableDeclaration","src":"275:10:12","value":{"kind":"number","nodeType":"YulLiteral","src":"284:1:12","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"279:1:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"344:90:12","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"373:9:12"},{"name":"i","nodeType":"YulIdentifier","src":"384:1:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"369:3:12"},"nodeType":"YulFunctionCall","src":"369:17:12"},{"kind":"number","nodeType":"YulLiteral","src":"388:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"365:3:12"},"nodeType":"YulFunctionCall","src":"365:26:12"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"407:6:12"},{"name":"i","nodeType":"YulIdentifier","src":"415:1:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"403:3:12"},"nodeType":"YulFunctionCall","src":"403:14:12"},{"name":"_1","nodeType":"YulIdentifier","src":"419:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"399:3:12"},"nodeType":"YulFunctionCall","src":"399:23:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"393:5:12"},"nodeType":"YulFunctionCall","src":"393:30:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"358:6:12"},"nodeType":"YulFunctionCall","src":"358:66:12"},"nodeType":"YulExpressionStatement","src":"358:66:12"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"305:1:12"},{"name":"length","nodeType":"YulIdentifier","src":"308:6:12"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"302:2:12"},"nodeType":"YulFunctionCall","src":"302:13:12"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"316:19:12","statements":[{"nodeType":"YulAssignment","src":"318:15:12","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"327:1:12"},{"name":"_1","nodeType":"YulIdentifier","src":"330:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"323:3:12"},"nodeType":"YulFunctionCall","src":"323:10:12"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"318:1:12"}]}]},"pre":{"nodeType":"YulBlock","src":"298:3:12","statements":[]},"src":"294:140:12"},{"body":{"nodeType":"YulBlock","src":"468:66:12","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"497:9:12"},{"name":"length","nodeType":"YulIdentifier","src":"508:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"493:3:12"},"nodeType":"YulFunctionCall","src":"493:22:12"},{"kind":"number","nodeType":"YulLiteral","src":"517:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"489:3:12"},"nodeType":"YulFunctionCall","src":"489:31:12"},{"kind":"number","nodeType":"YulLiteral","src":"522:1:12","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"482:6:12"},"nodeType":"YulFunctionCall","src":"482:42:12"},"nodeType":"YulExpressionStatement","src":"482:42:12"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"449:1:12"},{"name":"length","nodeType":"YulIdentifier","src":"452:6:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"446:2:12"},"nodeType":"YulFunctionCall","src":"446:13:12"},"nodeType":"YulIf","src":"443:91:12"},{"nodeType":"YulAssignment","src":"543:121:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"559:9:12"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"578:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"586:2:12","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"574:3:12"},"nodeType":"YulFunctionCall","src":"574:15:12"},{"kind":"number","nodeType":"YulLiteral","src":"591:66:12","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"570:3:12"},"nodeType":"YulFunctionCall","src":"570:88:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"555:3:12"},"nodeType":"YulFunctionCall","src":"555:104:12"},{"kind":"number","nodeType":"YulLiteral","src":"661:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"551:3:12"},"nodeType":"YulFunctionCall","src":"551:113:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"543:4:12"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"104:9:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"115:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"126:4:12","type":""}],"src":"14:656:12"},{"body":{"nodeType":"YulBlock","src":"724:147:12","statements":[{"nodeType":"YulAssignment","src":"734:29:12","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"756:6:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"743:12:12"},"nodeType":"YulFunctionCall","src":"743:20:12"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"734:5:12"}]},{"body":{"nodeType":"YulBlock","src":"849:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"858:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"861:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"851:6:12"},"nodeType":"YulFunctionCall","src":"851:12:12"},"nodeType":"YulExpressionStatement","src":"851:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"785:5:12"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"796:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"803:42:12","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"792:3:12"},"nodeType":"YulFunctionCall","src":"792:54:12"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"782:2:12"},"nodeType":"YulFunctionCall","src":"782:65:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"775:6:12"},"nodeType":"YulFunctionCall","src":"775:73:12"},"nodeType":"YulIf","src":"772:93:12"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"703:6:12","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"714:5:12","type":""}],"src":"675:196:12"},{"body":{"nodeType":"YulBlock","src":"963:167:12","statements":[{"body":{"nodeType":"YulBlock","src":"1009:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1018:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1021:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1011:6:12"},"nodeType":"YulFunctionCall","src":"1011:12:12"},"nodeType":"YulExpressionStatement","src":"1011:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"984:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"993:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"980:3:12"},"nodeType":"YulFunctionCall","src":"980:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"1005:2:12","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"976:3:12"},"nodeType":"YulFunctionCall","src":"976:32:12"},"nodeType":"YulIf","src":"973:52:12"},{"nodeType":"YulAssignment","src":"1034:39:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1063:9:12"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1044:18:12"},"nodeType":"YulFunctionCall","src":"1044:29:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1034:6:12"}]},{"nodeType":"YulAssignment","src":"1082:42:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1109:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"1120:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1105:3:12"},"nodeType":"YulFunctionCall","src":"1105:18:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1092:12:12"},"nodeType":"YulFunctionCall","src":"1092:32:12"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1082:6:12"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"921:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"932:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"944:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"952:6:12","type":""}],"src":"876:254:12"},{"body":{"nodeType":"YulBlock","src":"1230:92:12","statements":[{"nodeType":"YulAssignment","src":"1240:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1252:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"1263:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1248:3:12"},"nodeType":"YulFunctionCall","src":"1248:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1240:4:12"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1282:9:12"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1307:6:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1300:6:12"},"nodeType":"YulFunctionCall","src":"1300:14:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1293:6:12"},"nodeType":"YulFunctionCall","src":"1293:22:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1275:6:12"},"nodeType":"YulFunctionCall","src":"1275:41:12"},"nodeType":"YulExpressionStatement","src":"1275:41:12"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1199:9:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1210:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1221:4:12","type":""}],"src":"1135:187:12"},{"body":{"nodeType":"YulBlock","src":"1428:76:12","statements":[{"nodeType":"YulAssignment","src":"1438:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1450:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"1461:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1446:3:12"},"nodeType":"YulFunctionCall","src":"1446:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1438:4:12"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1480:9:12"},{"name":"value0","nodeType":"YulIdentifier","src":"1491:6:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1473:6:12"},"nodeType":"YulFunctionCall","src":"1473:25:12"},"nodeType":"YulExpressionStatement","src":"1473:25:12"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1397:9:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1408:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1419:4:12","type":""}],"src":"1327:177:12"},{"body":{"nodeType":"YulBlock","src":"1613:224:12","statements":[{"body":{"nodeType":"YulBlock","src":"1659:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1668:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1671:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1661:6:12"},"nodeType":"YulFunctionCall","src":"1661:12:12"},"nodeType":"YulExpressionStatement","src":"1661:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1634:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"1643:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1630:3:12"},"nodeType":"YulFunctionCall","src":"1630:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"1655:2:12","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1626:3:12"},"nodeType":"YulFunctionCall","src":"1626:32:12"},"nodeType":"YulIf","src":"1623:52:12"},{"nodeType":"YulAssignment","src":"1684:39:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1713:9:12"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1694:18:12"},"nodeType":"YulFunctionCall","src":"1694:29:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1684:6:12"}]},{"nodeType":"YulAssignment","src":"1732:48:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1765:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"1776:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1761:3:12"},"nodeType":"YulFunctionCall","src":"1761:18:12"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1742:18:12"},"nodeType":"YulFunctionCall","src":"1742:38:12"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1732:6:12"}]},{"nodeType":"YulAssignment","src":"1789:42:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1816:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"1827:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1812:3:12"},"nodeType":"YulFunctionCall","src":"1812:18:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1799:12:12"},"nodeType":"YulFunctionCall","src":"1799:32:12"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1789:6:12"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1563:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1574:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1586:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1594:6:12","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1602:6:12","type":""}],"src":"1509:328:12"},{"body":{"nodeType":"YulBlock","src":"1939:87:12","statements":[{"nodeType":"YulAssignment","src":"1949:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1961:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"1972:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1957:3:12"},"nodeType":"YulFunctionCall","src":"1957:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1949:4:12"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1991:9:12"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2006:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"2014:4:12","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2002:3:12"},"nodeType":"YulFunctionCall","src":"2002:17:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1984:6:12"},"nodeType":"YulFunctionCall","src":"1984:36:12"},"nodeType":"YulExpressionStatement","src":"1984:36:12"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1908:9:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1919:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1930:4:12","type":""}],"src":"1842:184:12"},{"body":{"nodeType":"YulBlock","src":"2101:116:12","statements":[{"body":{"nodeType":"YulBlock","src":"2147:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2156:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2159:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2149:6:12"},"nodeType":"YulFunctionCall","src":"2149:12:12"},"nodeType":"YulExpressionStatement","src":"2149:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2122:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"2131:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2118:3:12"},"nodeType":"YulFunctionCall","src":"2118:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"2143:2:12","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2114:3:12"},"nodeType":"YulFunctionCall","src":"2114:32:12"},"nodeType":"YulIf","src":"2111:52:12"},{"nodeType":"YulAssignment","src":"2172:39:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2201:9:12"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2182:18:12"},"nodeType":"YulFunctionCall","src":"2182:29:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2172:6:12"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2067:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2078:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2090:6:12","type":""}],"src":"2031:186:12"},{"body":{"nodeType":"YulBlock","src":"2309:173:12","statements":[{"body":{"nodeType":"YulBlock","src":"2355:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2364:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2367:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2357:6:12"},"nodeType":"YulFunctionCall","src":"2357:12:12"},"nodeType":"YulExpressionStatement","src":"2357:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2330:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"2339:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2326:3:12"},"nodeType":"YulFunctionCall","src":"2326:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"2351:2:12","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2322:3:12"},"nodeType":"YulFunctionCall","src":"2322:32:12"},"nodeType":"YulIf","src":"2319:52:12"},{"nodeType":"YulAssignment","src":"2380:39:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2409:9:12"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2390:18:12"},"nodeType":"YulFunctionCall","src":"2390:29:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2380:6:12"}]},{"nodeType":"YulAssignment","src":"2428:48:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2461:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"2472:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2457:3:12"},"nodeType":"YulFunctionCall","src":"2457:18:12"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2438:18:12"},"nodeType":"YulFunctionCall","src":"2438:38:12"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2428:6:12"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2267:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2278:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2290:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2298:6:12","type":""}],"src":"2222:260:12"},{"body":{"nodeType":"YulBlock","src":"2542:382:12","statements":[{"nodeType":"YulAssignment","src":"2552:22:12","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2566:1:12","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"2569:4:12"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2562:3:12"},"nodeType":"YulFunctionCall","src":"2562:12:12"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2552:6:12"}]},{"nodeType":"YulVariableDeclaration","src":"2583:38:12","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2613:4:12"},{"kind":"number","nodeType":"YulLiteral","src":"2619:1:12","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2609:3:12"},"nodeType":"YulFunctionCall","src":"2609:12:12"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"2587:18:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"2660:31:12","statements":[{"nodeType":"YulAssignment","src":"2662:27:12","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2676:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"2684:4:12","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2672:3:12"},"nodeType":"YulFunctionCall","src":"2672:17:12"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2662:6:12"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2640:18:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2633:6:12"},"nodeType":"YulFunctionCall","src":"2633:26:12"},"nodeType":"YulIf","src":"2630:61:12"},{"body":{"nodeType":"YulBlock","src":"2750:168:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2771:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2774:77:12","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2764:6:12"},"nodeType":"YulFunctionCall","src":"2764:88:12"},"nodeType":"YulExpressionStatement","src":"2764:88:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2872:1:12","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2875:4:12","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2865:6:12"},"nodeType":"YulFunctionCall","src":"2865:15:12"},"nodeType":"YulExpressionStatement","src":"2865:15:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2900:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2903:4:12","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2893:6:12"},"nodeType":"YulFunctionCall","src":"2893:15:12"},"nodeType":"YulExpressionStatement","src":"2893:15:12"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2706:18:12"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2729:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"2737:2:12","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2726:2:12"},"nodeType":"YulFunctionCall","src":"2726:14:12"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2703:2:12"},"nodeType":"YulFunctionCall","src":"2703:38:12"},"nodeType":"YulIf","src":"2700:218:12"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2522:4:12","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2531:6:12","type":""}],"src":"2487:437:12"},{"body":{"nodeType":"YulBlock","src":"3103:226:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3120:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"3131:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3113:6:12"},"nodeType":"YulFunctionCall","src":"3113:21:12"},"nodeType":"YulExpressionStatement","src":"3113:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3154:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"3165:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3150:3:12"},"nodeType":"YulFunctionCall","src":"3150:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"3170:2:12","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3143:6:12"},"nodeType":"YulFunctionCall","src":"3143:30:12"},"nodeType":"YulExpressionStatement","src":"3143:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3193:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"3204:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3189:3:12"},"nodeType":"YulFunctionCall","src":"3189:18:12"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"3209:34:12","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3182:6:12"},"nodeType":"YulFunctionCall","src":"3182:62:12"},"nodeType":"YulExpressionStatement","src":"3182:62:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3264:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"3275:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3260:3:12"},"nodeType":"YulFunctionCall","src":"3260:18:12"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"3280:6:12","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3253:6:12"},"nodeType":"YulFunctionCall","src":"3253:34:12"},"nodeType":"YulExpressionStatement","src":"3253:34:12"},{"nodeType":"YulAssignment","src":"3296:27:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3308:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"3319:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3304:3:12"},"nodeType":"YulFunctionCall","src":"3304:19:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3296:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3080:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3094:4:12","type":""}],"src":"2929:400:12"},{"body":{"nodeType":"YulBlock","src":"3508:224:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3525:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"3536:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3518:6:12"},"nodeType":"YulFunctionCall","src":"3518:21:12"},"nodeType":"YulExpressionStatement","src":"3518:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3559:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"3570:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3555:3:12"},"nodeType":"YulFunctionCall","src":"3555:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"3575:2:12","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3548:6:12"},"nodeType":"YulFunctionCall","src":"3548:30:12"},"nodeType":"YulExpressionStatement","src":"3548:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3598:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"3609:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3594:3:12"},"nodeType":"YulFunctionCall","src":"3594:18:12"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"3614:34:12","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3587:6:12"},"nodeType":"YulFunctionCall","src":"3587:62:12"},"nodeType":"YulExpressionStatement","src":"3587:62:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3669:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"3680:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3665:3:12"},"nodeType":"YulFunctionCall","src":"3665:18:12"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"3685:4:12","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3658:6:12"},"nodeType":"YulFunctionCall","src":"3658:32:12"},"nodeType":"YulExpressionStatement","src":"3658:32:12"},{"nodeType":"YulAssignment","src":"3699:27:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3711:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"3722:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3707:3:12"},"nodeType":"YulFunctionCall","src":"3707:19:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3699:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3485:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3499:4:12","type":""}],"src":"3334:398:12"},{"body":{"nodeType":"YulBlock","src":"3911:227:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3928:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"3939:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3921:6:12"},"nodeType":"YulFunctionCall","src":"3921:21:12"},"nodeType":"YulExpressionStatement","src":"3921:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3962:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"3973:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3958:3:12"},"nodeType":"YulFunctionCall","src":"3958:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"3978:2:12","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3951:6:12"},"nodeType":"YulFunctionCall","src":"3951:30:12"},"nodeType":"YulExpressionStatement","src":"3951:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4001:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"4012:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3997:3:12"},"nodeType":"YulFunctionCall","src":"3997:18:12"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"4017:34:12","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3990:6:12"},"nodeType":"YulFunctionCall","src":"3990:62:12"},"nodeType":"YulExpressionStatement","src":"3990:62:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4072:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"4083:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4068:3:12"},"nodeType":"YulFunctionCall","src":"4068:18:12"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"4088:7:12","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4061:6:12"},"nodeType":"YulFunctionCall","src":"4061:35:12"},"nodeType":"YulExpressionStatement","src":"4061:35:12"},{"nodeType":"YulAssignment","src":"4105:27:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4117:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"4128:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4113:3:12"},"nodeType":"YulFunctionCall","src":"4113:19:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4105:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3888:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3902:4:12","type":""}],"src":"3737:401:12"},{"body":{"nodeType":"YulBlock","src":"4317:225:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4334:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"4345:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4327:6:12"},"nodeType":"YulFunctionCall","src":"4327:21:12"},"nodeType":"YulExpressionStatement","src":"4327:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4368:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"4379:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4364:3:12"},"nodeType":"YulFunctionCall","src":"4364:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"4384:2:12","type":"","value":"35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4357:6:12"},"nodeType":"YulFunctionCall","src":"4357:30:12"},"nodeType":"YulExpressionStatement","src":"4357:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4407:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"4418:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4403:3:12"},"nodeType":"YulFunctionCall","src":"4403:18:12"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"4423:34:12","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4396:6:12"},"nodeType":"YulFunctionCall","src":"4396:62:12"},"nodeType":"YulExpressionStatement","src":"4396:62:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4478:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"4489:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4474:3:12"},"nodeType":"YulFunctionCall","src":"4474:18:12"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"4494:5:12","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4467:6:12"},"nodeType":"YulFunctionCall","src":"4467:33:12"},"nodeType":"YulExpressionStatement","src":"4467:33:12"},{"nodeType":"YulAssignment","src":"4509:27:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4521:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"4532:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4517:3:12"},"nodeType":"YulFunctionCall","src":"4517:19:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4509:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4294:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4308:4:12","type":""}],"src":"4143:399:12"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n}","id":12,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100c95760003560e01c80633950935111610081578063a457c2d71161005b578063a457c2d71461019a578063a9059cbb146101ad578063dd62ed3e146101c057600080fd5b8063395093511461014957806370a082311461015c57806395d89b411461019257600080fd5b806318160ddd116100b257806318160ddd1461010f57806323b872dd14610121578063313ce5671461013457600080fd5b806306fdde03146100ce578063095ea7b3146100ec575b600080fd5b6100d6610206565b6040516100e3919061081a565b60405180910390f35b6100ff6100fa3660046108b6565b610298565b60405190151581526020016100e3565b6002545b6040519081526020016100e3565b6100ff61012f3660046108e0565b6102af565b60055460405160ff90911681526020016100e3565b6100ff6101573660046108b6565b610325565b61011361016a36600461091c565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b6100d6610368565b6100ff6101a83660046108b6565b610377565b6100ff6101bb3660046108b6565b6103d3565b6101136101ce36600461093e565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b60606003805461021590610971565b80601f016020809104026020016040519081016040528092919081815260200182805461024190610971565b801561028e5780601f106102635761010080835404028352916020019161028e565b820191906000526020600020905b81548152906001019060200180831161027157829003601f168201915b5050505050905090565b60006102a53384846103e0565b5060015b92915050565b60006102bc848484610599565b61031b8433610316856040518060600160405280602881526020016109ec6028913973ffffffffffffffffffffffffffffffffffffffff8a16600090815260016020908152604080832033845290915290205491906107c3565b6103e0565b5060019392505050565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490916102a5918590610316908661080a565b60606004805461021590610971565b60006102a5338461031685604051806060016040528060258152602001610a146025913933600090815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8d16845290915290205491906107c3565b60006102a5338484610599565b73ffffffffffffffffffffffffffffffffffffffff8316610487576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f726573730000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff821661052a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f7373000000000000000000000000000000000000000000000000000000000000606482015260840161047e565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff831661063c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f6472657373000000000000000000000000000000000000000000000000000000606482015260840161047e565b73ffffffffffffffffffffffffffffffffffffffff82166106df576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f6573730000000000000000000000000000000000000000000000000000000000606482015260840161047e565b610729816040518060600160405280602681526020016109c66026913973ffffffffffffffffffffffffffffffffffffffff861660009081526020819052604090205491906107c3565b73ffffffffffffffffffffffffffffffffffffffff8085166000908152602081905260408082209390935590841681522054610765908261080a565b73ffffffffffffffffffffffffffffffffffffffff8381166000818152602081815260409182902094909455518481529092918616917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910161058c565b8183038184821115610802576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047e919061081a565b509392505050565b808201828110156102a957600080fd5b600060208083528351808285015260005b818110156108475785810183015185820160400152820161082b565b81811115610859576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b803573ffffffffffffffffffffffffffffffffffffffff811681146108b157600080fd5b919050565b600080604083850312156108c957600080fd5b6108d28361088d565b946020939093013593505050565b6000806000606084860312156108f557600080fd5b6108fe8461088d565b925061090c6020850161088d565b9150604084013590509250925092565b60006020828403121561092e57600080fd5b6109378261088d565b9392505050565b6000806040838503121561095157600080fd5b61095a8361088d565b91506109686020840161088d565b90509250929050565b600181811c9082168061098557607f821691505b602082108114156109bf577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b5091905056fe45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220fd2c11cfac536a0fe169bd478163dc416442b9c31de074a5cb90bed92510c21f64736f6c634300080a0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x15C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x134 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xEC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD6 PUSH2 0x206 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x81A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFF PUSH2 0xFA CALLDATASIZE PUSH1 0x4 PUSH2 0x8B6 JUMP JUMPDEST PUSH2 0x298 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE3 JUMP JUMPDEST PUSH2 0xFF PUSH2 0x12F CALLDATASIZE PUSH1 0x4 PUSH2 0x8E0 JUMP JUMPDEST PUSH2 0x2AF JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE3 JUMP JUMPDEST PUSH2 0xFF PUSH2 0x157 CALLDATASIZE PUSH1 0x4 PUSH2 0x8B6 JUMP JUMPDEST PUSH2 0x325 JUMP JUMPDEST PUSH2 0x113 PUSH2 0x16A CALLDATASIZE PUSH1 0x4 PUSH2 0x91C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xD6 PUSH2 0x368 JUMP JUMPDEST PUSH2 0xFF PUSH2 0x1A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x8B6 JUMP JUMPDEST PUSH2 0x377 JUMP JUMPDEST PUSH2 0xFF PUSH2 0x1BB CALLDATASIZE PUSH1 0x4 PUSH2 0x8B6 JUMP JUMPDEST PUSH2 0x3D3 JUMP JUMPDEST PUSH2 0x113 PUSH2 0x1CE CALLDATASIZE PUSH1 0x4 PUSH2 0x93E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x215 SWAP1 PUSH2 0x971 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x241 SWAP1 PUSH2 0x971 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x28E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x263 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x28E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x271 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A5 CALLER DUP5 DUP5 PUSH2 0x3E0 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BC DUP5 DUP5 DUP5 PUSH2 0x599 JUMP JUMPDEST PUSH2 0x31B DUP5 CALLER PUSH2 0x316 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x9EC PUSH1 0x28 SWAP2 CODECOPY PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x7C3 JUMP JUMPDEST PUSH2 0x3E0 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x2A5 SWAP2 DUP6 SWAP1 PUSH2 0x316 SWAP1 DUP7 PUSH2 0x80A JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x215 SWAP1 PUSH2 0x971 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A5 CALLER DUP5 PUSH2 0x316 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA14 PUSH1 0x25 SWAP2 CODECOPY CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x7C3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A5 CALLER DUP5 DUP5 PUSH2 0x599 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x487 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x52A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x47E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x63C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x47E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x6DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x47E JUMP JUMPDEST PUSH2 0x729 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x9C6 PUSH1 0x26 SWAP2 CODECOPY PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x7C3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x765 SWAP1 DUP3 PUSH2 0x80A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE MLOAD DUP5 DUP2 MSTORE SWAP1 SWAP3 SWAP2 DUP7 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH2 0x58C JUMP JUMPDEST DUP2 DUP4 SUB DUP2 DUP5 DUP3 GT ISZERO PUSH2 0x802 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47E SWAP2 SWAP1 PUSH2 0x81A JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP3 DUP2 LT ISZERO PUSH2 0x2A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x847 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x82B JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x859 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x8B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x8C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8D2 DUP4 PUSH2 0x88D JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x8F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8FE DUP5 PUSH2 0x88D JUMP JUMPDEST SWAP3 POP PUSH2 0x90C PUSH1 0x20 DUP6 ADD PUSH2 0x88D JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x92E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x937 DUP3 PUSH2 0x88D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x951 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x95A DUP4 PUSH2 0x88D JUMP JUMPDEST SWAP2 POP PUSH2 0x968 PUSH1 0x20 DUP5 ADD PUSH2 0x88D JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x985 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x9BF JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x2062616C616E636545524332303A207472616E73 PUSH7 0x657220616D6F75 PUSH15 0x74206578636565647320616C6C6F77 PUSH2 0x6E63 PUSH6 0x45524332303A KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x7358221220FD2C GT 0xCF 0xAC MSTORE8 PUSH11 0xFE169BD478163DC416442 0xB9 0xC3 SAR 0xE0 PUSH21 0xA5CB90BED92510C21F64736F6C634300080A003300 ","sourceMap":"1318:8978:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2123:75;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4029:156;;;;;;:::i;:::-;;:::i;:::-;;;1300:14:12;;1293:22;1275:41;;1263:2;1248:18;4029:156:2;1135:187:12;3102:92:2;3177:12;;3102:92;;;1473:25:12;;;1461:2;1446:18;3102:92:2;1327:177:12;4619:343:2;;;;;;:::i;:::-;;:::i;2975:75::-;3036:9;;2975:75;;3036:9;;;;1984:36:12;;1972:2;1957:18;2975:75:2;1842:184:12;5331:205:2;;;;;;:::i;:::-;;:::i;3244:111::-;;;;;;:::i;:::-;3332:18;;3310:7;3332:18;;;;;;;;;;;;3244:111;2301:79;;;:::i;5993:316::-;;;;;;:::i;:::-;;:::i;3540:162::-;;;;;;:::i;:::-;;:::i;3752:155::-;;;;;;:::i;:::-;3875:18;;;;3853:7;3875:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3752:155;2123:75;2160:13;2188:5;2181:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2123:75;:::o;4029:156::-;4112:4;4124:39;678:10:1;4147:7:2;4156:6;4124:8;:39::i;:::-;-1:-1:-1;4176:4:2;4029:156;;;;;:::o;4619:343::-;4741:4;4753:36;4763:6;4771:9;4782:6;4753:9;:36::i;:::-;4795:145;4811:6;678:10:1;4845:89:2;4883:6;4845:89;;;;;;;;;;;;;;;;;:19;;;;;;;:11;:19;;;;;;;;678:10:1;4845:33:2;;;;;;;;;;:37;:89::i;:::-;4795:8;:145::i;:::-;-1:-1:-1;4953:4:2;4619:343;;;;;:::o;5331:205::-;678:10:1;5419:4:2;5463:25;;;:11;:25;;;;;;;;;:34;;;;;;;;;;5419:4;;5431:83;;5454:7;;5463:50;;5502:10;5463:38;:50::i;2301:79::-;2340:13;2368:7;2361:14;;;;;:::i;5993:316::-;6098:4;6110:177;678:10:1;6146:7:2;6161:120;6209:15;6161:120;;;;;;;;;;;;;;;;;678:10:1;6161:25:2;;;;:11;:25;;;;;;;;;:34;;;;;;;;;;;;:38;:120::i;3540:162::-;3626:4;3638:42;678:10:1;3662:9:2;3673:6;3638:9;:42::i;8935:322::-;9032:19;;;9024:68;;;;;;;3131:2:12;9024:68:2;;;3113:21:12;3170:2;3150:18;;;3143:30;3209:34;3189:18;;;3182:62;3280:6;3260:18;;;3253:34;3304:19;;9024:68:2;;;;;;;;;9106:21;;;9098:68;;;;;;;3536:2:12;9098:68:2;;;3518:21:12;3575:2;3555:18;;;3548:30;3614:34;3594:18;;;3587:62;3685:4;3665:18;;;3658:32;3707:19;;9098:68:2;3334:398:12;9098:68:2;9173:18;;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;9220:32;;1473:25:12;;;9220:32:2;;1446:18:12;9220:32:2;;;;;;;;8935:322;;;:::o;6753:504::-;6854:20;;;6846:70;;;;;;;3939:2:12;6846:70:2;;;3921:21:12;3978:2;3958:18;;;3951:30;4017:34;3997:18;;;3990:62;4088:7;4068:18;;;4061:35;4113:19;;6846:70:2;3737:401:12;6846:70:2;6930:23;;;6922:71;;;;;;;4345:2:12;6922:71:2;;;4327:21:12;4384:2;4364:18;;;4357:30;4423:34;4403:18;;;4396:62;4494:5;4474:18;;;4467:33;4517:19;;6922:71:2;4143:399:12;6922:71:2;7074;7096:6;7074:71;;;;;;;;;;;;;;;;;:17;;;:9;:17;;;;;;;;;;;;:71;:21;:71::i;:::-;7054:17;;;;:9;:17;;;;;;;;;;;:91;;;;7174:20;;;;;;;:32;;7199:6;7174:24;:32::i;:::-;7151:20;;;;:9;:20;;;;;;;;;;;;:55;;;;7217:35;1473:25:12;;;7151:20:2;;7217:35;;;;;;1446:18:12;7217:35:2;1327:177:12;1011:161:5;1140:5;;;1153:7;1135:16;;;;1127:34;;;;;;;;;;;;;:::i;:::-;;1011:161;;;;;:::o;410:129::-;516:5;;;511:16;;;;503:25;;;;;14:656:12;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;586:2:12;574:15;591:66;570:88;555:104;;;;661:2;551:113;;14:656;-1:-1:-1;;;14:656:12:o;675:196::-;743:20;;803:42;792:54;;782:65;;772:93;;861:1;858;851:12;772:93;675:196;;;:::o;876:254::-;944:6;952;1005:2;993:9;984:7;980:23;976:32;973:52;;;1021:1;1018;1011:12;973:52;1044:29;1063:9;1044:29;:::i;:::-;1034:39;1120:2;1105:18;;;;1092:32;;-1:-1:-1;;;876:254:12:o;1509:328::-;1586:6;1594;1602;1655:2;1643:9;1634:7;1630:23;1626:32;1623:52;;;1671:1;1668;1661:12;1623:52;1694:29;1713:9;1694:29;:::i;:::-;1684:39;;1742:38;1776:2;1765:9;1761:18;1742:38;:::i;:::-;1732:48;;1827:2;1816:9;1812:18;1799:32;1789:42;;1509:328;;;;;:::o;2031:186::-;2090:6;2143:2;2131:9;2122:7;2118:23;2114:32;2111:52;;;2159:1;2156;2149:12;2111:52;2182:29;2201:9;2182:29;:::i;:::-;2172:39;2031:186;-1:-1:-1;;;2031:186:12:o;2222:260::-;2290:6;2298;2351:2;2339:9;2330:7;2326:23;2322:32;2319:52;;;2367:1;2364;2357:12;2319:52;2390:29;2409:9;2390:29;:::i;:::-;2380:39;;2438:38;2472:2;2461:9;2457:18;2438:38;:::i;:::-;2428:48;;2222:260;;;;;:::o;2487:437::-;2566:1;2562:12;;;;2609;;;2630:61;;2684:4;2676:6;2672:17;2662:27;;2630:61;2737:2;2729:6;2726:14;2706:18;2703:38;2700:218;;;2774:77;2771:1;2764:88;2875:4;2872:1;2865:15;2903:4;2900:1;2893:15;2700:218;;2487:437;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"534000","executionCost":"infinite","totalCost":"infinite"},"external":{"allowance(address,address)":"infinite","approve(address,uint256)":"24596","balanceOf(address)":"2561","decimals()":"2356","decreaseAllowance(address,uint256)":"infinite","increaseAllowance(address,uint256)":"infinite","name()":"infinite","symbol()":"infinite","totalSupply()":"2304","transfer(address,uint256)":"infinite","transferFrom(address,address,uint256)":"infinite"},"internal":{"_approve(address,address,uint256)":"infinite","_beforeTokenTransfer(address,address,uint256)":"infinite","_burn(address,uint256)":"infinite","_mint(address,uint256)":"infinite","_setupDecimals(uint8)":"infinite","_transfer(address,address,uint256)":"infinite"}},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}, initializes {decimals} with a default value of 18. To select a different value for {decimals}, use {_setupDecimals}. All three of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":25000},\"remappings\":[]},\"sources\":{\"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Address.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n  /**\\n   * @dev Returns true if `account` is a contract.\\n   *\\n   * [IMPORTANT]\\n   * ====\\n   * It is unsafe to assume that an address for which this function returns\\n   * false is an externally-owned account (EOA) and not a contract.\\n   *\\n   * Among others, `isContract` will return false for the following\\n   * types of addresses:\\n   *\\n   *  - an externally-owned account\\n   *  - a contract in construction\\n   *  - an address where a contract will be created\\n   *  - an address where a contract lived, but was destroyed\\n   * ====\\n   */\\n  function isContract(address account) internal view returns (bool) {\\n    // This method relies on extcodesize, which returns 0 for contracts in\\n    // construction, since the code is only stored at the end of the\\n    // constructor execution.\\n\\n    uint256 size;\\n    assembly {\\n      size := extcodesize(account)\\n    }\\n    return size > 0;\\n  }\\n\\n  /**\\n   * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n   * `recipient`, forwarding all available gas and reverting on errors.\\n   *\\n   * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n   * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n   * imposed by `transfer`, making them unable to receive funds via\\n   * `transfer`. {sendValue} removes this limitation.\\n   *\\n   * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n   *\\n   * IMPORTANT: because control is transferred to `recipient`, care must be\\n   * taken to not create reentrancy vulnerabilities. Consider using\\n   * {ReentrancyGuard} or the\\n   * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n   */\\n  function sendValue(address payable recipient, uint256 amount) internal {\\n    require(address(this).balance >= amount, 'Address: insufficient balance');\\n\\n    (bool success, ) = recipient.call{value: amount}('');\\n    require(success, 'Address: unable to send value, recipient may have reverted');\\n  }\\n\\n  /**\\n   * @dev Performs a Solidity function call using a low level `call`. A\\n   * plain `call` is an unsafe replacement for a function call: use this\\n   * function instead.\\n   *\\n   * If `target` reverts with a revert reason, it is bubbled up by this\\n   * function (like regular Solidity function calls).\\n   *\\n   * Returns the raw returned data. To convert to the expected return value,\\n   * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n   *\\n   * Requirements:\\n   *\\n   * - `target` must be a contract.\\n   * - calling `target` with `data` must not revert.\\n   *\\n   * _Available since v3.1._\\n   */\\n  function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n    return functionCall(target, data, 'Address: low-level call failed');\\n  }\\n\\n  /**\\n   * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n   * `errorMessage` as a fallback revert reason when `target` reverts.\\n   *\\n   * _Available since v3.1._\\n   */\\n  function functionCall(\\n    address target,\\n    bytes memory data,\\n    string memory errorMessage\\n  ) internal returns (bytes memory) {\\n    return functionCallWithValue(target, data, 0, errorMessage);\\n  }\\n\\n  /**\\n   * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n   * but also transferring `value` wei to `target`.\\n   *\\n   * Requirements:\\n   *\\n   * - the calling contract must have an ETH balance of at least `value`.\\n   * - the called Solidity function must be `payable`.\\n   *\\n   * _Available since v3.1._\\n   */\\n  function functionCallWithValue(\\n    address target,\\n    bytes memory data,\\n    uint256 value\\n  ) internal returns (bytes memory) {\\n    return functionCallWithValue(target, data, value, 'Address: low-level call with value failed');\\n  }\\n\\n  /**\\n   * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n   * with `errorMessage` as a fallback revert reason when `target` reverts.\\n   *\\n   * _Available since v3.1._\\n   */\\n  function functionCallWithValue(\\n    address target,\\n    bytes memory data,\\n    uint256 value,\\n    string memory errorMessage\\n  ) internal returns (bytes memory) {\\n    require(address(this).balance >= value, 'Address: insufficient balance for call');\\n    require(isContract(target), 'Address: call to non-contract');\\n\\n    (bool success, bytes memory returndata) = target.call{value: value}(data);\\n    return verifyCallResult(success, returndata, errorMessage);\\n  }\\n\\n  /**\\n   * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n   * but performing a static call.\\n   *\\n   * _Available since v3.3._\\n   */\\n  function functionStaticCall(\\n    address target,\\n    bytes memory data\\n  ) internal view returns (bytes memory) {\\n    return functionStaticCall(target, data, 'Address: low-level static call failed');\\n  }\\n\\n  /**\\n   * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n   * but performing a static call.\\n   *\\n   * _Available since v3.3._\\n   */\\n  function functionStaticCall(\\n    address target,\\n    bytes memory data,\\n    string memory errorMessage\\n  ) internal view returns (bytes memory) {\\n    require(isContract(target), 'Address: static call to non-contract');\\n\\n    (bool success, bytes memory returndata) = target.staticcall(data);\\n    return verifyCallResult(success, returndata, errorMessage);\\n  }\\n\\n  /**\\n   * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n   * but performing a delegate call.\\n   *\\n   * _Available since v3.4._\\n   */\\n  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n    return functionDelegateCall(target, data, 'Address: low-level delegate call failed');\\n  }\\n\\n  /**\\n   * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n   * but performing a delegate call.\\n   *\\n   * _Available since v3.4._\\n   */\\n  function functionDelegateCall(\\n    address target,\\n    bytes memory data,\\n    string memory errorMessage\\n  ) internal returns (bytes memory) {\\n    require(isContract(target), 'Address: delegate call to non-contract');\\n\\n    (bool success, bytes memory returndata) = target.delegatecall(data);\\n    return verifyCallResult(success, returndata, errorMessage);\\n  }\\n\\n  /**\\n   * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n   * revert reason using the provided one.\\n   *\\n   * _Available since v4.3._\\n   */\\n  function verifyCallResult(\\n    bool success,\\n    bytes memory returndata,\\n    string memory errorMessage\\n  ) internal pure returns (bytes memory) {\\n    if (success) {\\n      return returndata;\\n    } else {\\n      // Look for revert reason and bubble it up if present\\n      if (returndata.length > 0) {\\n        // The easiest way to bubble the revert reason is using memory via assembly\\n\\n        assembly {\\n          let returndata_size := mload(returndata)\\n          revert(add(32, returndata), returndata_size)\\n        }\\n      } else {\\n        revert(errorMessage);\\n      }\\n    }\\n  }\\n}\\n\",\"keccak256\":\"0x4ce20476966f73ba3c0aeb85b602b6ecc4e715f5bd9524d1c6286819282c76c5\",\"license\":\"MIT\"},\"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n  function _msgSender() internal view virtual returns (address payable) {\\n    return payable(msg.sender);\\n  }\\n\\n  function _msgData() internal view virtual returns (bytes memory) {\\n    this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n    return msg.data;\\n  }\\n}\\n\",\"keccak256\":\"0xc0df5ebb2c3d8b4509464c40a88cc51e5e5f5e4a26fafc909330e9bb2658f641\",\"license\":\"MIT\"},\"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport './Context.sol';\\nimport './IERC20.sol';\\nimport './SafeMath.sol';\\nimport './Address.sol';\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin guidelines: functions revert instead\\n * of returning `false` on failure. This behavior is nonetheless conventional\\n * and does not conflict with the expectations of ERC20 applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20 {\\n  using SafeMath for uint256;\\n  using Address for address;\\n\\n  mapping(address => uint256) private _balances;\\n\\n  mapping(address => mapping(address => uint256)) private _allowances;\\n\\n  uint256 private _totalSupply;\\n\\n  string private _name;\\n  string private _symbol;\\n  uint8 private _decimals;\\n\\n  /**\\n   * @dev Sets the values for {name} and {symbol}, initializes {decimals} with\\n   * a default value of 18.\\n   *\\n   * To select a different value for {decimals}, use {_setupDecimals}.\\n   *\\n   * All three of these values are immutable: they can only be set once during\\n   * construction.\\n   */\\n  constructor(string memory name, string memory symbol) {\\n    _name = name;\\n    _symbol = symbol;\\n    _decimals = 18;\\n  }\\n\\n  /**\\n   * @dev Returns the name of the token.\\n   */\\n  function name() public view returns (string memory) {\\n    return _name;\\n  }\\n\\n  /**\\n   * @dev Returns the symbol of the token, usually a shorter version of the\\n   * name.\\n   */\\n  function symbol() public view returns (string memory) {\\n    return _symbol;\\n  }\\n\\n  /**\\n   * @dev Returns the number of decimals used to get its user representation.\\n   * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n   * be displayed to a user as `5,05` (`505 / 10 ** 2`).\\n   *\\n   * Tokens usually opt for a value of 18, imitating the relationship between\\n   * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\\n   * called.\\n   *\\n   * NOTE: This information is only used for _display_ purposes: it in\\n   * no way affects any of the arithmetic of the contract, including\\n   * {IERC20-balanceOf} and {IERC20-transfer}.\\n   */\\n  function decimals() public view returns (uint8) {\\n    return _decimals;\\n  }\\n\\n  /**\\n   * @dev See {IERC20-totalSupply}.\\n   */\\n  function totalSupply() public view override returns (uint256) {\\n    return _totalSupply;\\n  }\\n\\n  /**\\n   * @dev See {IERC20-balanceOf}.\\n   */\\n  function balanceOf(address account) public view override returns (uint256) {\\n    return _balances[account];\\n  }\\n\\n  /**\\n   * @dev See {IERC20-transfer}.\\n   *\\n   * Requirements:\\n   *\\n   * - `recipient` cannot be the zero address.\\n   * - the caller must have a balance of at least `amount`.\\n   */\\n  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\\n    _transfer(_msgSender(), recipient, amount);\\n    return true;\\n  }\\n\\n  /**\\n   * @dev See {IERC20-allowance}.\\n   */\\n  function allowance(\\n    address owner,\\n    address spender\\n  ) public view virtual override returns (uint256) {\\n    return _allowances[owner][spender];\\n  }\\n\\n  /**\\n   * @dev See {IERC20-approve}.\\n   *\\n   * Requirements:\\n   *\\n   * - `spender` cannot be the zero address.\\n   */\\n  function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n    _approve(_msgSender(), spender, amount);\\n    return true;\\n  }\\n\\n  /**\\n   * @dev See {IERC20-transferFrom}.\\n   *\\n   * Emits an {Approval} event indicating the updated allowance. This is not\\n   * required by the EIP. See the note at the beginning of {ERC20};\\n   *\\n   * Requirements:\\n   * - `sender` and `recipient` cannot be the zero address.\\n   * - `sender` must have a balance of at least `amount`.\\n   * - the caller must have allowance for ``sender``'s tokens of at least\\n   * `amount`.\\n   */\\n  function transferFrom(\\n    address sender,\\n    address recipient,\\n    uint256 amount\\n  ) public virtual override returns (bool) {\\n    _transfer(sender, recipient, amount);\\n    _approve(\\n      sender,\\n      _msgSender(),\\n      _allowances[sender][_msgSender()].sub(amount, 'ERC20: transfer amount exceeds allowance')\\n    );\\n    return true;\\n  }\\n\\n  /**\\n   * @dev Atomically increases the allowance granted to `spender` by the caller.\\n   *\\n   * This is an alternative to {approve} that can be used as a mitigation for\\n   * problems described in {IERC20-approve}.\\n   *\\n   * Emits an {Approval} event indicating the updated allowance.\\n   *\\n   * Requirements:\\n   *\\n   * - `spender` cannot be the zero address.\\n   */\\n  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\\n    return true;\\n  }\\n\\n  /**\\n   * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n   *\\n   * This is an alternative to {approve} that can be used as a mitigation for\\n   * problems described in {IERC20-approve}.\\n   *\\n   * Emits an {Approval} event indicating the updated allowance.\\n   *\\n   * Requirements:\\n   *\\n   * - `spender` cannot be the zero address.\\n   * - `spender` must have allowance for the caller of at least\\n   * `subtractedValue`.\\n   */\\n  function decreaseAllowance(\\n    address spender,\\n    uint256 subtractedValue\\n  ) public virtual returns (bool) {\\n    _approve(\\n      _msgSender(),\\n      spender,\\n      _allowances[_msgSender()][spender].sub(\\n        subtractedValue,\\n        'ERC20: decreased allowance below zero'\\n      )\\n    );\\n    return true;\\n  }\\n\\n  /**\\n   * @dev Moves tokens `amount` from `sender` to `recipient`.\\n   *\\n   * This is internal function is equivalent to {transfer}, and can be used to\\n   * e.g. implement automatic token fees, slashing mechanisms, etc.\\n   *\\n   * Emits a {Transfer} event.\\n   *\\n   * Requirements:\\n   *\\n   * - `sender` cannot be the zero address.\\n   * - `recipient` cannot be the zero address.\\n   * - `sender` must have a balance of at least `amount`.\\n   */\\n  function _transfer(address sender, address recipient, uint256 amount) internal virtual {\\n    require(sender != address(0), 'ERC20: transfer from the zero address');\\n    require(recipient != address(0), 'ERC20: transfer to the zero address');\\n\\n    _beforeTokenTransfer(sender, recipient, amount);\\n\\n    _balances[sender] = _balances[sender].sub(amount, 'ERC20: transfer amount exceeds balance');\\n    _balances[recipient] = _balances[recipient].add(amount);\\n    emit Transfer(sender, recipient, amount);\\n  }\\n\\n  /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n   * the total supply.\\n   *\\n   * Emits a {Transfer} event with `from` set to the zero address.\\n   *\\n   * Requirements\\n   *\\n   * - `to` cannot be the zero address.\\n   */\\n  function _mint(address account, uint256 amount) internal virtual {\\n    require(account != address(0), 'ERC20: mint to the zero address');\\n\\n    _beforeTokenTransfer(address(0), account, amount);\\n\\n    _totalSupply = _totalSupply.add(amount);\\n    _balances[account] = _balances[account].add(amount);\\n    emit Transfer(address(0), account, amount);\\n  }\\n\\n  /**\\n   * @dev Destroys `amount` tokens from `account`, reducing the\\n   * total supply.\\n   *\\n   * Emits a {Transfer} event with `to` set to the zero address.\\n   *\\n   * Requirements\\n   *\\n   * - `account` cannot be the zero address.\\n   * - `account` must have at least `amount` tokens.\\n   */\\n  function _burn(address account, uint256 amount) internal virtual {\\n    require(account != address(0), 'ERC20: burn from the zero address');\\n\\n    _beforeTokenTransfer(account, address(0), amount);\\n\\n    _balances[account] = _balances[account].sub(amount, 'ERC20: burn amount exceeds balance');\\n    _totalSupply = _totalSupply.sub(amount);\\n    emit Transfer(account, address(0), amount);\\n  }\\n\\n  /**\\n   * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\\n   *\\n   * This is internal function is equivalent to `approve`, and can be used to\\n   * e.g. set automatic allowances for certain subsystems, etc.\\n   *\\n   * Emits an {Approval} event.\\n   *\\n   * Requirements:\\n   *\\n   * - `owner` cannot be the zero address.\\n   * - `spender` cannot be the zero address.\\n   */\\n  function _approve(address owner, address spender, uint256 amount) internal virtual {\\n    require(owner != address(0), 'ERC20: approve from the zero address');\\n    require(spender != address(0), 'ERC20: approve to the zero address');\\n\\n    _allowances[owner][spender] = amount;\\n    emit Approval(owner, spender, amount);\\n  }\\n\\n  /**\\n   * @dev Sets {decimals} to a value other than the default one of 18.\\n   *\\n   * WARNING: This function should only be called from the constructor. Most\\n   * applications that interact with token contracts will not expect\\n   * {decimals} to ever change, and may work incorrectly if it does.\\n   */\\n  function _setupDecimals(uint8 decimals_) internal {\\n    _decimals = decimals_;\\n  }\\n\\n  /**\\n   * @dev Hook that is called before any transfer of tokens. This includes\\n   * minting and burning.\\n   *\\n   * Calling conditions:\\n   *\\n   * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n   * will be to transferred to `to`.\\n   * - when `from` is zero, `amount` tokens will be minted for `to`.\\n   * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n   * - `from` and `to` are never both zero.\\n   *\\n   * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n   */\\n  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n}\\n\",\"keccak256\":\"0x84e6a151684cce31e66c850677f7e9455d694e050e409e5ded05fb5528c6c7e4\",\"license\":\"MIT\"},\"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n  /**\\n   * @dev Returns the amount of tokens in existence.\\n   */\\n  function totalSupply() external view returns (uint256);\\n\\n  /**\\n   * @dev Returns the amount of tokens owned by `account`.\\n   */\\n  function balanceOf(address account) external view returns (uint256);\\n\\n  /**\\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * Emits a {Transfer} event.\\n   */\\n  function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n  /**\\n   * @dev Returns the remaining number of tokens that `spender` will be\\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n   * zero by default.\\n   *\\n   * This value changes when {approve} or {transferFrom} are called.\\n   */\\n  function allowance(address owner, address spender) external view returns (uint256);\\n\\n  /**\\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n   * that someone may use both the old and the new allowance by unfortunate\\n   * transaction ordering. One possible solution to mitigate this race\\n   * condition is to first reduce the spender's allowance to 0 and set the\\n   * desired value afterwards:\\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n   *\\n   * Emits an {Approval} event.\\n   */\\n  function approve(address spender, uint256 amount) external returns (bool);\\n\\n  /**\\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n   * allowance mechanism. `amount` is then deducted from the caller's\\n   * allowance.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * Emits a {Transfer} event.\\n   */\\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n  /**\\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n   * another (`to`).\\n   *\\n   * Note that `value` may be zero.\\n   */\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n  /**\\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n   * a call to {approve}. `value` is the new allowance.\\n   */\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xf57d62241e553696a1324d225663ba2e1a51db0a51ca236d0c1b009d89b6284c\",\"license\":\"AGPL-3.0\"},\"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity ^0.8.0;\\n\\n/// @title Optimized overflow and underflow safe math operations\\n/// @notice Contains methods for doing math operations that revert on overflow or underflow for minimal gas cost\\nlibrary SafeMath {\\n  /// @notice Returns x + y, reverts if sum overflows uint256\\n  /// @param x The augend\\n  /// @param y The addend\\n  /// @return z The sum of x and y\\n  function add(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n    unchecked {\\n      require((z = x + y) >= x);\\n    }\\n  }\\n\\n  /// @notice Returns x - y, reverts if underflows\\n  /// @param x The minuend\\n  /// @param y The subtrahend\\n  /// @return z The difference of x and y\\n  function sub(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n    unchecked {\\n      require((z = x - y) <= x);\\n    }\\n  }\\n\\n  /// @notice Returns x - y, reverts if underflows\\n  /// @param x The minuend\\n  /// @param y The subtrahend\\n  /// @param message The error msg\\n  /// @return z The difference of x and y\\n  function sub(uint256 x, uint256 y, string memory message) internal pure returns (uint256 z) {\\n    unchecked {\\n      require((z = x - y) <= x, message);\\n    }\\n  }\\n\\n  /// @notice Returns x * y, reverts if overflows\\n  /// @param x The multiplicand\\n  /// @param y The multiplier\\n  /// @return z The product of x and y\\n  function mul(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n    unchecked {\\n      require(x == 0 || (z = x * y) / x == y);\\n    }\\n  }\\n\\n  /// @notice Returns x / y, reverts if overflows - no specific check, solidity reverts on division by 0\\n  /// @param x The numerator\\n  /// @param y The denominator\\n  /// @return z The product of x and y\\n  function div(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n    return x / y;\\n  }\\n}\\n\",\"keccak256\":\"0xf1c5d8ba70a5fc3e20dbbc2aa2a2278d2535a57bc1e9abf1228ebc3068a045f0\",\"license\":\"AGPL-3.0\"}},\"version\":1}","storageLayout":{"storage":[{"astId":343,"contract":"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/ERC20.sol:ERC20","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":349,"contract":"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/ERC20.sol:ERC20","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":351,"contract":"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/ERC20.sol:ERC20","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":353,"contract":"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/ERC20.sol:ERC20","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":355,"contract":"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/ERC20.sol:ERC20","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"},{"astId":357,"contract":"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/ERC20.sol:ERC20","label":"_decimals","offset":0,"slot":"5","type":"t_uint8"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":25000},\"remappings\":[]},\"sources\":{\"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n  /**\\n   * @dev Returns the amount of tokens in existence.\\n   */\\n  function totalSupply() external view returns (uint256);\\n\\n  /**\\n   * @dev Returns the amount of tokens owned by `account`.\\n   */\\n  function balanceOf(address account) external view returns (uint256);\\n\\n  /**\\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * Emits a {Transfer} event.\\n   */\\n  function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n  /**\\n   * @dev Returns the remaining number of tokens that `spender` will be\\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n   * zero by default.\\n   *\\n   * This value changes when {approve} or {transferFrom} are called.\\n   */\\n  function allowance(address owner, address spender) external view returns (uint256);\\n\\n  /**\\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n   * that someone may use both the old and the new allowance by unfortunate\\n   * transaction ordering. One possible solution to mitigate this race\\n   * condition is to first reduce the spender's allowance to 0 and set the\\n   * desired value afterwards:\\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n   *\\n   * Emits an {Approval} event.\\n   */\\n  function approve(address spender, uint256 amount) external returns (bool);\\n\\n  /**\\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n   * allowance mechanism. `amount` is then deducted from the caller's\\n   * allowance.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * Emits a {Transfer} event.\\n   */\\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n  /**\\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n   * another (`to`).\\n   *\\n   * Note that `value` may be zero.\\n   */\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n  /**\\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n   * a call to {approve}. `value` is the new allowance.\\n   */\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xf57d62241e553696a1324d225663ba2e1a51db0a51ca236d0c1b009d89b6284c\",\"license\":\"AGPL-3.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol":{"Ownable":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_943":{"entryPoint":null,"id":943,"parameterSlots":0,"returnSlots":0},"@_msgSender_310":{"entryPoint":null,"id":310,"parameterSlots":0,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506103a8806100616000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063715018a6146100465780638da5cb5b14610050578063f2fde38b1461007c575b600080fd5b61004e61008f565b005b6000546040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b61004e61008a366004610335565b610184565b60005473ffffffffffffffffffffffffffffffffffffffff163314610115576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6000805460405173ffffffffffffffffffffffffffffffffffffffff909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b60005473ffffffffffffffffffffffffffffffffffffffff163314610205576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161010c565b73ffffffffffffffffffffffffffffffffffffffff81166102a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161010c565b6000805460405173ffffffffffffffffffffffffffffffffffffffff808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60006020828403121561034757600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461036b57600080fd5b939250505056fea264697066735822122060d66b4a3ca2303d27305cff4c89e74478f62be4c3336779c48a50eedb33405364736f6c634300080a0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 DUP3 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP PUSH2 0x3A8 DUP1 PUSH2 0x61 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x7C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x8F JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x4E PUSH2 0x8A CALLDATASIZE PUSH1 0x4 PUSH2 0x335 JUMP JUMPDEST PUSH2 0x184 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x115 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x205 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x10C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x2A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x10C JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x347 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x36B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH1 0xD6 PUSH12 0x4A3CA2303D27305CFF4C89E7 DIFFICULTY PUSH25 0xF62BE4C3336779C48A50EEDB33405364736F6C634300080A00 CALLER ","sourceMap":"578:1525:4:-:0;;;815:135;;;;;;;;;-1:-1:-1;835:17:4;873:18;;-1:-1:-1;;;;;;873:18:4;678:10:1;873:18:4;;;;;902:43;;678:10:1;;;;902:43:4;;835:17;;902:43;829:121;578:1525;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_msgSender_310":{"entryPoint":null,"id":310,"parameterSlots":0,"returnSlots":1},"@owner_952":{"entryPoint":null,"id":952,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_987":{"entryPoint":143,"id":987,"parameterSlots":0,"returnSlots":0},"@transferOwnership_1015":{"entryPoint":388,"id":1015,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_address":{"entryPoint":821,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1324:12","statements":[{"nodeType":"YulBlock","src":"6:3:12","statements":[]},{"body":{"nodeType":"YulBlock","src":"115:125:12","statements":[{"nodeType":"YulAssignment","src":"125:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"137:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"148:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"133:3:12"},"nodeType":"YulFunctionCall","src":"133:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"125:4:12"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"167:9:12"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"182:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"190:42:12","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"178:3:12"},"nodeType":"YulFunctionCall","src":"178:55:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"160:6:12"},"nodeType":"YulFunctionCall","src":"160:74:12"},"nodeType":"YulExpressionStatement","src":"160:74:12"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"84:9:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"95:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"106:4:12","type":""}],"src":"14:226:12"},{"body":{"nodeType":"YulBlock","src":"315:239:12","statements":[{"body":{"nodeType":"YulBlock","src":"361:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"370:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"373:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"363:6:12"},"nodeType":"YulFunctionCall","src":"363:12:12"},"nodeType":"YulExpressionStatement","src":"363:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"336:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"345:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"332:3:12"},"nodeType":"YulFunctionCall","src":"332:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"357:2:12","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"328:3:12"},"nodeType":"YulFunctionCall","src":"328:32:12"},"nodeType":"YulIf","src":"325:52:12"},{"nodeType":"YulVariableDeclaration","src":"386:36:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"412:9:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"399:12:12"},"nodeType":"YulFunctionCall","src":"399:23:12"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"390:5:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"508:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"517:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"520:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"510:6:12"},"nodeType":"YulFunctionCall","src":"510:12:12"},"nodeType":"YulExpressionStatement","src":"510:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"444:5:12"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"455:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"462:42:12","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"451:3:12"},"nodeType":"YulFunctionCall","src":"451:54:12"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"441:2:12"},"nodeType":"YulFunctionCall","src":"441:65:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"434:6:12"},"nodeType":"YulFunctionCall","src":"434:73:12"},"nodeType":"YulIf","src":"431:93:12"},{"nodeType":"YulAssignment","src":"533:15:12","value":{"name":"value","nodeType":"YulIdentifier","src":"543:5:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"533:6:12"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"281:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"292:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"304:6:12","type":""}],"src":"245:309:12"},{"body":{"nodeType":"YulBlock","src":"733:182:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"750:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"761:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"743:6:12"},"nodeType":"YulFunctionCall","src":"743:21:12"},"nodeType":"YulExpressionStatement","src":"743:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"784:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"795:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"780:3:12"},"nodeType":"YulFunctionCall","src":"780:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"800:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"773:6:12"},"nodeType":"YulFunctionCall","src":"773:30:12"},"nodeType":"YulExpressionStatement","src":"773:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"823:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"834:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"819:3:12"},"nodeType":"YulFunctionCall","src":"819:18:12"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"839:34:12","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"812:6:12"},"nodeType":"YulFunctionCall","src":"812:62:12"},"nodeType":"YulExpressionStatement","src":"812:62:12"},{"nodeType":"YulAssignment","src":"883:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"895:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"906:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"891:3:12"},"nodeType":"YulFunctionCall","src":"891:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"883:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"710:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"724:4:12","type":""}],"src":"559:356:12"},{"body":{"nodeType":"YulBlock","src":"1094:228:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1111:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"1122:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1104:6:12"},"nodeType":"YulFunctionCall","src":"1104:21:12"},"nodeType":"YulExpressionStatement","src":"1104:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1145:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"1156:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1141:3:12"},"nodeType":"YulFunctionCall","src":"1141:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"1161:2:12","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1134:6:12"},"nodeType":"YulFunctionCall","src":"1134:30:12"},"nodeType":"YulExpressionStatement","src":"1134:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1184:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"1195:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1180:3:12"},"nodeType":"YulFunctionCall","src":"1180:18:12"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"1200:34:12","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1173:6:12"},"nodeType":"YulFunctionCall","src":"1173:62:12"},"nodeType":"YulExpressionStatement","src":"1173:62:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1255:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"1266:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1251:3:12"},"nodeType":"YulFunctionCall","src":"1251:18:12"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"1271:8:12","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1244:6:12"},"nodeType":"YulFunctionCall","src":"1244:36:12"},"nodeType":"YulExpressionStatement","src":"1244:36:12"},{"nodeType":"YulAssignment","src":"1289:27:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1301:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"1312:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1297:3:12"},"nodeType":"YulFunctionCall","src":"1297:19:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1289:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1071:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1085:4:12","type":""}],"src":"920:402:12"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n}","id":12,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100415760003560e01c8063715018a6146100465780638da5cb5b14610050578063f2fde38b1461007c575b600080fd5b61004e61008f565b005b6000546040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b61004e61008a366004610335565b610184565b60005473ffffffffffffffffffffffffffffffffffffffff163314610115576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6000805460405173ffffffffffffffffffffffffffffffffffffffff909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b60005473ffffffffffffffffffffffffffffffffffffffff163314610205576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161010c565b73ffffffffffffffffffffffffffffffffffffffff81166102a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161010c565b6000805460405173ffffffffffffffffffffffffffffffffffffffff808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60006020828403121561034757600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461036b57600080fd5b939250505056fea264697066735822122060d66b4a3ca2303d27305cff4c89e74478f62be4c3336779c48a50eedb33405364736f6c634300080a0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x7C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x8F JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x4E PUSH2 0x8A CALLDATASIZE PUSH1 0x4 PUSH2 0x335 JUMP JUMPDEST PUSH2 0x184 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x115 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x205 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x10C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x2A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x10C JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x347 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x36B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH1 0xD6 PUSH12 0x4A3CA2303D27305CFF4C89E7 DIFFICULTY PUSH25 0xF62BE4C3336779C48A50EEDB33405364736F6C634300080A00 CALLER ","sourceMap":"578:1525:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1601:135;;;:::i;:::-;;1018:71;1056:7;1078:6;1018:71;;;1078:6;;;;160:74:12;;1018:71:4;;;;;148:2:12;1018:71:4;;;1875:226;;;;;;:::i;:::-;;:::i;1601:135::-;1204:6;;:22;:6;678:10:1;1204:22:4;1196:67;;;;;;;761:2:12;1196:67:4;;;743:21:12;;;780:18;;;773:30;839:34;819:18;;;812:62;891:18;;1196:67:4;;;;;;;;;1703:1:::1;1687:6:::0;;1666:40:::1;::::0;::::1;1687:6:::0;;::::1;::::0;1666:40:::1;::::0;1703:1;;1666:40:::1;1729:1;1712:19:::0;;;::::1;::::0;;1601:135::o;1875:226::-;1204:6;;:22;:6;678:10:1;1204:22:4;1196:67;;;;;;;761:2:12;1196:67:4;;;743:21:12;;;780:18;;;773:30;839:34;819:18;;;812:62;891:18;;1196:67:4;559:356:12;1196:67:4;1959:22:::1;::::0;::::1;1951:73;;;::::0;::::1;::::0;;1122:2:12;1951:73:4::1;::::0;::::1;1104:21:12::0;1161:2;1141:18;;;1134:30;1200:34;1180:18;;;1173:62;1271:8;1251:18;;;1244:36;1297:19;;1951:73:4::1;920:402:12::0;1951:73:4::1;2056:6;::::0;;2035:38:::1;::::0;::::1;::::0;;::::1;::::0;2056:6;::::1;::::0;2035:38:::1;::::0;::::1;2079:6;:17:::0;;;::::1;;::::0;;;::::1;::::0;;;::::1;::::0;;1875:226::o;245:309:12:-;304:6;357:2;345:9;336:7;332:23;328:32;325:52;;;373:1;370;363:12;325:52;412:9;399:23;462:42;455:5;451:54;444:5;441:65;431:93;;520:1;517;510:12;431:93;543:5;245:309;-1:-1:-1;;;245:309:12:o"},"gasEstimates":{"creation":{"codeDepositCost":"187200","executionCost":"26005","totalCost":"213205"},"external":{"owner()":"2280","renounceOwnership()":"30104","transferOwnership(address)":"30312"}},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":25000},\"remappings\":[]},\"sources\":{\"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n  function _msgSender() internal view virtual returns (address payable) {\\n    return payable(msg.sender);\\n  }\\n\\n  function _msgData() internal view virtual returns (bytes memory) {\\n    this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n    return msg.data;\\n  }\\n}\\n\",\"keccak256\":\"0xc0df5ebb2c3d8b4509464c40a88cc51e5e5f5e4a26fafc909330e9bb2658f641\",\"license\":\"MIT\"},\"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport './Context.sol';\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\ncontract Ownable is Context {\\n  address private _owner;\\n\\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n  /**\\n   * @dev Initializes the contract setting the deployer as the initial owner.\\n   */\\n  constructor() {\\n    address msgSender = _msgSender();\\n    _owner = msgSender;\\n    emit OwnershipTransferred(address(0), msgSender);\\n  }\\n\\n  /**\\n   * @dev Returns the address of the current owner.\\n   */\\n  function owner() public view returns (address) {\\n    return _owner;\\n  }\\n\\n  /**\\n   * @dev Throws if called by any account other than the owner.\\n   */\\n  modifier onlyOwner() {\\n    require(_owner == _msgSender(), 'Ownable: caller is not the owner');\\n    _;\\n  }\\n\\n  /**\\n   * @dev Leaves the contract without owner. It will not be possible to call\\n   * `onlyOwner` functions anymore. Can only be called by the current owner.\\n   *\\n   * NOTE: Renouncing ownership will leave the contract without an owner,\\n   * thereby removing any functionality that is only available to the owner.\\n   */\\n  function renounceOwnership() public virtual onlyOwner {\\n    emit OwnershipTransferred(_owner, address(0));\\n    _owner = address(0);\\n  }\\n\\n  /**\\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n   * Can only be called by the current owner.\\n   */\\n  function transferOwnership(address newOwner) public virtual onlyOwner {\\n    require(newOwner != address(0), 'Ownable: new owner is the zero address');\\n    emit OwnershipTransferred(_owner, newOwner);\\n    _owner = newOwner;\\n  }\\n}\\n\",\"keccak256\":\"0x3ce185c4f579e32006f8893dbfdc1b5d878c0e2cafd1508f7ceb081698bc81f9\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":915,"contract":"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/SafeMath.sol":{"SafeMath":{"abi":[],"devdoc":{"kind":"dev","methods":{},"title":"Optimized overflow and underflow safe math operations","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220950d88637a886ab00d0336ba6aa7340cc2aa4dd50b83b2cf3f82c4637f0d899364736f6c634300080a0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 0xD DUP9 PUSH4 0x7A886AB0 0xD SUB CALLDATASIZE 0xBA PUSH11 0xA7340CC2AA4DD50B83B2CF EXTCODEHASH DUP3 0xC4 PUSH4 0x7F0D8993 PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ","sourceMap":"240:1532:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;240:1532:5;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220950d88637a886ab00d0336ba6aa7340cc2aa4dd50b83b2cf3f82c4637f0d899364736f6c634300080a0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 0xD DUP9 PUSH4 0x7A886AB0 0xD SUB CALLDATASIZE 0xBA PUSH11 0xA7340CC2AA4DD50B83B2CF EXTCODEHASH DUP3 0xC4 PUSH4 0x7F0D8993 PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ","sourceMap":"240:1532:5:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"add(uint256,uint256)":"infinite","div(uint256,uint256)":"infinite","mul(uint256,uint256)":"infinite","sub(uint256,uint256)":"infinite","sub(uint256,uint256,string memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Optimized overflow and underflow safe math operations\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains methods for doing math operations that revert on overflow or underflow for minimal gas cost\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":25000},\"remappings\":[]},\"sources\":{\"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity ^0.8.0;\\n\\n/// @title Optimized overflow and underflow safe math operations\\n/// @notice Contains methods for doing math operations that revert on overflow or underflow for minimal gas cost\\nlibrary SafeMath {\\n  /// @notice Returns x + y, reverts if sum overflows uint256\\n  /// @param x The augend\\n  /// @param y The addend\\n  /// @return z The sum of x and y\\n  function add(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n    unchecked {\\n      require((z = x + y) >= x);\\n    }\\n  }\\n\\n  /// @notice Returns x - y, reverts if underflows\\n  /// @param x The minuend\\n  /// @param y The subtrahend\\n  /// @return z The difference of x and y\\n  function sub(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n    unchecked {\\n      require((z = x - y) <= x);\\n    }\\n  }\\n\\n  /// @notice Returns x - y, reverts if underflows\\n  /// @param x The minuend\\n  /// @param y The subtrahend\\n  /// @param message The error msg\\n  /// @return z The difference of x and y\\n  function sub(uint256 x, uint256 y, string memory message) internal pure returns (uint256 z) {\\n    unchecked {\\n      require((z = x - y) <= x, message);\\n    }\\n  }\\n\\n  /// @notice Returns x * y, reverts if overflows\\n  /// @param x The multiplicand\\n  /// @param y The multiplier\\n  /// @return z The product of x and y\\n  function mul(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n    unchecked {\\n      require(x == 0 || (z = x * y) / x == y);\\n    }\\n  }\\n\\n  /// @notice Returns x / y, reverts if overflows - no specific check, solidity reverts on division by 0\\n  /// @param x The numerator\\n  /// @param y The denominator\\n  /// @return z The product of x and y\\n  function div(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n    return x / y;\\n  }\\n}\\n\",\"keccak256\":\"0xf1c5d8ba70a5fc3e20dbbc2aa2a2278d2535a57bc1e9abf1228ebc3068a045f0\",\"license\":\"AGPL-3.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"notice":"Contains methods for doing math operations that revert on overflow or underflow for minimal gas cost","version":1}}},"@aave/core-v3/contracts/dependencies/weth/WETH9.sol":{"WETH9":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"src","type":"address"},{"indexed":true,"internalType":"address","name":"guy","type":"address"},{"indexed":false,"internalType":"uint256","name":"wad","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"dst","type":"address"},{"indexed":false,"internalType":"uint256","name":"wad","type":"uint256"}],"name":"Deposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"src","type":"address"},{"indexed":true,"internalType":"address","name":"dst","type":"address"},{"indexed":false,"internalType":"uint256","name":"wad","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"src","type":"address"},{"indexed":false,"internalType":"uint256","name":"wad","type":"uint256"}],"name":"Withdrawal","type":"event"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"guy","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"deposit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"dst","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"src","type":"address"},{"internalType":"address","name":"dst","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"extract_byte_array_length":{"entryPoint":275,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:396:12","statements":[{"nodeType":"YulBlock","src":"6:3:12","statements":[]},{"body":{"nodeType":"YulBlock","src":"69:325:12","statements":[{"nodeType":"YulAssignment","src":"79:22:12","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"93:1:12","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"96:4:12"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"89:3:12"},"nodeType":"YulFunctionCall","src":"89:12:12"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"79:6:12"}]},{"nodeType":"YulVariableDeclaration","src":"110:38:12","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"140:4:12"},{"kind":"number","nodeType":"YulLiteral","src":"146:1:12","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"136:3:12"},"nodeType":"YulFunctionCall","src":"136:12:12"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"114:18:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"187:31:12","statements":[{"nodeType":"YulAssignment","src":"189:27:12","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"203:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"211:4:12","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"199:3:12"},"nodeType":"YulFunctionCall","src":"199:17:12"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"189:6:12"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"167:18:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"160:6:12"},"nodeType":"YulFunctionCall","src":"160:26:12"},"nodeType":"YulIf","src":"157:61:12"},{"body":{"nodeType":"YulBlock","src":"277:111:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"298:1:12","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"305:3:12","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"310:10:12","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"301:3:12"},"nodeType":"YulFunctionCall","src":"301:20:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"291:6:12"},"nodeType":"YulFunctionCall","src":"291:31:12"},"nodeType":"YulExpressionStatement","src":"291:31:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"342:1:12","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"345:4:12","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"335:6:12"},"nodeType":"YulFunctionCall","src":"335:15:12"},"nodeType":"YulExpressionStatement","src":"335:15:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"370:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"373:4:12","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"363:6:12"},"nodeType":"YulFunctionCall","src":"363:15:12"},"nodeType":"YulExpressionStatement","src":"363:15:12"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"233:18:12"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"256:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"264:2:12","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"253:2:12"},"nodeType":"YulFunctionCall","src":"253:14:12"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"230:2:12"},"nodeType":"YulFunctionCall","src":"230:38:12"},"nodeType":"YulIf","src":"227:161:12"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"49:4:12","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"58:6:12","type":""}],"src":"14:380:12"}]},"contents":"{\n    { }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}","id":12,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60c0604052600d60808190526c2bb930b83832b21022ba3432b960991b60a090815261002e916000919061007a565b50604080518082019091526004808252630ae8aa8960e31b602090920191825261005a9160019161007a565b506002805460ff1916601217905534801561007457600080fd5b5061014e565b82805461008690610113565b90600052602060002090601f0160209004810192826100a857600085556100ee565b82601f106100c157805160ff19168380011785556100ee565b828001600101855582156100ee579182015b828111156100ee5782518255916020019190600101906100d3565b506100fa9291506100fe565b5090565b5b808211156100fa57600081556001016100ff565b600181811c9082168061012757607f821691505b6020821081141561014857634e487b7160e01b600052602260045260246000fd5b50919050565b6108eb8061015d6000396000f3fe6080604052600436106100c05760003560e01c8063313ce56711610074578063a9059cbb1161004e578063a9059cbb146101fa578063d0e30db01461021a578063dd62ed3e1461022257600080fd5b8063313ce5671461018c57806370a08231146101b857806395d89b41146101e557600080fd5b806318160ddd116100a557806318160ddd1461012f57806323b872dd1461014c5780632e1a7d4d1461016c57600080fd5b806306fdde03146100d4578063095ea7b3146100ff57600080fd5b366100cf576100cd61025a565b005b600080fd5b3480156100e057600080fd5b506100e96102b5565b6040516100f6919061069a565b60405180910390f35b34801561010b57600080fd5b5061011f61011a366004610736565b610343565b60405190151581526020016100f6565b34801561013b57600080fd5b50475b6040519081526020016100f6565b34801561015857600080fd5b5061011f610167366004610760565b6103bc565b34801561017857600080fd5b506100cd61018736600461079c565b6105d3565b34801561019857600080fd5b506002546101a69060ff1681565b60405160ff90911681526020016100f6565b3480156101c457600080fd5b5061013e6101d33660046107b5565b60036020526000908152604090205481565b3480156101f157600080fd5b506100e9610679565b34801561020657600080fd5b5061011f610215366004610736565b610686565b6100cd61025a565b34801561022e57600080fd5b5061013e61023d3660046107d0565b600460209081526000928352604080842090915290825290205481565b3360009081526003602052604081208054349290610279908490610832565b909155505060405134815233907fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c9060200160405180910390a2565b600080546102c29061084a565b80601f01602080910402602001604051908101604052809291908181526020018280546102ee9061084a565b801561033b5780601f106103105761010080835404028352916020019161033b565b820191906000526020600020905b81548152906001019060200180831161031e57829003601f168201915b505050505081565b33600081815260046020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906103ab9086815260200190565b60405180910390a350600192915050565b73ffffffffffffffffffffffffffffffffffffffff83166000908152600360205260408120548211156103ee57600080fd5b73ffffffffffffffffffffffffffffffffffffffff84163314801590610464575073ffffffffffffffffffffffffffffffffffffffff841660009081526004602090815260408083203384529091529020547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff14155b156104ec5773ffffffffffffffffffffffffffffffffffffffff841660009081526004602090815260408083203384529091529020548211156104a657600080fd5b73ffffffffffffffffffffffffffffffffffffffff84166000908152600460209081526040808320338452909152812080548492906104e690849061089e565b90915550505b73ffffffffffffffffffffffffffffffffffffffff84166000908152600360205260408120805484929061052190849061089e565b909155505073ffffffffffffffffffffffffffffffffffffffff83166000908152600360205260408120805484929061055b908490610832565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516105c191815260200190565b60405180910390a35060019392505050565b336000908152600360205260409020548111156105ef57600080fd5b336000908152600360205260408120805483929061060e90849061089e565b9091555050604051339082156108fc029083906000818181858888f19350505050158015610640573d6000803e3d6000fd5b5060405181815233907f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b659060200160405180910390a250565b600180546102c29061084a565b60006106933384846103bc565b9392505050565b600060208083528351808285015260005b818110156106c7578581018301518582016040015282016106ab565b818111156106d9576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461073157600080fd5b919050565b6000806040838503121561074957600080fd5b6107528361070d565b946020939093013593505050565b60008060006060848603121561077557600080fd5b61077e8461070d565b925061078c6020850161070d565b9150604084013590509250925092565b6000602082840312156107ae57600080fd5b5035919050565b6000602082840312156107c757600080fd5b6106938261070d565b600080604083850312156107e357600080fd5b6107ec8361070d565b91506107fa6020840161070d565b90509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000821982111561084557610845610803565b500190565b600181811c9082168061085e57607f821691505b60208210811415610898577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b6000828210156108b0576108b0610803565b50039056fea2646970667358221220c6c11c013ecfd49d47224893848b87d54a305f542abc80315e03a44847ac5c5364736f6c634300080a0033","opcodes":"PUSH1 0xC0 PUSH1 0x40 MSTORE PUSH1 0xD PUSH1 0x80 DUP2 SWAP1 MSTORE PUSH13 0x2BB930B83832B21022BA3432B9 PUSH1 0x99 SHL PUSH1 0xA0 SWAP1 DUP2 MSTORE PUSH2 0x2E SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH2 0x7A JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x4 DUP1 DUP3 MSTORE PUSH4 0xAE8AA89 PUSH1 0xE3 SHL PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 DUP3 MSTORE PUSH2 0x5A SWAP2 PUSH1 0x1 SWAP2 PUSH2 0x7A JUMP JUMPDEST POP PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x12 OR SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14E JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x86 SWAP1 PUSH2 0x113 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0xA8 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0xEE JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0xC1 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0xEE JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0xEE JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xEE JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xD3 JUMP JUMPDEST POP PUSH2 0xFA SWAP3 SWAP2 POP PUSH2 0xFE JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xFA JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xFF JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x127 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x148 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8EB DUP1 PUSH2 0x15D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC0 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x74 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x4E JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x222 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xA5 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x12F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x16C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0xCF JUMPI PUSH2 0xCD PUSH2 0x25A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE9 PUSH2 0x2B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF6 SWAP2 SWAP1 PUSH2 0x69A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11F PUSH2 0x11A CALLDATASIZE PUSH1 0x4 PUSH2 0x736 JUMP JUMPDEST PUSH2 0x343 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SELFBALANCE JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x158 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11F PUSH2 0x167 CALLDATASIZE PUSH1 0x4 PUSH2 0x760 JUMP JUMPDEST PUSH2 0x3BC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x178 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCD PUSH2 0x187 CALLDATASIZE PUSH1 0x4 PUSH2 0x79C JUMP JUMPDEST PUSH2 0x5D3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x198 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x1A6 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13E PUSH2 0x1D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x7B5 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE9 PUSH2 0x679 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x206 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11F PUSH2 0x215 CALLDATASIZE PUSH1 0x4 PUSH2 0x736 JUMP JUMPDEST PUSH2 0x686 JUMP JUMPDEST PUSH2 0xCD PUSH2 0x25A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13E PUSH2 0x23D CALLDATASIZE PUSH1 0x4 PUSH2 0x7D0 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD CALLVALUE SWAP3 SWAP1 PUSH2 0x279 SWAP1 DUP5 SWAP1 PUSH2 0x832 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD CALLVALUE DUP2 MSTORE CALLER SWAP1 PUSH32 0xE1FFFCC4923D04B559F4D29A8BFC6CDA04EB5B0D3C460751C2402C5C5CC9109C SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x2C2 SWAP1 PUSH2 0x84A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2EE SWAP1 PUSH2 0x84A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x33B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x310 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x33B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x31E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE MLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0x3AB SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x3EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0x464 JUMPI POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF EQ ISZERO JUMPDEST ISZERO PUSH2 0x4EC JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x4A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x4E6 SWAP1 DUP5 SWAP1 PUSH2 0x89E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x521 SWAP1 DUP5 SWAP1 PUSH2 0x89E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x55B SWAP1 DUP5 SWAP1 PUSH2 0x832 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x5C1 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x5EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x60E SWAP1 DUP5 SWAP1 PUSH2 0x89E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD CALLER SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x640 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0x7FCF532C15F0A6DB0BD6D0E038BEA71D30D808C7D98CB3BF7268A95BF5081B65 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x2C2 SWAP1 PUSH2 0x84A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x693 CALLER DUP5 DUP5 PUSH2 0x3BC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6C7 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6AB JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x6D9 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x731 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x749 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x752 DUP4 PUSH2 0x70D JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x775 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x77E DUP5 PUSH2 0x70D JUMP JUMPDEST SWAP3 POP PUSH2 0x78C PUSH1 0x20 DUP6 ADD PUSH2 0x70D JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x693 DUP3 PUSH2 0x70D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7EC DUP4 PUSH2 0x70D JUMP JUMPDEST SWAP2 POP PUSH2 0x7FA PUSH1 0x20 DUP5 ADD PUSH2 0x70D JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x845 JUMPI PUSH2 0x845 PUSH2 0x803 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x85E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x898 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x8B0 JUMPI PUSH2 0x8B0 PUSH2 0x803 JUMP JUMPDEST POP SUB SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC6 0xC1 SHR ADD RETURNDATACOPY 0xCF 0xD4 SWAP14 SELFBALANCE 0x22 BASEFEE SWAP4 DUP5 DUP12 DUP8 0xD5 0x4A ADDRESS 0x5F SLOAD 0x2A 0xBC DUP1 BALANCE 0x5E SUB LOG4 BASEFEE SELFBALANCE 0xAC 0x5C MSTORE8 PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ","sourceMap":"731:36:6:-:0;712:1668;731:36;;712:1668;731:36;;;-1:-1:-1;;;731:36:6;;;;;;-1:-1:-1;;731:36:6;;:::i;:::-;-1:-1:-1;771:29:6;;;;;;;;;;;;;-1:-1:-1;;;771:29:6;;;;;;;;;;;;:::i;:::-;-1:-1:-1;804:26:6;;;-1:-1:-1;;804:26:6;828:2;804:26;;;712:1668;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;712:1668:6;;;-1:-1:-1;712:1668:6;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:380:12;93:1;89:12;;;;136;;;157:61;;211:4;203:6;199:17;189:27;;157:61;264:2;256:6;253:14;233:18;230:38;227:161;;;310:10;305:3;301:20;298:1;291:31;345:4;342:1;335:15;373:4;370:1;363:15;227:161;;14:380;;;:::o;:::-;712:1668:6;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_1192":{"entryPoint":null,"id":1192,"parameterSlots":0,"returnSlots":0},"@allowance_1185":{"entryPoint":null,"id":1185,"parameterSlots":0,"returnSlots":0},"@approve_1288":{"entryPoint":835,"id":1288,"parameterSlots":2,"returnSlots":1},"@balanceOf_1179":{"entryPoint":null,"id":1179,"parameterSlots":0,"returnSlots":0},"@decimals_1147":{"entryPoint":null,"id":1147,"parameterSlots":0,"returnSlots":0},"@deposit_1211":{"entryPoint":602,"id":1211,"parameterSlots":0,"returnSlots":0},"@name_1141":{"entryPoint":693,"id":1141,"parameterSlots":0,"returnSlots":0},"@symbol_1144":{"entryPoint":1657,"id":1144,"parameterSlots":0,"returnSlots":0},"@totalSupply_1260":{"entryPoint":null,"id":1260,"parameterSlots":0,"returnSlots":1},"@transferFrom_1384":{"entryPoint":956,"id":1384,"parameterSlots":3,"returnSlots":1},"@transfer_1305":{"entryPoint":1670,"id":1305,"parameterSlots":2,"returnSlots":1},"@withdraw_1248":{"entryPoint":1491,"id":1248,"parameterSlots":1,"returnSlots":0},"abi_decode_address":{"entryPoint":1805,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":1973,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":2000,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":1888,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":1846,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256":{"entryPoint":1948,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1690,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":2098,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":2206,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":2122,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":2051,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3563:12","statements":[{"nodeType":"YulBlock","src":"6:3:12","statements":[]},{"body":{"nodeType":"YulBlock","src":"135:535:12","statements":[{"nodeType":"YulVariableDeclaration","src":"145:12:12","value":{"kind":"number","nodeType":"YulLiteral","src":"155:2:12","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"149:2:12","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"173:9:12"},{"name":"_1","nodeType":"YulIdentifier","src":"184:2:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"166:6:12"},"nodeType":"YulFunctionCall","src":"166:21:12"},"nodeType":"YulExpressionStatement","src":"166:21:12"},{"nodeType":"YulVariableDeclaration","src":"196:27:12","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"216:6:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"210:5:12"},"nodeType":"YulFunctionCall","src":"210:13:12"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"200:6:12","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"243:9:12"},{"name":"_1","nodeType":"YulIdentifier","src":"254:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"239:3:12"},"nodeType":"YulFunctionCall","src":"239:18:12"},{"name":"length","nodeType":"YulIdentifier","src":"259:6:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"232:6:12"},"nodeType":"YulFunctionCall","src":"232:34:12"},"nodeType":"YulExpressionStatement","src":"232:34:12"},{"nodeType":"YulVariableDeclaration","src":"275:10:12","value":{"kind":"number","nodeType":"YulLiteral","src":"284:1:12","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"279:1:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"344:90:12","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"373:9:12"},{"name":"i","nodeType":"YulIdentifier","src":"384:1:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"369:3:12"},"nodeType":"YulFunctionCall","src":"369:17:12"},{"kind":"number","nodeType":"YulLiteral","src":"388:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"365:3:12"},"nodeType":"YulFunctionCall","src":"365:26:12"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"407:6:12"},{"name":"i","nodeType":"YulIdentifier","src":"415:1:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"403:3:12"},"nodeType":"YulFunctionCall","src":"403:14:12"},{"name":"_1","nodeType":"YulIdentifier","src":"419:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"399:3:12"},"nodeType":"YulFunctionCall","src":"399:23:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"393:5:12"},"nodeType":"YulFunctionCall","src":"393:30:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"358:6:12"},"nodeType":"YulFunctionCall","src":"358:66:12"},"nodeType":"YulExpressionStatement","src":"358:66:12"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"305:1:12"},{"name":"length","nodeType":"YulIdentifier","src":"308:6:12"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"302:2:12"},"nodeType":"YulFunctionCall","src":"302:13:12"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"316:19:12","statements":[{"nodeType":"YulAssignment","src":"318:15:12","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"327:1:12"},{"name":"_1","nodeType":"YulIdentifier","src":"330:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"323:3:12"},"nodeType":"YulFunctionCall","src":"323:10:12"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"318:1:12"}]}]},"pre":{"nodeType":"YulBlock","src":"298:3:12","statements":[]},"src":"294:140:12"},{"body":{"nodeType":"YulBlock","src":"468:66:12","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"497:9:12"},{"name":"length","nodeType":"YulIdentifier","src":"508:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"493:3:12"},"nodeType":"YulFunctionCall","src":"493:22:12"},{"kind":"number","nodeType":"YulLiteral","src":"517:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"489:3:12"},"nodeType":"YulFunctionCall","src":"489:31:12"},{"kind":"number","nodeType":"YulLiteral","src":"522:1:12","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"482:6:12"},"nodeType":"YulFunctionCall","src":"482:42:12"},"nodeType":"YulExpressionStatement","src":"482:42:12"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"449:1:12"},{"name":"length","nodeType":"YulIdentifier","src":"452:6:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"446:2:12"},"nodeType":"YulFunctionCall","src":"446:13:12"},"nodeType":"YulIf","src":"443:91:12"},{"nodeType":"YulAssignment","src":"543:121:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"559:9:12"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"578:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"586:2:12","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"574:3:12"},"nodeType":"YulFunctionCall","src":"574:15:12"},{"kind":"number","nodeType":"YulLiteral","src":"591:66:12","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"570:3:12"},"nodeType":"YulFunctionCall","src":"570:88:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"555:3:12"},"nodeType":"YulFunctionCall","src":"555:104:12"},{"kind":"number","nodeType":"YulLiteral","src":"661:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"551:3:12"},"nodeType":"YulFunctionCall","src":"551:113:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"543:4:12"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"104:9:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"115:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"126:4:12","type":""}],"src":"14:656:12"},{"body":{"nodeType":"YulBlock","src":"724:147:12","statements":[{"nodeType":"YulAssignment","src":"734:29:12","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"756:6:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"743:12:12"},"nodeType":"YulFunctionCall","src":"743:20:12"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"734:5:12"}]},{"body":{"nodeType":"YulBlock","src":"849:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"858:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"861:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"851:6:12"},"nodeType":"YulFunctionCall","src":"851:12:12"},"nodeType":"YulExpressionStatement","src":"851:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"785:5:12"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"796:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"803:42:12","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"792:3:12"},"nodeType":"YulFunctionCall","src":"792:54:12"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"782:2:12"},"nodeType":"YulFunctionCall","src":"782:65:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"775:6:12"},"nodeType":"YulFunctionCall","src":"775:73:12"},"nodeType":"YulIf","src":"772:93:12"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"703:6:12","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"714:5:12","type":""}],"src":"675:196:12"},{"body":{"nodeType":"YulBlock","src":"963:167:12","statements":[{"body":{"nodeType":"YulBlock","src":"1009:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1018:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1021:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1011:6:12"},"nodeType":"YulFunctionCall","src":"1011:12:12"},"nodeType":"YulExpressionStatement","src":"1011:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"984:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"993:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"980:3:12"},"nodeType":"YulFunctionCall","src":"980:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"1005:2:12","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"976:3:12"},"nodeType":"YulFunctionCall","src":"976:32:12"},"nodeType":"YulIf","src":"973:52:12"},{"nodeType":"YulAssignment","src":"1034:39:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1063:9:12"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1044:18:12"},"nodeType":"YulFunctionCall","src":"1044:29:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1034:6:12"}]},{"nodeType":"YulAssignment","src":"1082:42:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1109:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"1120:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1105:3:12"},"nodeType":"YulFunctionCall","src":"1105:18:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1092:12:12"},"nodeType":"YulFunctionCall","src":"1092:32:12"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1082:6:12"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"921:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"932:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"944:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"952:6:12","type":""}],"src":"876:254:12"},{"body":{"nodeType":"YulBlock","src":"1230:92:12","statements":[{"nodeType":"YulAssignment","src":"1240:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1252:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"1263:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1248:3:12"},"nodeType":"YulFunctionCall","src":"1248:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1240:4:12"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1282:9:12"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1307:6:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1300:6:12"},"nodeType":"YulFunctionCall","src":"1300:14:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1293:6:12"},"nodeType":"YulFunctionCall","src":"1293:22:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1275:6:12"},"nodeType":"YulFunctionCall","src":"1275:41:12"},"nodeType":"YulExpressionStatement","src":"1275:41:12"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1199:9:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1210:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1221:4:12","type":""}],"src":"1135:187:12"},{"body":{"nodeType":"YulBlock","src":"1428:76:12","statements":[{"nodeType":"YulAssignment","src":"1438:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1450:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"1461:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1446:3:12"},"nodeType":"YulFunctionCall","src":"1446:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1438:4:12"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1480:9:12"},{"name":"value0","nodeType":"YulIdentifier","src":"1491:6:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1473:6:12"},"nodeType":"YulFunctionCall","src":"1473:25:12"},"nodeType":"YulExpressionStatement","src":"1473:25:12"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1397:9:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1408:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1419:4:12","type":""}],"src":"1327:177:12"},{"body":{"nodeType":"YulBlock","src":"1613:224:12","statements":[{"body":{"nodeType":"YulBlock","src":"1659:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1668:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1671:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1661:6:12"},"nodeType":"YulFunctionCall","src":"1661:12:12"},"nodeType":"YulExpressionStatement","src":"1661:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1634:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"1643:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1630:3:12"},"nodeType":"YulFunctionCall","src":"1630:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"1655:2:12","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1626:3:12"},"nodeType":"YulFunctionCall","src":"1626:32:12"},"nodeType":"YulIf","src":"1623:52:12"},{"nodeType":"YulAssignment","src":"1684:39:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1713:9:12"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1694:18:12"},"nodeType":"YulFunctionCall","src":"1694:29:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1684:6:12"}]},{"nodeType":"YulAssignment","src":"1732:48:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1765:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"1776:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1761:3:12"},"nodeType":"YulFunctionCall","src":"1761:18:12"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1742:18:12"},"nodeType":"YulFunctionCall","src":"1742:38:12"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1732:6:12"}]},{"nodeType":"YulAssignment","src":"1789:42:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1816:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"1827:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1812:3:12"},"nodeType":"YulFunctionCall","src":"1812:18:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1799:12:12"},"nodeType":"YulFunctionCall","src":"1799:32:12"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1789:6:12"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1563:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1574:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1586:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1594:6:12","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1602:6:12","type":""}],"src":"1509:328:12"},{"body":{"nodeType":"YulBlock","src":"1912:110:12","statements":[{"body":{"nodeType":"YulBlock","src":"1958:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1967:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1970:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1960:6:12"},"nodeType":"YulFunctionCall","src":"1960:12:12"},"nodeType":"YulExpressionStatement","src":"1960:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1933:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"1942:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1929:3:12"},"nodeType":"YulFunctionCall","src":"1929:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"1954:2:12","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1925:3:12"},"nodeType":"YulFunctionCall","src":"1925:32:12"},"nodeType":"YulIf","src":"1922:52:12"},{"nodeType":"YulAssignment","src":"1983:33:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2006:9:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1993:12:12"},"nodeType":"YulFunctionCall","src":"1993:23:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1983:6:12"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1878:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1889:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1901:6:12","type":""}],"src":"1842:180:12"},{"body":{"nodeType":"YulBlock","src":"2124:87:12","statements":[{"nodeType":"YulAssignment","src":"2134:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2146:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"2157:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2142:3:12"},"nodeType":"YulFunctionCall","src":"2142:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2134:4:12"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2176:9:12"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2191:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"2199:4:12","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2187:3:12"},"nodeType":"YulFunctionCall","src":"2187:17:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2169:6:12"},"nodeType":"YulFunctionCall","src":"2169:36:12"},"nodeType":"YulExpressionStatement","src":"2169:36:12"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2093:9:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2104:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2115:4:12","type":""}],"src":"2027:184:12"},{"body":{"nodeType":"YulBlock","src":"2286:116:12","statements":[{"body":{"nodeType":"YulBlock","src":"2332:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2341:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2344:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2334:6:12"},"nodeType":"YulFunctionCall","src":"2334:12:12"},"nodeType":"YulExpressionStatement","src":"2334:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2307:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"2316:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2303:3:12"},"nodeType":"YulFunctionCall","src":"2303:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"2328:2:12","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2299:3:12"},"nodeType":"YulFunctionCall","src":"2299:32:12"},"nodeType":"YulIf","src":"2296:52:12"},{"nodeType":"YulAssignment","src":"2357:39:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2386:9:12"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2367:18:12"},"nodeType":"YulFunctionCall","src":"2367:29:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2357:6:12"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2252:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2263:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2275:6:12","type":""}],"src":"2216:186:12"},{"body":{"nodeType":"YulBlock","src":"2494:173:12","statements":[{"body":{"nodeType":"YulBlock","src":"2540:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2549:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2552:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2542:6:12"},"nodeType":"YulFunctionCall","src":"2542:12:12"},"nodeType":"YulExpressionStatement","src":"2542:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2515:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"2524:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2511:3:12"},"nodeType":"YulFunctionCall","src":"2511:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"2536:2:12","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2507:3:12"},"nodeType":"YulFunctionCall","src":"2507:32:12"},"nodeType":"YulIf","src":"2504:52:12"},{"nodeType":"YulAssignment","src":"2565:39:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2594:9:12"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2575:18:12"},"nodeType":"YulFunctionCall","src":"2575:29:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2565:6:12"}]},{"nodeType":"YulAssignment","src":"2613:48:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2646:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"2657:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2642:3:12"},"nodeType":"YulFunctionCall","src":"2642:18:12"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2623:18:12"},"nodeType":"YulFunctionCall","src":"2623:38:12"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2613:6:12"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2452:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2463:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2475:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2483:6:12","type":""}],"src":"2407:260:12"},{"body":{"nodeType":"YulBlock","src":"2704:152:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2721:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2724:77:12","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2714:6:12"},"nodeType":"YulFunctionCall","src":"2714:88:12"},"nodeType":"YulExpressionStatement","src":"2714:88:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2818:1:12","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2821:4:12","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2811:6:12"},"nodeType":"YulFunctionCall","src":"2811:15:12"},"nodeType":"YulExpressionStatement","src":"2811:15:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2842:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2845:4:12","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2835:6:12"},"nodeType":"YulFunctionCall","src":"2835:15:12"},"nodeType":"YulExpressionStatement","src":"2835:15:12"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"2672:184:12"},{"body":{"nodeType":"YulBlock","src":"2909:80:12","statements":[{"body":{"nodeType":"YulBlock","src":"2936:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"2938:16:12"},"nodeType":"YulFunctionCall","src":"2938:18:12"},"nodeType":"YulExpressionStatement","src":"2938:18:12"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2925:1:12"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"2932:1:12"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2928:3:12"},"nodeType":"YulFunctionCall","src":"2928:6:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2922:2:12"},"nodeType":"YulFunctionCall","src":"2922:13:12"},"nodeType":"YulIf","src":"2919:39:12"},{"nodeType":"YulAssignment","src":"2967:16:12","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2978:1:12"},{"name":"y","nodeType":"YulIdentifier","src":"2981:1:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2974:3:12"},"nodeType":"YulFunctionCall","src":"2974:9:12"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"2967:3:12"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"2892:1:12","type":""},{"name":"y","nodeType":"YulTypedName","src":"2895:1:12","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"2901:3:12","type":""}],"src":"2861:128:12"},{"body":{"nodeType":"YulBlock","src":"3049:382:12","statements":[{"nodeType":"YulAssignment","src":"3059:22:12","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3073:1:12","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"3076:4:12"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3069:3:12"},"nodeType":"YulFunctionCall","src":"3069:12:12"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3059:6:12"}]},{"nodeType":"YulVariableDeclaration","src":"3090:38:12","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3120:4:12"},{"kind":"number","nodeType":"YulLiteral","src":"3126:1:12","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3116:3:12"},"nodeType":"YulFunctionCall","src":"3116:12:12"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"3094:18:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"3167:31:12","statements":[{"nodeType":"YulAssignment","src":"3169:27:12","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3183:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"3191:4:12","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3179:3:12"},"nodeType":"YulFunctionCall","src":"3179:17:12"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3169:6:12"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3147:18:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3140:6:12"},"nodeType":"YulFunctionCall","src":"3140:26:12"},"nodeType":"YulIf","src":"3137:61:12"},{"body":{"nodeType":"YulBlock","src":"3257:168:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3278:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3281:77:12","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3271:6:12"},"nodeType":"YulFunctionCall","src":"3271:88:12"},"nodeType":"YulExpressionStatement","src":"3271:88:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3379:1:12","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3382:4:12","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3372:6:12"},"nodeType":"YulFunctionCall","src":"3372:15:12"},"nodeType":"YulExpressionStatement","src":"3372:15:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3407:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3410:4:12","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3400:6:12"},"nodeType":"YulFunctionCall","src":"3400:15:12"},"nodeType":"YulExpressionStatement","src":"3400:15:12"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3213:18:12"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3236:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"3244:2:12","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3233:2:12"},"nodeType":"YulFunctionCall","src":"3233:14:12"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3210:2:12"},"nodeType":"YulFunctionCall","src":"3210:38:12"},"nodeType":"YulIf","src":"3207:218:12"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3029:4:12","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3038:6:12","type":""}],"src":"2994:437:12"},{"body":{"nodeType":"YulBlock","src":"3485:76:12","statements":[{"body":{"nodeType":"YulBlock","src":"3507:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"3509:16:12"},"nodeType":"YulFunctionCall","src":"3509:18:12"},"nodeType":"YulExpressionStatement","src":"3509:18:12"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3501:1:12"},{"name":"y","nodeType":"YulIdentifier","src":"3504:1:12"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3498:2:12"},"nodeType":"YulFunctionCall","src":"3498:8:12"},"nodeType":"YulIf","src":"3495:34:12"},{"nodeType":"YulAssignment","src":"3538:17:12","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3550:1:12"},{"name":"y","nodeType":"YulIdentifier","src":"3553:1:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3546:3:12"},"nodeType":"YulFunctionCall","src":"3546:9:12"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"3538:4:12"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"3467:1:12","type":""},{"name":"y","nodeType":"YulTypedName","src":"3470:1:12","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"3476:4:12","type":""}],"src":"3436:125:12"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n}","id":12,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436106100c05760003560e01c8063313ce56711610074578063a9059cbb1161004e578063a9059cbb146101fa578063d0e30db01461021a578063dd62ed3e1461022257600080fd5b8063313ce5671461018c57806370a08231146101b857806395d89b41146101e557600080fd5b806318160ddd116100a557806318160ddd1461012f57806323b872dd1461014c5780632e1a7d4d1461016c57600080fd5b806306fdde03146100d4578063095ea7b3146100ff57600080fd5b366100cf576100cd61025a565b005b600080fd5b3480156100e057600080fd5b506100e96102b5565b6040516100f6919061069a565b60405180910390f35b34801561010b57600080fd5b5061011f61011a366004610736565b610343565b60405190151581526020016100f6565b34801561013b57600080fd5b50475b6040519081526020016100f6565b34801561015857600080fd5b5061011f610167366004610760565b6103bc565b34801561017857600080fd5b506100cd61018736600461079c565b6105d3565b34801561019857600080fd5b506002546101a69060ff1681565b60405160ff90911681526020016100f6565b3480156101c457600080fd5b5061013e6101d33660046107b5565b60036020526000908152604090205481565b3480156101f157600080fd5b506100e9610679565b34801561020657600080fd5b5061011f610215366004610736565b610686565b6100cd61025a565b34801561022e57600080fd5b5061013e61023d3660046107d0565b600460209081526000928352604080842090915290825290205481565b3360009081526003602052604081208054349290610279908490610832565b909155505060405134815233907fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c9060200160405180910390a2565b600080546102c29061084a565b80601f01602080910402602001604051908101604052809291908181526020018280546102ee9061084a565b801561033b5780601f106103105761010080835404028352916020019161033b565b820191906000526020600020905b81548152906001019060200180831161031e57829003601f168201915b505050505081565b33600081815260046020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906103ab9086815260200190565b60405180910390a350600192915050565b73ffffffffffffffffffffffffffffffffffffffff83166000908152600360205260408120548211156103ee57600080fd5b73ffffffffffffffffffffffffffffffffffffffff84163314801590610464575073ffffffffffffffffffffffffffffffffffffffff841660009081526004602090815260408083203384529091529020547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff14155b156104ec5773ffffffffffffffffffffffffffffffffffffffff841660009081526004602090815260408083203384529091529020548211156104a657600080fd5b73ffffffffffffffffffffffffffffffffffffffff84166000908152600460209081526040808320338452909152812080548492906104e690849061089e565b90915550505b73ffffffffffffffffffffffffffffffffffffffff84166000908152600360205260408120805484929061052190849061089e565b909155505073ffffffffffffffffffffffffffffffffffffffff83166000908152600360205260408120805484929061055b908490610832565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516105c191815260200190565b60405180910390a35060019392505050565b336000908152600360205260409020548111156105ef57600080fd5b336000908152600360205260408120805483929061060e90849061089e565b9091555050604051339082156108fc029083906000818181858888f19350505050158015610640573d6000803e3d6000fd5b5060405181815233907f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b659060200160405180910390a250565b600180546102c29061084a565b60006106933384846103bc565b9392505050565b600060208083528351808285015260005b818110156106c7578581018301518582016040015282016106ab565b818111156106d9576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461073157600080fd5b919050565b6000806040838503121561074957600080fd5b6107528361070d565b946020939093013593505050565b60008060006060848603121561077557600080fd5b61077e8461070d565b925061078c6020850161070d565b9150604084013590509250925092565b6000602082840312156107ae57600080fd5b5035919050565b6000602082840312156107c757600080fd5b6106938261070d565b600080604083850312156107e357600080fd5b6107ec8361070d565b91506107fa6020840161070d565b90509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000821982111561084557610845610803565b500190565b600181811c9082168061085e57607f821691505b60208210811415610898577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b6000828210156108b0576108b0610803565b50039056fea2646970667358221220c6c11c013ecfd49d47224893848b87d54a305f542abc80315e03a44847ac5c5364736f6c634300080a0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC0 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x74 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x4E JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x222 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xA5 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x12F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x16C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0xCF JUMPI PUSH2 0xCD PUSH2 0x25A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE9 PUSH2 0x2B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF6 SWAP2 SWAP1 PUSH2 0x69A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11F PUSH2 0x11A CALLDATASIZE PUSH1 0x4 PUSH2 0x736 JUMP JUMPDEST PUSH2 0x343 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SELFBALANCE JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x158 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11F PUSH2 0x167 CALLDATASIZE PUSH1 0x4 PUSH2 0x760 JUMP JUMPDEST PUSH2 0x3BC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x178 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCD PUSH2 0x187 CALLDATASIZE PUSH1 0x4 PUSH2 0x79C JUMP JUMPDEST PUSH2 0x5D3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x198 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x1A6 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13E PUSH2 0x1D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x7B5 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE9 PUSH2 0x679 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x206 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11F PUSH2 0x215 CALLDATASIZE PUSH1 0x4 PUSH2 0x736 JUMP JUMPDEST PUSH2 0x686 JUMP JUMPDEST PUSH2 0xCD PUSH2 0x25A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13E PUSH2 0x23D CALLDATASIZE PUSH1 0x4 PUSH2 0x7D0 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD CALLVALUE SWAP3 SWAP1 PUSH2 0x279 SWAP1 DUP5 SWAP1 PUSH2 0x832 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD CALLVALUE DUP2 MSTORE CALLER SWAP1 PUSH32 0xE1FFFCC4923D04B559F4D29A8BFC6CDA04EB5B0D3C460751C2402C5C5CC9109C SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x2C2 SWAP1 PUSH2 0x84A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2EE SWAP1 PUSH2 0x84A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x33B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x310 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x33B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x31E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE MLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0x3AB SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x3EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0x464 JUMPI POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF EQ ISZERO JUMPDEST ISZERO PUSH2 0x4EC JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x4A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x4E6 SWAP1 DUP5 SWAP1 PUSH2 0x89E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x521 SWAP1 DUP5 SWAP1 PUSH2 0x89E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x55B SWAP1 DUP5 SWAP1 PUSH2 0x832 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x5C1 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x5EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x60E SWAP1 DUP5 SWAP1 PUSH2 0x89E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD CALLER SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x640 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0x7FCF532C15F0A6DB0BD6D0E038BEA71D30D808C7D98CB3BF7268A95BF5081B65 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x2C2 SWAP1 PUSH2 0x84A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x693 CALLER DUP5 DUP5 PUSH2 0x3BC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6C7 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6AB JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x6D9 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x731 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x749 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x752 DUP4 PUSH2 0x70D JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x775 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x77E DUP5 PUSH2 0x70D JUMP JUMPDEST SWAP3 POP PUSH2 0x78C PUSH1 0x20 DUP6 ADD PUSH2 0x70D JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x693 DUP3 PUSH2 0x70D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7EC DUP4 PUSH2 0x70D JUMP JUMPDEST SWAP2 POP PUSH2 0x7FA PUSH1 0x20 DUP5 ADD PUSH2 0x70D JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x845 JUMPI PUSH2 0x845 PUSH2 0x803 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x85E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x898 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x8B0 JUMPI PUSH2 0x8B0 PUSH2 0x803 JUMP JUMPDEST POP SUB SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC6 0xC1 SHR ADD RETURNDATACOPY 0xCF 0xD4 SWAP14 SELFBALANCE 0x22 BASEFEE SWAP4 DUP5 DUP12 DUP8 0xD5 0x4A ADDRESS 0x5F SLOAD 0x2A 0xBC DUP1 BALANCE 0x5E SUB LOG4 BASEFEE SELFBALANCE 0xAC 0x5C MSTORE8 PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ","sourceMap":"712:1668:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1237:9;:7;:9::i;:::-;712:1668;;;;;731:36;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1676:166;;;;;;;;;;-1:-1:-1;1676:166:6;;;;;:::i;:::-;;:::i;:::-;;;1300:14:12;;1293:22;1275:41;;1263:2;1248:18;1676:166:6;1135:187:12;1580:92:6;;;;;;;;;;-1:-1:-1;1646:21:6;1580:92;;;1473:25:12;;;1461:2;1446:18;1580:92:6;1327:177:12;1968:410:6;;;;;;;;;;-1:-1:-1;1968:410:6;;;;;:::i;:::-;;:::i;1379:197::-;;;;;;;;;;-1:-1:-1;1379:197:6;;;;;:::i;:::-;;:::i;804:26::-;;;;;;;;;;-1:-1:-1;804:26:6;;;;;;;;;;;2199:4:12;2187:17;;;2169:36;;2157:2;2142:18;804:26:6;2027:184:12;1087:44:6;;;;;;;;;;-1:-1:-1;1087:44:6;;;;;:::i;:::-;;;;;;;;;;;;;;771:29;;;;;;;;;;;;;:::i;1846:118::-;;;;;;;;;;-1:-1:-1;1846:118:6;;;;;:::i;:::-;;:::i;1255:120::-;;;:::i;1135:64::-;;;;;;;;;;-1:-1:-1;1135:64:6;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;1255:120;1305:10;1295:21;;;;:9;:21;;;;;:34;;1320:9;;1295:21;:34;;1320:9;;1295:34;:::i;:::-;;;;-1:-1:-1;;1340:30:6;;1360:9;1473:25:12;;1348:10:6;;1340:30;;1461:2:12;1446:18;1340:30:6;;;;;;;1255:120::o;731:36::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1676:166::-;1757:10;1735:4;1747:21;;;:9;:21;;;;;;;;;:26;;;;;;;;;;:32;;;1790:30;1735:4;;1747:26;;1790:30;;;;1776:3;1473:25:12;;1461:2;1446:18;;1327:177;1790:30:6;;;;;;;;-1:-1:-1;1833:4:6;1676:166;;;;:::o;1968:410::-;2065:14;;;2045:4;2065:14;;;:9;:14;;;;;;:21;-1:-1:-1;2065:21:6;2057:30;;;;;;2098:17;;;2105:10;2098:17;;;;:68;;-1:-1:-1;2119:14:6;;;;;;;:9;:14;;;;;;;;2134:10;2119:26;;;;;;;;2149:17;2119:47;;2098:68;2094:172;;;2184:14;;;;;;;:9;:14;;;;;;;;2199:10;2184:26;;;;;;;;:33;-1:-1:-1;2184:33:6;2176:42;;;;;;2226:14;;;;;;;:9;:14;;;;;;;;2241:10;2226:26;;;;;;;:33;;2256:3;;2226:14;:33;;2256:3;;2226:33;:::i;:::-;;;;-1:-1:-1;;2094:172:6;2272:14;;;;;;;:9;:14;;;;;:21;;2290:3;;2272:14;:21;;2290:3;;2272:21;:::i;:::-;;;;-1:-1:-1;;2299:14:6;;;;;;;:9;:14;;;;;:21;;2317:3;;2299:14;:21;;2317:3;;2299:21;:::i;:::-;;;;;;;;2346:3;2332:23;;2341:3;2332:23;;;2351:3;2332:23;;;;1473:25:12;;1461:2;1446:18;;1327:177;2332:23:6;;;;;;;;-1:-1:-1;2369:4:6;1968:410;;;;;:::o;1379:197::-;1441:10;1431:21;;;;:9;:21;;;;;;:28;-1:-1:-1;1431:28:6;1423:37;;;;;;1476:10;1466:21;;;;:9;:21;;;;;:28;;1491:3;;1466:21;:28;;1491:3;;1466:28;:::i;:::-;;;;-1:-1:-1;;1500:33:6;;1508:10;;1500:33;;;;;1529:3;;1500:33;;;;1529:3;1508:10;1500:33;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1544:27:6;;1473:25:12;;;1555:10:6;;1544:27;;1461:2:12;1446:18;1544:27:6;;;;;;;1379:197;:::o;771:29::-;;;;;;;:::i;1846:118::-;1906:4;1925:34;1938:10;1950:3;1955;1925:12;:34::i;:::-;1918:41;1846:118;-1:-1:-1;;;1846:118:6:o;14:656:12:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;586:2:12;574:15;591:66;570:88;555:104;;;;661:2;551:113;;14:656;-1:-1:-1;;;14:656:12:o;675:196::-;743:20;;803:42;792:54;;782:65;;772:93;;861:1;858;851:12;772:93;675:196;;;:::o;876:254::-;944:6;952;1005:2;993:9;984:7;980:23;976:32;973:52;;;1021:1;1018;1011:12;973:52;1044:29;1063:9;1044:29;:::i;:::-;1034:39;1120:2;1105:18;;;;1092:32;;-1:-1:-1;;;876:254:12:o;1509:328::-;1586:6;1594;1602;1655:2;1643:9;1634:7;1630:23;1626:32;1623:52;;;1671:1;1668;1661:12;1623:52;1694:29;1713:9;1694:29;:::i;:::-;1684:39;;1742:38;1776:2;1765:9;1761:18;1742:38;:::i;:::-;1732:48;;1827:2;1816:9;1812:18;1799:32;1789:42;;1509:328;;;;;:::o;1842:180::-;1901:6;1954:2;1942:9;1933:7;1929:23;1925:32;1922:52;;;1970:1;1967;1960:12;1922:52;-1:-1:-1;1993:23:12;;1842:180;-1:-1:-1;1842:180:12:o;2216:186::-;2275:6;2328:2;2316:9;2307:7;2303:23;2299:32;2296:52;;;2344:1;2341;2334:12;2296:52;2367:29;2386:9;2367:29;:::i;2407:260::-;2475:6;2483;2536:2;2524:9;2515:7;2511:23;2507:32;2504:52;;;2552:1;2549;2542:12;2504:52;2575:29;2594:9;2575:29;:::i;:::-;2565:39;;2623:38;2657:2;2646:9;2642:18;2623:38;:::i;:::-;2613:48;;2407:260;;;;;:::o;2672:184::-;2724:77;2721:1;2714:88;2821:4;2818:1;2811:15;2845:4;2842:1;2835:15;2861:128;2901:3;2932:1;2928:6;2925:1;2922:13;2919:39;;;2938:18;;:::i;:::-;-1:-1:-1;2974:9:12;;2861:128::o;2994:437::-;3073:1;3069:12;;;;3116;;;3137:61;;3191:4;3183:6;3179:17;3169:27;;3137:61;3244:2;3236:6;3233:14;3213:18;3210:38;3207:218;;;3281:77;3278:1;3271:88;3382:4;3379:1;3372:15;3410:4;3407:1;3400:15;3207:218;;2994:437;;;:::o;3436:125::-;3476:4;3504:1;3501;3498:8;3495:34;;;3509:18;;:::i;:::-;-1:-1:-1;3546:9:12;;3436:125::o"},"gasEstimates":{"creation":{"codeDepositCost":"456600","executionCost":"infinite","totalCost":"infinite"},"external":{"allowance(address,address)":"infinite","approve(address,uint256)":"24521","balanceOf(address)":"2552","decimals()":"2336","deposit()":"25965","name()":"infinite","symbol()":"infinite","totalSupply()":"206","transfer(address,uint256)":"53297","transferFrom(address,address,uint256)":"infinite","withdraw(uint256)":"infinite"}},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","deposit()":"d0e30db0","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","withdraw(uint256)":"2e1a7d4d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/core-v3/contracts/dependencies/weth/WETH9.sol\":\"WETH9\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":25000},\"remappings\":[]},\"sources\":{\"@aave/core-v3/contracts/dependencies/weth/WETH9.sol\":{\"content\":\"// Copyright (C) 2015, 2016, 2017 Dapphub\\n\\n// This program is free software: you can redistribute it and/or modify\\n// it under the terms of the GNU General Public License as published by\\n// the Free Software Foundation, either version 3 of the License, or\\n// (at your option) any later version.\\n\\n// This program is distributed in the hope that it will be useful,\\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n// GNU General Public License for more details.\\n\\n// You should have received a copy of the GNU General Public License\\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\\n\\npragma solidity ^0.8.10;\\n\\ncontract WETH9 {\\n  string public name = 'Wrapped Ether';\\n  string public symbol = 'WETH';\\n  uint8 public decimals = 18;\\n\\n  event Approval(address indexed src, address indexed guy, uint256 wad);\\n  event Transfer(address indexed src, address indexed dst, uint256 wad);\\n  event Deposit(address indexed dst, uint256 wad);\\n  event Withdrawal(address indexed src, uint256 wad);\\n\\n  mapping(address => uint256) public balanceOf;\\n  mapping(address => mapping(address => uint256)) public allowance;\\n\\n  receive() external payable {\\n    deposit();\\n  }\\n\\n  function deposit() public payable {\\n    balanceOf[msg.sender] += msg.value;\\n    emit Deposit(msg.sender, msg.value);\\n  }\\n\\n  function withdraw(uint256 wad) public {\\n    require(balanceOf[msg.sender] >= wad);\\n    balanceOf[msg.sender] -= wad;\\n    payable(msg.sender).transfer(wad);\\n    emit Withdrawal(msg.sender, wad);\\n  }\\n\\n  function totalSupply() public view returns (uint256) {\\n    return address(this).balance;\\n  }\\n\\n  function approve(address guy, uint256 wad) public returns (bool) {\\n    allowance[msg.sender][guy] = wad;\\n    emit Approval(msg.sender, guy, wad);\\n    return true;\\n  }\\n\\n  function transfer(address dst, uint256 wad) public returns (bool) {\\n    return transferFrom(msg.sender, dst, wad);\\n  }\\n\\n  function transferFrom(address src, address dst, uint256 wad) public returns (bool) {\\n    require(balanceOf[src] >= wad);\\n\\n    if (src != msg.sender && allowance[src][msg.sender] != type(uint256).max) {\\n      require(allowance[src][msg.sender] >= wad);\\n      allowance[src][msg.sender] -= wad;\\n    }\\n\\n    balanceOf[src] -= wad;\\n    balanceOf[dst] += wad;\\n\\n    emit Transfer(src, dst, wad);\\n\\n    return true;\\n  }\\n}\\n\\n/*\\n                    GNU GENERAL PUBLIC LICENSE\\n                       Version 3, 29 June 2007\\n\\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\\n Everyone is permitted to copy and distribute verbatim copies\\n of this license document, but changing it is not allowed.\\n\\n                            Preamble\\n\\n  The GNU General Public License is a free, copyleft license for\\nsoftware and other kinds of works.\\n\\n  The licenses for most software and other practical works are designed\\nto take away your freedom to share and change the works.  By contrast,\\nthe GNU General Public License is intended to guarantee your freedom to\\nshare and change all versions of a program--to make sure it remains free\\nsoftware for all its users.  We, the Free Software Foundation, use the\\nGNU General Public License for most of our software; it applies also to\\nany other work released this way by its authors.  You can apply it to\\nyour programs, too.\\n\\n  When we speak of free software, we are referring to freedom, not\\nprice.  Our General Public Licenses are designed to make sure that you\\nhave the freedom to distribute copies of free software (and charge for\\nthem if you wish), that you receive source code or can get it if you\\nwant it, that you can change the software or use pieces of it in new\\nfree programs, and that you know you can do these things.\\n\\n  To protect your rights, we need to prevent others from denying you\\nthese rights or asking you to surrender the rights.  Therefore, you have\\ncertain responsibilities if you distribute copies of the software, or if\\nyou modify it: responsibilities to respect the freedom of others.\\n\\n  For example, if you distribute copies of such a program, whether\\ngratis or for a fee, you must pass on to the recipients the same\\nfreedoms that you received.  You must make sure that they, too, receive\\nor can get the source code.  And you must show them these terms so they\\nknow their rights.\\n\\n  Developers that use the GNU GPL protect your rights with two steps:\\n(1) assert copyright on the software, and (2) offer you this License\\ngiving you legal permission to copy, distribute and/or modify it.\\n\\n  For the developers' and authors' protection, the GPL clearly explains\\nthat there is no warranty for this free software.  For both users' and\\nauthors' sake, the GPL requires that modified versions be marked as\\nchanged, so that their problems will not be attributed erroneously to\\nauthors of previous versions.\\n\\n  Some devices are designed to deny users access to install or run\\nmodified versions of the software inside them, although the manufacturer\\ncan do so.  This is fundamentally incompatible with the aim of\\nprotecting users' freedom to change the software.  The systematic\\npattern of such abuse occurs in the area of products for individuals to\\nuse, which is precisely where it is most unacceptable.  Therefore, we\\nhave designed this version of the GPL to prohibit the practice for those\\nproducts.  If such problems arise substantially in other domains, we\\nstand ready to extend this provision to those domains in future versions\\nof the GPL, as needed to protect the freedom of users.\\n\\n  Finally, every program is threatened constantly by software patents.\\nStates should not allow patents to restrict development and use of\\nsoftware on general-purpose computers, but in those that do, we wish to\\navoid the special danger that patents applied to a free program could\\nmake it effectively proprietary.  To prevent this, the GPL assures that\\npatents cannot be used to render the program non-free.\\n\\n  The precise terms and conditions for copying, distribution and\\nmodification follow.\\n\\n                       TERMS AND CONDITIONS\\n\\n  0. Definitions.\\n\\n  \\\"This License\\\" refers to version 3 of the GNU General Public License.\\n\\n  \\\"Copyright\\\" also means copyright-like laws that apply to other kinds of\\nworks, such as semiconductor masks.\\n\\n  \\\"The Program\\\" refers to any copyrightable work licensed under this\\nLicense.  Each licensee is addressed as \\\"you\\\".  \\\"Licensees\\\" and\\n\\\"recipients\\\" may be individuals or organizations.\\n\\n  To \\\"modify\\\" a work means to copy from or adapt all or part of the work\\nin a fashion requiring copyright permission, other than the making of an\\nexact copy.  The resulting work is called a \\\"modified version\\\" of the\\nearlier work or a work \\\"based on\\\" the earlier work.\\n\\n  A \\\"covered work\\\" means either the unmodified Program or a work based\\non the Program.\\n\\n  To \\\"propagate\\\" a work means to do anything with it that, without\\npermission, would make you directly or secondarily liable for\\ninfringement under applicable copyright law, except executing it on a\\ncomputer or modifying a private copy.  Propagation includes copying,\\ndistribution (with or without modification), making available to the\\npublic, and in some countries other activities as well.\\n\\n  To \\\"convey\\\" a work means any kind of propagation that enables other\\nparties to make or receive copies.  Mere interaction with a user through\\na computer network, with no transfer of a copy, is not conveying.\\n\\n  An interactive user interface displays \\\"Appropriate Legal Notices\\\"\\nto the extent that it includes a convenient and prominently visible\\nfeature that (1) displays an appropriate copyright notice, and (2)\\ntells the user that there is no warranty for the work (except to the\\nextent that warranties are provided), that licensees may convey the\\nwork under this License, and how to view a copy of this License.  If\\nthe interface presents a list of user commands or options, such as a\\nmenu, a prominent item in the list meets this criterion.\\n\\n  1. Source Code.\\n\\n  The \\\"source code\\\" for a work means the preferred form of the work\\nfor making modifications to it.  \\\"Object code\\\" means any non-source\\nform of a work.\\n\\n  A \\\"Standard Interface\\\" means an interface that either is an official\\nstandard defined by a recognized standards body, or, in the case of\\ninterfaces specified for a particular programming language, one that\\nis widely used among developers working in that language.\\n\\n  The \\\"System Libraries\\\" of an executable work include anything, other\\nthan the work as a whole, that (a) is included in the normal form of\\npackaging a Major Component, but which is not part of that Major\\nComponent, and (b) serves only to enable use of the work with that\\nMajor Component, or to implement a Standard Interface for which an\\nimplementation is available to the public in source code form.  A\\n\\\"Major Component\\\", in this context, means a major essential component\\n(kernel, window system, and so on) of the specific operating system\\n(if any) on which the executable work runs, or a compiler used to\\nproduce the work, or an object code interpreter used to run it.\\n\\n  The \\\"Corresponding Source\\\" for a work in object code form means all\\nthe source code needed to generate, install, and (for an executable\\nwork) run the object code and to modify the work, including scripts to\\ncontrol those activities.  However, it does not include the work's\\nSystem Libraries, or general-purpose tools or generally available free\\nprograms which are used unmodified in performing those activities but\\nwhich are not part of the work.  For example, Corresponding Source\\nincludes interface definition files associated with source files for\\nthe work, and the source code for shared libraries and dynamically\\nlinked subprograms that the work is specifically designed to require,\\nsuch as by intimate data communication or control flow between those\\nsubprograms and other parts of the work.\\n\\n  The Corresponding Source need not include anything that users\\ncan regenerate automatically from other parts of the Corresponding\\nSource.\\n\\n  The Corresponding Source for a work in source code form is that\\nsame work.\\n\\n  2. Basic Permissions.\\n\\n  All rights granted under this License are granted for the term of\\ncopyright on the Program, and are irrevocable provided the stated\\nconditions are met.  This License explicitly affirms your unlimited\\npermission to run the unmodified Program.  The output from running a\\ncovered work is covered by this License only if the output, given its\\ncontent, constitutes a covered work.  This License acknowledges your\\nrights of fair use or other equivalent, as provided by copyright law.\\n\\n  You may make, run and propagate covered works that you do not\\nconvey, without conditions so long as your license otherwise remains\\nin force.  You may convey covered works to others for the sole purpose\\nof having them make modifications exclusively for you, or provide you\\nwith facilities for running those works, provided that you comply with\\nthe terms of this License in conveying all material for which you do\\nnot control copyright.  Those thus making or running the covered works\\nfor you must do so exclusively on your behalf, under your direction\\nand control, on terms that prohibit them from making any copies of\\nyour copyrighted material outside their relationship with you.\\n\\n  Conveying under any other circumstances is permitted solely under\\nthe conditions stated below.  Sublicensing is not allowed; section 10\\nmakes it unnecessary.\\n\\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\\n\\n  No covered work shall be deemed part of an effective technological\\nmeasure under any applicable law fulfilling obligations under article\\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\\nsimilar laws prohibiting or restricting circumvention of such\\nmeasures.\\n\\n  When you convey a covered work, you waive any legal power to forbid\\ncircumvention of technological measures to the extent such circumvention\\nis effected by exercising rights under this License with respect to\\nthe covered work, and you disclaim any intention to limit operation or\\nmodification of the work as a means of enforcing, against the work's\\nusers, your or third parties' legal rights to forbid circumvention of\\ntechnological measures.\\n\\n  4. Conveying Verbatim Copies.\\n\\n  You may convey verbatim copies of the Program's source code as you\\nreceive it, in any medium, provided that you conspicuously and\\nappropriately publish on each copy an appropriate copyright notice;\\nkeep intact all notices stating that this License and any\\nnon-permissive terms added in accord with section 7 apply to the code;\\nkeep intact all notices of the absence of any warranty; and give all\\nrecipients a copy of this License along with the Program.\\n\\n  You may charge any price or no price for each copy that you convey,\\nand you may offer support or warranty protection for a fee.\\n\\n  5. Conveying Modified Source Versions.\\n\\n  You may convey a work based on the Program, or the modifications to\\nproduce it from the Program, in the form of source code under the\\nterms of section 4, provided that you also meet all of these conditions:\\n\\n    a) The work must carry prominent notices stating that you modified\\n    it, and giving a relevant date.\\n\\n    b) The work must carry prominent notices stating that it is\\n    released under this License and any conditions added under section\\n    7.  This requirement modifies the requirement in section 4 to\\n    \\\"keep intact all notices\\\".\\n\\n    c) You must license the entire work, as a whole, under this\\n    License to anyone who comes into possession of a copy.  This\\n    License will therefore apply, along with any applicable section 7\\n    additional terms, to the whole of the work, and all its parts,\\n    regardless of how they are packaged.  This License gives no\\n    permission to license the work in any other way, but it does not\\n    invalidate such permission if you have separately received it.\\n\\n    d) If the work has interactive user interfaces, each must display\\n    Appropriate Legal Notices; however, if the Program has interactive\\n    interfaces that do not display Appropriate Legal Notices, your\\n    work need not make them do so.\\n\\n  A compilation of a covered work with other separate and independent\\nworks, which are not by their nature extensions of the covered work,\\nand which are not combined with it such as to form a larger program,\\nin or on a volume of a storage or distribution medium, is called an\\n\\\"aggregate\\\" if the compilation and its resulting copyright are not\\nused to limit the access or legal rights of the compilation's users\\nbeyond what the individual works permit.  Inclusion of a covered work\\nin an aggregate does not cause this License to apply to the other\\nparts of the aggregate.\\n\\n  6. Conveying Non-Source Forms.\\n\\n  You may convey a covered work in object code form under the terms\\nof sections 4 and 5, provided that you also convey the\\nmachine-readable Corresponding Source under the terms of this License,\\nin one of these ways:\\n\\n    a) Convey the object code in, or embodied in, a physical product\\n    (including a physical distribution medium), accompanied by the\\n    Corresponding Source fixed on a durable physical medium\\n    customarily used for software interchange.\\n\\n    b) Convey the object code in, or embodied in, a physical product\\n    (including a physical distribution medium), accompanied by a\\n    written offer, valid for at least three years and valid for as\\n    long as you offer spare parts or customer support for that product\\n    model, to give anyone who possesses the object code either (1) a\\n    copy of the Corresponding Source for all the software in the\\n    product that is covered by this License, on a durable physical\\n    medium customarily used for software interchange, for a price no\\n    more than your reasonable cost of physically performing this\\n    conveying of source, or (2) access to copy the\\n    Corresponding Source from a network server at no charge.\\n\\n    c) Convey individual copies of the object code with a copy of the\\n    written offer to provide the Corresponding Source.  This\\n    alternative is allowed only occasionally and noncommercially, and\\n    only if you received the object code with such an offer, in accord\\n    with subsection 6b.\\n\\n    d) Convey the object code by offering access from a designated\\n    place (gratis or for a charge), and offer equivalent access to the\\n    Corresponding Source in the same way through the same place at no\\n    further charge.  You need not require recipients to copy the\\n    Corresponding Source along with the object code.  If the place to\\n    copy the object code is a network server, the Corresponding Source\\n    may be on a different server (operated by you or a third party)\\n    that supports equivalent copying facilities, provided you maintain\\n    clear directions next to the object code saying where to find the\\n    Corresponding Source.  Regardless of what server hosts the\\n    Corresponding Source, you remain obligated to ensure that it is\\n    available for as long as needed to satisfy these requirements.\\n\\n    e) Convey the object code using peer-to-peer transmission, provided\\n    you inform other peers where the object code and Corresponding\\n    Source of the work are being offered to the general public at no\\n    charge under subsection 6d.\\n\\n  A separable portion of the object code, whose source code is excluded\\nfrom the Corresponding Source as a System Library, need not be\\nincluded in conveying the object code work.\\n\\n  A \\\"User Product\\\" is either (1) a \\\"consumer product\\\", which means any\\ntangible personal property which is normally used for personal, family,\\nor household purposes, or (2) anything designed or sold for incorporation\\ninto a dwelling.  In determining whether a product is a consumer product,\\ndoubtful cases shall be resolved in favor of coverage.  For a particular\\nproduct received by a particular user, \\\"normally used\\\" refers to a\\ntypical or common use of that class of product, regardless of the status\\nof the particular user or of the way in which the particular user\\nactually uses, or expects or is expected to use, the product.  A product\\nis a consumer product regardless of whether the product has substantial\\ncommercial, industrial or non-consumer uses, unless such uses represent\\nthe only significant mode of use of the product.\\n\\n  \\\"Installation Information\\\" for a User Product means any methods,\\nprocedures, authorization keys, or other information required to install\\nand execute modified versions of a covered work in that User Product from\\na modified version of its Corresponding Source.  The information must\\nsuffice to ensure that the continued functioning of the modified object\\ncode is in no case prevented or interfered with solely because\\nmodification has been made.\\n\\n  If you convey an object code work under this section in, or with, or\\nspecifically for use in, a User Product, and the conveying occurs as\\npart of a transaction in which the right of possession and use of the\\nUser Product is transferred to the recipient in perpetuity or for a\\nfixed term (regardless of how the transaction is characterized), the\\nCorresponding Source conveyed under this section must be accompanied\\nby the Installation Information.  But this requirement does not apply\\nif neither you nor any third party retains the ability to install\\nmodified object code on the User Product (for example, the work has\\nbeen installed in ROM).\\n\\n  The requirement to provide Installation Information does not include a\\nrequirement to continue to provide support service, warranty, or updates\\nfor a work that has been modified or installed by the recipient, or for\\nthe User Product in which it has been modified or installed.  Access to a\\nnetwork may be denied when the modification itself materially and\\nadversely affects the operation of the network or violates the rules and\\nprotocols for communication across the network.\\n\\n  Corresponding Source conveyed, and Installation Information provided,\\nin accord with this section must be in a format that is publicly\\ndocumented (and with an implementation available to the public in\\nsource code form), and must require no special password or key for\\nunpacking, reading or copying.\\n\\n  7. Additional Terms.\\n\\n  \\\"Additional permissions\\\" are terms that supplement the terms of this\\nLicense by making exceptions from one or more of its conditions.\\nAdditional permissions that are applicable to the entire Program shall\\nbe treated as though they were included in this License, to the extent\\nthat they are valid under applicable law.  If additional permissions\\napply only to part of the Program, that part may be used separately\\nunder those permissions, but the entire Program remains governed by\\nthis License without regard to the additional permissions.\\n\\n  When you convey a copy of a covered work, you may at your option\\nremove any additional permissions from that copy, or from any part of\\nit.  (Additional permissions may be written to require their own\\nremoval in certain cases when you modify the work.)  You may place\\nadditional permissions on material, added by you to a covered work,\\nfor which you have or can give appropriate copyright permission.\\n\\n  Notwithstanding any other provision of this License, for material you\\nadd to a covered work, you may (if authorized by the copyright holders of\\nthat material) supplement the terms of this License with terms:\\n\\n    a) Disclaiming warranty or limiting liability differently from the\\n    terms of sections 15 and 16 of this License; or\\n\\n    b) Requiring preservation of specified reasonable legal notices or\\n    author attributions in that material or in the Appropriate Legal\\n    Notices displayed by works containing it; or\\n\\n    c) Prohibiting misrepresentation of the origin of that material, or\\n    requiring that modified versions of such material be marked in\\n    reasonable ways as different from the original version; or\\n\\n    d) Limiting the use for publicity purposes of names of licensors or\\n    authors of the material; or\\n\\n    e) Declining to grant rights under trademark law for use of some\\n    trade names, trademarks, or service marks; or\\n\\n    f) Requiring indemnification of licensors and authors of that\\n    material by anyone who conveys the material (or modified versions of\\n    it) with contractual assumptions of liability to the recipient, for\\n    any liability that these contractual assumptions directly impose on\\n    those licensors and authors.\\n\\n  All other non-permissive additional terms are considered \\\"further\\nrestrictions\\\" within the meaning of section 10.  If the Program as you\\nreceived it, or any part of it, contains a notice stating that it is\\ngoverned by this License along with a term that is a further\\nrestriction, you may remove that term.  If a license document contains\\na further restriction but permits relicensing or conveying under this\\nLicense, you may add to a covered work material governed by the terms\\nof that license document, provided that the further restriction does\\nnot survive such relicensing or conveying.\\n\\n  If you add terms to a covered work in accord with this section, you\\nmust place, in the relevant source files, a statement of the\\nadditional terms that apply to those files, or a notice indicating\\nwhere to find the applicable terms.\\n\\n  Additional terms, permissive or non-permissive, may be stated in the\\nform of a separately written license, or stated as exceptions;\\nthe above requirements apply either way.\\n\\n  8. Termination.\\n\\n  You may not propagate or modify a covered work except as expressly\\nprovided under this License.  Any attempt otherwise to propagate or\\nmodify it is void, and will automatically terminate your rights under\\nthis License (including any patent licenses granted under the third\\nparagraph of section 11).\\n\\n  However, if you cease all violation of this License, then your\\nlicense from a particular copyright holder is reinstated (a)\\nprovisionally, unless and until the copyright holder explicitly and\\nfinally terminates your license, and (b) permanently, if the copyright\\nholder fails to notify you of the violation by some reasonable means\\nprior to 60 days after the cessation.\\n\\n  Moreover, your license from a particular copyright holder is\\nreinstated permanently if the copyright holder notifies you of the\\nviolation by some reasonable means, this is the first time you have\\nreceived notice of violation of this License (for any work) from that\\ncopyright holder, and you cure the violation prior to 30 days after\\nyour receipt of the notice.\\n\\n  Termination of your rights under this section does not terminate the\\nlicenses of parties who have received copies or rights from you under\\nthis License.  If your rights have been terminated and not permanently\\nreinstated, you do not qualify to receive new licenses for the same\\nmaterial under section 10.\\n\\n  9. Acceptance Not Required for Having Copies.\\n\\n  You are not required to accept this License in order to receive or\\nrun a copy of the Program.  Ancillary propagation of a covered work\\noccurring solely as a consequence of using peer-to-peer transmission\\nto receive a copy likewise does not require acceptance.  However,\\nnothing other than this License grants you permission to propagate or\\nmodify any covered work.  These actions infringe copyright if you do\\nnot accept this License.  Therefore, by modifying or propagating a\\ncovered work, you indicate your acceptance of this License to do so.\\n\\n  10. Automatic Licensing of Downstream Recipients.\\n\\n  Each time you convey a covered work, the recipient automatically\\nreceives a license from the original licensors, to run, modify and\\npropagate that work, subject to this License.  You are not responsible\\nfor enforcing compliance by third parties with this License.\\n\\n  An \\\"entity transaction\\\" is a transaction transferring control of an\\norganization, or substantially all assets of one, or subdividing an\\norganization, or merging organizations.  If propagation of a covered\\nwork results from an entity transaction, each party to that\\ntransaction who receives a copy of the work also receives whatever\\nlicenses to the work the party's predecessor in interest had or could\\ngive under the previous paragraph, plus a right to possession of the\\nCorresponding Source of the work from the predecessor in interest, if\\nthe predecessor has it or can get it with reasonable efforts.\\n\\n  You may not impose any further restrictions on the exercise of the\\nrights granted or affirmed under this License.  For example, you may\\nnot impose a license fee, royalty, or other charge for exercise of\\nrights granted under this License, and you may not initiate litigation\\n(including a cross-claim or counterclaim in a lawsuit) alleging that\\nany patent claim is infringed by making, using, selling, offering for\\nsale, or importing the Program or any portion of it.\\n\\n  11. Patents.\\n\\n  A \\\"contributor\\\" is a copyright holder who authorizes use under this\\nLicense of the Program or a work on which the Program is based.  The\\nwork thus licensed is called the contributor's \\\"contributor version\\\".\\n\\n  A contributor's \\\"essential patent claims\\\" are all patent claims\\nowned or controlled by the contributor, whether already acquired or\\nhereafter acquired, that would be infringed by some manner, permitted\\nby this License, of making, using, or selling its contributor version,\\nbut do not include claims that would be infringed only as a\\nconsequence of further modification of the contributor version.  For\\npurposes of this definition, \\\"control\\\" includes the right to grant\\npatent sublicenses in a manner consistent with the requirements of\\nthis License.\\n\\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\\npatent license under the contributor's essential patent claims, to\\nmake, use, sell, offer for sale, import and otherwise run, modify and\\npropagate the contents of its contributor version.\\n\\n  In the following three paragraphs, a \\\"patent license\\\" is any express\\nagreement or commitment, however denominated, not to enforce a patent\\n(such as an express permission to practice a patent or covenant not to\\nsue for patent infringement).  To \\\"grant\\\" such a patent license to a\\nparty means to make such an agreement or commitment not to enforce a\\npatent against the party.\\n\\n  If you convey a covered work, knowingly relying on a patent license,\\nand the Corresponding Source of the work is not available for anyone\\nto copy, free of charge and under the terms of this License, through a\\npublicly available network server or other readily accessible means,\\nthen you must either (1) cause the Corresponding Source to be so\\navailable, or (2) arrange to deprive yourself of the benefit of the\\npatent license for this particular work, or (3) arrange, in a manner\\nconsistent with the requirements of this License, to extend the patent\\nlicense to downstream recipients.  \\\"Knowingly relying\\\" means you have\\nactual knowledge that, but for the patent license, your conveying the\\ncovered work in a country, or your recipient's use of the covered work\\nin a country, would infringe one or more identifiable patents in that\\ncountry that you have reason to believe are valid.\\n\\n  If, pursuant to or in connection with a single transaction or\\narrangement, you convey, or propagate by procuring conveyance of, a\\ncovered work, and grant a patent license to some of the parties\\nreceiving the covered work authorizing them to use, propagate, modify\\nor convey a specific copy of the covered work, then the patent license\\nyou grant is automatically extended to all recipients of the covered\\nwork and works based on it.\\n\\n  A patent license is \\\"discriminatory\\\" if it does not include within\\nthe scope of its coverage, prohibits the exercise of, or is\\nconditioned on the non-exercise of one or more of the rights that are\\nspecifically granted under this License.  You may not convey a covered\\nwork if you are a party to an arrangement with a third party that is\\nin the business of distributing software, under which you make payment\\nto the third party based on the extent of your activity of conveying\\nthe work, and under which the third party grants, to any of the\\nparties who would receive the covered work from you, a discriminatory\\npatent license (a) in connection with copies of the covered work\\nconveyed by you (or copies made from those copies), or (b) primarily\\nfor and in connection with specific products or compilations that\\ncontain the covered work, unless you entered into that arrangement,\\nor that patent license was granted, prior to 28 March 2007.\\n\\n  Nothing in this License shall be construed as excluding or limiting\\nany implied license or other defenses to infringement that may\\notherwise be available to you under applicable patent law.\\n\\n  12. No Surrender of Others' Freedom.\\n\\n  If conditions are imposed on you (whether by court order, agreement or\\notherwise) that contradict the conditions of this License, they do not\\nexcuse you from the conditions of this License.  If you cannot convey a\\ncovered work so as to satisfy simultaneously your obligations under this\\nLicense and any other pertinent obligations, then as a consequence you may\\nnot convey it at all.  For example, if you agree to terms that obligate you\\nto collect a royalty for further conveying from those to whom you convey\\nthe Program, the only way you could satisfy both those terms and this\\nLicense would be to refrain entirely from conveying the Program.\\n\\n  13. Use with the GNU Affero General Public License.\\n\\n  Notwithstanding any other provision of this License, you have\\npermission to link or combine any covered work with a work licensed\\nunder version 3 of the GNU Affero General Public License into a single\\ncombined work, and to convey the resulting work.  The terms of this\\nLicense will continue to apply to the part which is the covered work,\\nbut the special requirements of the GNU Affero General Public License,\\nsection 13, concerning interaction through a network will apply to the\\ncombination as such.\\n\\n  14. Revised Versions of this License.\\n\\n  The Free Software Foundation may publish revised and/or new versions of\\nthe GNU General Public License from time to time.  Such new versions will\\nbe similar in spirit to the present version, but may differ in detail to\\naddress new problems or concerns.\\n\\n  Each version is given a distinguishing version number.  If the\\nProgram specifies that a certain numbered version of the GNU General\\nPublic License \\\"or any later version\\\" applies to it, you have the\\noption of following the terms and conditions either of that numbered\\nversion or of any later version published by the Free Software\\nFoundation.  If the Program does not specify a version number of the\\nGNU General Public License, you may choose any version ever published\\nby the Free Software Foundation.\\n\\n  If the Program specifies that a proxy can decide which future\\nversions of the GNU General Public License can be used, that proxy's\\npublic statement of acceptance of a version permanently authorizes you\\nto choose that version for the Program.\\n\\n  Later license versions may give you additional or different\\npermissions.  However, no additional obligations are imposed on any\\nauthor or copyright holder as a result of your choosing to follow a\\nlater version.\\n\\n  15. Disclaimer of Warranty.\\n\\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \\\"AS IS\\\" WITHOUT WARRANTY\\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\\n\\n  16. Limitation of Liability.\\n\\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\\nSUCH DAMAGES.\\n\\n  17. Interpretation of Sections 15 and 16.\\n\\n  If the disclaimer of warranty and limitation of liability provided\\nabove cannot be given local legal effect according to their terms,\\nreviewing courts shall apply local law that most closely approximates\\nan absolute waiver of all civil liability in connection with the\\nProgram, unless a warranty or assumption of liability accompanies a\\ncopy of the Program in return for a fee.\\n\\n                     END OF TERMS AND CONDITIONS\\n\\n            How to Apply These Terms to Your New Programs\\n\\n  If you develop a new program, and you want it to be of the greatest\\npossible use to the public, the best way to achieve this is to make it\\nfree software which everyone can redistribute and change under these terms.\\n\\n  To do so, attach the following notices to the program.  It is safest\\nto attach them to the start of each source file to most effectively\\nstate the exclusion of warranty; and each file should have at least\\nthe \\\"copyright\\\" line and a pointer to where the full notice is found.\\n\\n    <one line to give the program's name and a brief idea of what it does.>\\n    Copyright (C) <year>  <name of author>\\n\\n    This program is free software: you can redistribute it and/or modify\\n    it under the terms of the GNU General Public License as published by\\n    the Free Software Foundation, either version 3 of the License, or\\n    (at your option) any later version.\\n\\n    This program is distributed in the hope that it will be useful,\\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n    GNU General Public License for more details.\\n\\n    You should have received a copy of the GNU General Public License\\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\\n\\nAlso add information on how to contact you by electronic and paper mail.\\n\\n  If the program does terminal interaction, make it output a short\\nnotice like this when it starts in an interactive mode:\\n\\n    <program>  Copyright (C) <year>  <name of author>\\n    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\\n    This is free software, and you are welcome to redistribute it\\n    under certain conditions; type `show c' for details.\\n\\nThe hypothetical commands `show w' and `show c' should show the appropriate\\nparts of the General Public License.  Of course, your program's commands\\nmight be different; for a GUI interface, you would use an \\\"about box\\\".\\n\\n  You should also get your employer (if you work as a programmer) or school,\\nif any, to sign a \\\"copyright disclaimer\\\" for the program, if necessary.\\nFor more information on this, and how to apply and follow the GNU GPL, see\\n<http://www.gnu.org/licenses/>.\\n\\n  The GNU General Public License does not permit incorporating your program\\ninto proprietary programs.  If your program is a subroutine library, you\\nmay consider it more useful to permit linking proprietary applications with\\nthe library.  If this is what you want to do, use the GNU Lesser General\\nPublic License instead of this License.  But first, please read\\n<http://www.gnu.org/philosophy/why-not-lgpl.html>.\\n\\n*/\\n\",\"keccak256\":\"0x08da88e3ef46dae3e7937fbc60210e7a02f1e7b7daddd3c33ab40bdd20ca30e6\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1141,"contract":"@aave/core-v3/contracts/dependencies/weth/WETH9.sol:WETH9","label":"name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":1144,"contract":"@aave/core-v3/contracts/dependencies/weth/WETH9.sol:WETH9","label":"symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":1147,"contract":"@aave/core-v3/contracts/dependencies/weth/WETH9.sol:WETH9","label":"decimals","offset":0,"slot":"2","type":"t_uint8"},{"astId":1179,"contract":"@aave/core-v3/contracts/dependencies/weth/WETH9.sol:WETH9","label":"balanceOf","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":1185,"contract":"@aave/core-v3/contracts/dependencies/weth/WETH9.sol:WETH9","label":"allowance","offset":0,"slot":"4","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@aave/core-v3/contracts/interfaces/IERC20WithPermit.sol":{"IERC20WithPermit":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"Aave","kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":{"details":"implements the permit function as for https://github.com/ethereum/EIPs/blob/8a34d644aacf0f9f8f00815307fd7dd5da07655f/EIPS/eip-2612.md","params":{"deadline":"The deadline timestamp, type(uint256).max for max deadline","owner":"The owner of the funds","r":"Signature param","s":"Signature param","spender":"The spender","v":"Signature param","value":"The amount"}},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"title":"IERC20WithPermit","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aave\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"implements the permit function as for https://github.com/ethereum/EIPs/blob/8a34d644aacf0f9f8f00815307fd7dd5da07655f/EIPS/eip-2612.md\",\"params\":{\"deadline\":\"The deadline timestamp, type(uint256).max for max deadline\",\"owner\":\"The owner of the funds\",\"r\":\"Signature param\",\"s\":\"Signature param\",\"spender\":\"The spender\",\"v\":\"Signature param\",\"value\":\"The amount\"}},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"title\":\"IERC20WithPermit\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Allow passing a signed message to approve spending\"}},\"notice\":\"Interface for the permit function (EIP-2612)\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/core-v3/contracts/interfaces/IERC20WithPermit.sol\":\"IERC20WithPermit\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":25000},\"remappings\":[]},\"sources\":{\"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n  /**\\n   * @dev Returns the amount of tokens in existence.\\n   */\\n  function totalSupply() external view returns (uint256);\\n\\n  /**\\n   * @dev Returns the amount of tokens owned by `account`.\\n   */\\n  function balanceOf(address account) external view returns (uint256);\\n\\n  /**\\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * Emits a {Transfer} event.\\n   */\\n  function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n  /**\\n   * @dev Returns the remaining number of tokens that `spender` will be\\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n   * zero by default.\\n   *\\n   * This value changes when {approve} or {transferFrom} are called.\\n   */\\n  function allowance(address owner, address spender) external view returns (uint256);\\n\\n  /**\\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n   * that someone may use both the old and the new allowance by unfortunate\\n   * transaction ordering. One possible solution to mitigate this race\\n   * condition is to first reduce the spender's allowance to 0 and set the\\n   * desired value afterwards:\\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n   *\\n   * Emits an {Approval} event.\\n   */\\n  function approve(address spender, uint256 amount) external returns (bool);\\n\\n  /**\\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n   * allowance mechanism. `amount` is then deducted from the caller's\\n   * allowance.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * Emits a {Transfer} event.\\n   */\\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n  /**\\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n   * another (`to`).\\n   *\\n   * Note that `value` may be zero.\\n   */\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n  /**\\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n   * a call to {approve}. `value` is the new allowance.\\n   */\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xf57d62241e553696a1324d225663ba2e1a51db0a51ca236d0c1b009d89b6284c\",\"license\":\"AGPL-3.0\"},\"@aave/core-v3/contracts/interfaces/IERC20WithPermit.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity ^0.8.0;\\n\\nimport {IERC20} from '../dependencies/openzeppelin/contracts/IERC20.sol';\\n\\n/**\\n * @title IERC20WithPermit\\n * @author Aave\\n * @notice Interface for the permit function (EIP-2612)\\n */\\ninterface IERC20WithPermit is IERC20 {\\n  /**\\n   * @notice Allow passing a signed message to approve spending\\n   * @dev implements the permit function as for\\n   * https://github.com/ethereum/EIPs/blob/8a34d644aacf0f9f8f00815307fd7dd5da07655f/EIPS/eip-2612.md\\n   * @param owner The owner of the funds\\n   * @param spender The spender\\n   * @param value The amount\\n   * @param deadline The deadline timestamp, type(uint256).max for max deadline\\n   * @param v Signature param\\n   * @param s Signature param\\n   * @param r Signature param\\n   */\\n  function permit(\\n    address owner,\\n    address spender,\\n    uint256 value,\\n    uint256 deadline,\\n    uint8 v,\\n    bytes32 r,\\n    bytes32 s\\n  ) external;\\n}\\n\",\"keccak256\":\"0xfb041570f1804648f543be72cecc80ca9f65129232bacaa9247ebd11a7d9f83e\",\"license\":\"AGPL-3.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":{"notice":"Allow passing a signed message to approve spending"}},"notice":"Interface for the permit function (EIP-2612)","version":1}}},"contracts/mocks/WETH9Mock.sol":{"WETH9Mock":{"abi":[{"inputs":[{"internalType":"string","name":"mockName","type":"string"},{"internalType":"string","name":"mockSymbol","type":"string"},{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"src","type":"address"},{"indexed":true,"internalType":"address","name":"guy","type":"address"},{"indexed":false,"internalType":"uint256","name":"wad","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"dst","type":"address"},{"indexed":false,"internalType":"uint256","name":"wad","type":"uint256"}],"name":"Deposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"src","type":"address"},{"indexed":true,"internalType":"address","name":"dst","type":"address"},{"indexed":false,"internalType":"uint256","name":"wad","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"src","type":"address"},{"indexed":false,"internalType":"uint256","name":"wad","type":"uint256"}],"name":"Withdrawal","type":"event"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"guy","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"deposit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"isProtected","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"mint","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"state","type":"bool"}],"name":"setProtected","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"dst","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"src","type":"address"},{"internalType":"address","name":"dst","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"devdoc":{"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1468":{"entryPoint":null,"id":1468,"parameterSlots":3,"returnSlots":0},"@_943":{"entryPoint":null,"id":943,"parameterSlots":0,"returnSlots":0},"@_msgSender_310":{"entryPoint":null,"id":310,"parameterSlots":0,"returnSlots":1},"@transferOwnership_1015":{"entryPoint":289,"id":1015,"parameterSlots":1,"returnSlots":0},"abi_decode_string_fromMemory":{"entryPoint":751,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_address_fromMemory":{"entryPoint":934,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":1075,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x41":{"entryPoint":729,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:2920:12","statements":[{"nodeType":"YulBlock","src":"6:3:12","statements":[]},{"body":{"nodeType":"YulBlock","src":"46:95:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"63:1:12","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"70:3:12","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"75:10:12","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"66:3:12"},"nodeType":"YulFunctionCall","src":"66:20:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56:6:12"},"nodeType":"YulFunctionCall","src":"56:31:12"},"nodeType":"YulExpressionStatement","src":"56:31:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:1:12","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"106:4:12","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"96:6:12"},"nodeType":"YulFunctionCall","src":"96:15:12"},"nodeType":"YulExpressionStatement","src":"96:15:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"127:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"130:4:12","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"120:6:12"},"nodeType":"YulFunctionCall","src":"120:15:12"},"nodeType":"YulExpressionStatement","src":"120:15:12"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"14:127:12"},{"body":{"nodeType":"YulBlock","src":"210:821:12","statements":[{"body":{"nodeType":"YulBlock","src":"259:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"268:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"271:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"261:6:12"},"nodeType":"YulFunctionCall","src":"261:12:12"},"nodeType":"YulExpressionStatement","src":"261:12:12"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"238:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"246:4:12","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"234:3:12"},"nodeType":"YulFunctionCall","src":"234:17:12"},{"name":"end","nodeType":"YulIdentifier","src":"253:3:12"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"230:3:12"},"nodeType":"YulFunctionCall","src":"230:27:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"223:6:12"},"nodeType":"YulFunctionCall","src":"223:35:12"},"nodeType":"YulIf","src":"220:55:12"},{"nodeType":"YulVariableDeclaration","src":"284:23:12","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"300:6:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"294:5:12"},"nodeType":"YulFunctionCall","src":"294:13:12"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"288:2:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"316:28:12","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"334:2:12","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"338:1:12","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"330:3:12"},"nodeType":"YulFunctionCall","src":"330:10:12"},{"kind":"number","nodeType":"YulLiteral","src":"342:1:12","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"326:3:12"},"nodeType":"YulFunctionCall","src":"326:18:12"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"320:2:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"367:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"369:16:12"},"nodeType":"YulFunctionCall","src":"369:18:12"},"nodeType":"YulExpressionStatement","src":"369:18:12"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"359:2:12"},{"name":"_2","nodeType":"YulIdentifier","src":"363:2:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"356:2:12"},"nodeType":"YulFunctionCall","src":"356:10:12"},"nodeType":"YulIf","src":"353:36:12"},{"nodeType":"YulVariableDeclaration","src":"398:17:12","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"412:2:12","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"408:3:12"},"nodeType":"YulFunctionCall","src":"408:7:12"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"402:2:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"424:23:12","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"444:2:12","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"438:5:12"},"nodeType":"YulFunctionCall","src":"438:9:12"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"428:6:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"456:71:12","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"478:6:12"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"502:2:12"},{"kind":"number","nodeType":"YulLiteral","src":"506:4:12","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"498:3:12"},"nodeType":"YulFunctionCall","src":"498:13:12"},{"name":"_3","nodeType":"YulIdentifier","src":"513:2:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"494:3:12"},"nodeType":"YulFunctionCall","src":"494:22:12"},{"kind":"number","nodeType":"YulLiteral","src":"518:2:12","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"490:3:12"},"nodeType":"YulFunctionCall","src":"490:31:12"},{"name":"_3","nodeType":"YulIdentifier","src":"523:2:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"486:3:12"},"nodeType":"YulFunctionCall","src":"486:40:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"474:3:12"},"nodeType":"YulFunctionCall","src":"474:53:12"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"460:10:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"586:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"588:16:12"},"nodeType":"YulFunctionCall","src":"588:18:12"},"nodeType":"YulExpressionStatement","src":"588:18:12"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"545:10:12"},{"name":"_2","nodeType":"YulIdentifier","src":"557:2:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"542:2:12"},"nodeType":"YulFunctionCall","src":"542:18:12"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"565:10:12"},{"name":"memPtr","nodeType":"YulIdentifier","src":"577:6:12"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"562:2:12"},"nodeType":"YulFunctionCall","src":"562:22:12"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"539:2:12"},"nodeType":"YulFunctionCall","src":"539:46:12"},"nodeType":"YulIf","src":"536:72:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"624:2:12","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"628:10:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"617:6:12"},"nodeType":"YulFunctionCall","src":"617:22:12"},"nodeType":"YulExpressionStatement","src":"617:22:12"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"655:6:12"},{"name":"_1","nodeType":"YulIdentifier","src":"663:2:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"648:6:12"},"nodeType":"YulFunctionCall","src":"648:18:12"},"nodeType":"YulExpressionStatement","src":"648:18:12"},{"nodeType":"YulVariableDeclaration","src":"675:14:12","value":{"kind":"number","nodeType":"YulLiteral","src":"685:4:12","type":"","value":"0x20"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"679:2:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"735:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"744:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"747:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"737:6:12"},"nodeType":"YulFunctionCall","src":"737:12:12"},"nodeType":"YulExpressionStatement","src":"737:12:12"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"712:6:12"},{"name":"_1","nodeType":"YulIdentifier","src":"720:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"708:3:12"},"nodeType":"YulFunctionCall","src":"708:15:12"},{"name":"_4","nodeType":"YulIdentifier","src":"725:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"704:3:12"},"nodeType":"YulFunctionCall","src":"704:24:12"},{"name":"end","nodeType":"YulIdentifier","src":"730:3:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"701:2:12"},"nodeType":"YulFunctionCall","src":"701:33:12"},"nodeType":"YulIf","src":"698:53:12"},{"nodeType":"YulVariableDeclaration","src":"760:10:12","value":{"kind":"number","nodeType":"YulLiteral","src":"769:1:12","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"764:1:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"825:87:12","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"854:6:12"},{"name":"i","nodeType":"YulIdentifier","src":"862:1:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"850:3:12"},"nodeType":"YulFunctionCall","src":"850:14:12"},{"name":"_4","nodeType":"YulIdentifier","src":"866:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"846:3:12"},"nodeType":"YulFunctionCall","src":"846:23:12"},{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"885:6:12"},{"name":"i","nodeType":"YulIdentifier","src":"893:1:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"881:3:12"},"nodeType":"YulFunctionCall","src":"881:14:12"},{"name":"_4","nodeType":"YulIdentifier","src":"897:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"877:3:12"},"nodeType":"YulFunctionCall","src":"877:23:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"871:5:12"},"nodeType":"YulFunctionCall","src":"871:30:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"839:6:12"},"nodeType":"YulFunctionCall","src":"839:63:12"},"nodeType":"YulExpressionStatement","src":"839:63:12"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"790:1:12"},{"name":"_1","nodeType":"YulIdentifier","src":"793:2:12"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"787:2:12"},"nodeType":"YulFunctionCall","src":"787:9:12"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"797:19:12","statements":[{"nodeType":"YulAssignment","src":"799:15:12","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"808:1:12"},{"name":"_4","nodeType":"YulIdentifier","src":"811:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"804:3:12"},"nodeType":"YulFunctionCall","src":"804:10:12"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"799:1:12"}]}]},"pre":{"nodeType":"YulBlock","src":"783:3:12","statements":[]},"src":"779:133:12"},{"body":{"nodeType":"YulBlock","src":"942:59:12","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"971:6:12"},{"name":"_1","nodeType":"YulIdentifier","src":"979:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"967:3:12"},"nodeType":"YulFunctionCall","src":"967:15:12"},{"name":"_4","nodeType":"YulIdentifier","src":"984:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"963:3:12"},"nodeType":"YulFunctionCall","src":"963:24:12"},{"kind":"number","nodeType":"YulLiteral","src":"989:1:12","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"956:6:12"},"nodeType":"YulFunctionCall","src":"956:35:12"},"nodeType":"YulExpressionStatement","src":"956:35:12"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"927:1:12"},{"name":"_1","nodeType":"YulIdentifier","src":"930:2:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"924:2:12"},"nodeType":"YulFunctionCall","src":"924:9:12"},"nodeType":"YulIf","src":"921:80:12"},{"nodeType":"YulAssignment","src":"1010:15:12","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"1019:6:12"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1010:5:12"}]}]},"name":"abi_decode_string_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"184:6:12","type":""},{"name":"end","nodeType":"YulTypedName","src":"192:3:12","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"200:5:12","type":""}],"src":"146:885:12"},{"body":{"nodeType":"YulBlock","src":"1171:594:12","statements":[{"body":{"nodeType":"YulBlock","src":"1217:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1226:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1229:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1219:6:12"},"nodeType":"YulFunctionCall","src":"1219:12:12"},"nodeType":"YulExpressionStatement","src":"1219:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1192:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"1201:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1188:3:12"},"nodeType":"YulFunctionCall","src":"1188:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"1213:2:12","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1184:3:12"},"nodeType":"YulFunctionCall","src":"1184:32:12"},"nodeType":"YulIf","src":"1181:52:12"},{"nodeType":"YulVariableDeclaration","src":"1242:30:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1262:9:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1256:5:12"},"nodeType":"YulFunctionCall","src":"1256:16:12"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1246:6:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1281:28:12","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1299:2:12","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1303:1:12","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1295:3:12"},"nodeType":"YulFunctionCall","src":"1295:10:12"},{"kind":"number","nodeType":"YulLiteral","src":"1307:1:12","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1291:3:12"},"nodeType":"YulFunctionCall","src":"1291:18:12"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1285:2:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"1336:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1345:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1348:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1338:6:12"},"nodeType":"YulFunctionCall","src":"1338:12:12"},"nodeType":"YulExpressionStatement","src":"1338:12:12"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1324:6:12"},{"name":"_1","nodeType":"YulIdentifier","src":"1332:2:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1321:2:12"},"nodeType":"YulFunctionCall","src":"1321:14:12"},"nodeType":"YulIf","src":"1318:34:12"},{"nodeType":"YulAssignment","src":"1361:71:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1404:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"1415:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1400:3:12"},"nodeType":"YulFunctionCall","src":"1400:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1424:7:12"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1371:28:12"},"nodeType":"YulFunctionCall","src":"1371:61:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1361:6:12"}]},{"nodeType":"YulVariableDeclaration","src":"1441:41:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1467:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"1478:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1463:3:12"},"nodeType":"YulFunctionCall","src":"1463:18:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1457:5:12"},"nodeType":"YulFunctionCall","src":"1457:25:12"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"1445:8:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"1511:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1520:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1523:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1513:6:12"},"nodeType":"YulFunctionCall","src":"1513:12:12"},"nodeType":"YulExpressionStatement","src":"1513:12:12"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"1497:8:12"},{"name":"_1","nodeType":"YulIdentifier","src":"1507:2:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1494:2:12"},"nodeType":"YulFunctionCall","src":"1494:16:12"},"nodeType":"YulIf","src":"1491:36:12"},{"nodeType":"YulAssignment","src":"1536:73:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1579:9:12"},{"name":"offset_1","nodeType":"YulIdentifier","src":"1590:8:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1575:3:12"},"nodeType":"YulFunctionCall","src":"1575:24:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1601:7:12"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1546:28:12"},"nodeType":"YulFunctionCall","src":"1546:63:12"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1536:6:12"}]},{"nodeType":"YulVariableDeclaration","src":"1618:38:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1641:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"1652:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1637:3:12"},"nodeType":"YulFunctionCall","src":"1637:18:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1631:5:12"},"nodeType":"YulFunctionCall","src":"1631:25:12"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1622:5:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"1719:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1728:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1731:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1721:6:12"},"nodeType":"YulFunctionCall","src":"1721:12:12"},"nodeType":"YulExpressionStatement","src":"1721:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1678:5:12"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1689:5:12"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1704:3:12","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1709:1:12","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1700:3:12"},"nodeType":"YulFunctionCall","src":"1700:11:12"},{"kind":"number","nodeType":"YulLiteral","src":"1713:1:12","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1696:3:12"},"nodeType":"YulFunctionCall","src":"1696:19:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1685:3:12"},"nodeType":"YulFunctionCall","src":"1685:31:12"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1675:2:12"},"nodeType":"YulFunctionCall","src":"1675:42:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1668:6:12"},"nodeType":"YulFunctionCall","src":"1668:50:12"},"nodeType":"YulIf","src":"1665:70:12"},{"nodeType":"YulAssignment","src":"1744:15:12","value":{"name":"value","nodeType":"YulIdentifier","src":"1754:5:12"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1744:6:12"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1121:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1132:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1144:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1152:6:12","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1160:6:12","type":""}],"src":"1036:729:12"},{"body":{"nodeType":"YulBlock","src":"1944:182:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1961:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"1972:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1954:6:12"},"nodeType":"YulFunctionCall","src":"1954:21:12"},"nodeType":"YulExpressionStatement","src":"1954:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1995:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"2006:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1991:3:12"},"nodeType":"YulFunctionCall","src":"1991:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"2011:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1984:6:12"},"nodeType":"YulFunctionCall","src":"1984:30:12"},"nodeType":"YulExpressionStatement","src":"1984:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2034:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"2045:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2030:3:12"},"nodeType":"YulFunctionCall","src":"2030:18:12"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"2050:34:12","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2023:6:12"},"nodeType":"YulFunctionCall","src":"2023:62:12"},"nodeType":"YulExpressionStatement","src":"2023:62:12"},{"nodeType":"YulAssignment","src":"2094:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2106:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"2117:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2102:3:12"},"nodeType":"YulFunctionCall","src":"2102:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2094:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1921:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1935:4:12","type":""}],"src":"1770:356:12"},{"body":{"nodeType":"YulBlock","src":"2305:228:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2322:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"2333:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2315:6:12"},"nodeType":"YulFunctionCall","src":"2315:21:12"},"nodeType":"YulExpressionStatement","src":"2315:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2356:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"2367:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2352:3:12"},"nodeType":"YulFunctionCall","src":"2352:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"2372:2:12","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2345:6:12"},"nodeType":"YulFunctionCall","src":"2345:30:12"},"nodeType":"YulExpressionStatement","src":"2345:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2395:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"2406:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2391:3:12"},"nodeType":"YulFunctionCall","src":"2391:18:12"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"2411:34:12","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2384:6:12"},"nodeType":"YulFunctionCall","src":"2384:62:12"},"nodeType":"YulExpressionStatement","src":"2384:62:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2466:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"2477:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2462:3:12"},"nodeType":"YulFunctionCall","src":"2462:18:12"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"2482:8:12","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2455:6:12"},"nodeType":"YulFunctionCall","src":"2455:36:12"},"nodeType":"YulExpressionStatement","src":"2455:36:12"},{"nodeType":"YulAssignment","src":"2500:27:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2512:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"2523:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2508:3:12"},"nodeType":"YulFunctionCall","src":"2508:19:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2500:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2282:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2296:4:12","type":""}],"src":"2131:402:12"},{"body":{"nodeType":"YulBlock","src":"2593:325:12","statements":[{"nodeType":"YulAssignment","src":"2603:22:12","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2617:1:12","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"2620:4:12"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2613:3:12"},"nodeType":"YulFunctionCall","src":"2613:12:12"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2603:6:12"}]},{"nodeType":"YulVariableDeclaration","src":"2634:38:12","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2664:4:12"},{"kind":"number","nodeType":"YulLiteral","src":"2670:1:12","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2660:3:12"},"nodeType":"YulFunctionCall","src":"2660:12:12"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"2638:18:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"2711:31:12","statements":[{"nodeType":"YulAssignment","src":"2713:27:12","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2727:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"2735:4:12","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2723:3:12"},"nodeType":"YulFunctionCall","src":"2723:17:12"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2713:6:12"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2691:18:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2684:6:12"},"nodeType":"YulFunctionCall","src":"2684:26:12"},"nodeType":"YulIf","src":"2681:61:12"},{"body":{"nodeType":"YulBlock","src":"2801:111:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2822:1:12","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2829:3:12","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2834:10:12","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2825:3:12"},"nodeType":"YulFunctionCall","src":"2825:20:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2815:6:12"},"nodeType":"YulFunctionCall","src":"2815:31:12"},"nodeType":"YulExpressionStatement","src":"2815:31:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2866:1:12","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2869:4:12","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2859:6:12"},"nodeType":"YulFunctionCall","src":"2859:15:12"},"nodeType":"YulExpressionStatement","src":"2859:15:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2894:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2897:4:12","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2887:6:12"},"nodeType":"YulFunctionCall","src":"2887:15:12"},"nodeType":"YulExpressionStatement","src":"2887:15:12"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2757:18:12"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2780:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"2788:2:12","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2777:2:12"},"nodeType":"YulFunctionCall","src":"2777:14:12"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2754:2:12"},"nodeType":"YulFunctionCall","src":"2754:38:12"},"nodeType":"YulIf","src":"2751:161:12"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2573:4:12","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2582:6:12","type":""}],"src":"2538:380:12"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), 0)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_address_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n        let value := mload(add(headStart, 64))\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value2 := value\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}","id":12,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60c0604052600d60808190526c2bb930b83832b21022ba3432b960991b60a090815262000030916000919062000233565b50604080518082019091526004808252630ae8aa8960e31b60209092019182526200005e9160019162000233565b506002805460ff191660121790553480156200007957600080fd5b506040516200137c3803806200137c8339810160408190526200009c91620003a6565b600580546001600160a01b0319163390811790915560405181906000906000805160206200135c833981519152908290a3508251620000e390600090602086019062000233565b508151620000f990600190602085019062000233565b50620001058162000121565b50506005805460ff60a01b1916600160a01b1790555062000470565b6005546001600160a01b03163314620001815760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6001600160a01b038116620001e85760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840162000178565b6005546040516001600160a01b038084169216906000805160206200135c83398151915290600090a3600580546001600160a01b0319166001600160a01b0392909216919091179055565b828054620002419062000433565b90600052602060002090601f016020900481019282620002655760008555620002b0565b82601f106200028057805160ff1916838001178555620002b0565b82800160010185558215620002b0579182015b82811115620002b057825182559160200191906001019062000293565b50620002be929150620002c2565b5090565b5b80821115620002be5760008155600101620002c3565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200030157600080fd5b81516001600160401b03808211156200031e576200031e620002d9565b604051601f8301601f19908116603f01168101908282118183101715620003495762000349620002d9565b816040528381526020925086838588010111156200036657600080fd5b600091505b838210156200038a57858201830151818301840152908201906200036b565b838211156200039c5760008385830101525b9695505050505050565b600080600060608486031215620003bc57600080fd5b83516001600160401b0380821115620003d457600080fd5b620003e287838801620002ef565b94506020860151915080821115620003f957600080fd5b506200040886828701620002ef565b604086015190935090506001600160a01b03811681146200042857600080fd5b809150509250925092565b600181811c908216806200044857607f821691505b602082108114156200046a57634e487b7160e01b600052602260045260246000fd5b50919050565b610edc80620004806000396000f3fe6080604052600436106101125760003560e01c80635300f82b116100a557806395d89b4111610074578063d0e30db011610059578063d0e30db014610326578063dd62ed3e1461032e578063f2fde38b1461036657600080fd5b806395d89b41146102f1578063a9059cbb1461030657600080fd5b80635300f82b1461024a57806370a082311461027a578063715018a6146102a75780638da5cb5b146102bc57600080fd5b806323b872dd116100e157806323b872dd146101be5780632e1a7d4d146101de578063313ce567146101fe57806340c10f191461022a57600080fd5b806306fdde0314610126578063095ea7b31461015157806318160ddd146101815780631c02bc311461019e57600080fd5b366101215761011f610386565b005b600080fd5b34801561013257600080fd5b5061013b6103e1565b6040516101489190610c69565b60405180910390f35b34801561015d57600080fd5b5061017161016c366004610d05565b61046f565b6040519015158152602001610148565b34801561018d57600080fd5b50475b604051908152602001610148565b3480156101aa57600080fd5b5061011f6101b9366004610d2f565b6104e8565b3480156101ca57600080fd5b506101716101d9366004610d51565b6105b8565b3480156101ea57600080fd5b5061011f6101f9366004610d8d565b6107cf565b34801561020a57600080fd5b506002546102189060ff1681565b60405160ff9091168152602001610148565b34801561023657600080fd5b50610171610245366004610d05565b610875565b34801561025657600080fd5b5060055474010000000000000000000000000000000000000000900460ff16610171565b34801561028657600080fd5b50610190610295366004610da6565b60036020526000908152604090205481565b3480156102b357600080fd5b5061011f6109a6565b3480156102c857600080fd5b5060055460405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610148565b3480156102fd57600080fd5b5061013b610a96565b34801561031257600080fd5b50610171610321366004610d05565b610aa3565b61011f610386565b34801561033a57600080fd5b50610190610349366004610dc1565b600460209081526000928352604080842090915290825290205481565b34801561037257600080fd5b5061011f610381366004610da6565b610ab7565b33600090815260036020526040812080543492906103a5908490610e23565b909155505060405134815233907fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c9060200160405180910390a2565b600080546103ee90610e3b565b80601f016020809104026020016040519081016040528092919081815260200182805461041a90610e3b565b80156104675780601f1061043c57610100808354040283529160200191610467565b820191906000526020600020905b81548152906001019060200180831161044a57829003601f168201915b505050505081565b33600081815260046020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906104d79086815260200190565b60405180910390a350600192915050565b60055473ffffffffffffffffffffffffffffffffffffffff16331461056e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6005805491151574010000000000000000000000000000000000000000027fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff909216919091179055565b73ffffffffffffffffffffffffffffffffffffffff83166000908152600360205260408120548211156105ea57600080fd5b73ffffffffffffffffffffffffffffffffffffffff84163314801590610660575073ffffffffffffffffffffffffffffffffffffffff841660009081526004602090815260408083203384529091529020547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff14155b156106e85773ffffffffffffffffffffffffffffffffffffffff841660009081526004602090815260408083203384529091529020548211156106a257600080fd5b73ffffffffffffffffffffffffffffffffffffffff84166000908152600460209081526040808320338452909152812080548492906106e2908490610e8f565b90915550505b73ffffffffffffffffffffffffffffffffffffffff84166000908152600360205260408120805484929061071d908490610e8f565b909155505073ffffffffffffffffffffffffffffffffffffffff831660009081526003602052604081208054849290610757908490610e23565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516107bd91815260200190565b60405180910390a35060019392505050565b336000908152600360205260409020548111156107eb57600080fd5b336000908152600360205260408120805483929061080a908490610e8f565b9091555050604051339082156108fc029083906000818181858888f1935050505015801561083c573d6000803e3d6000fd5b5060405181815233907f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b659060200160405180910390a250565b60055460009074010000000000000000000000000000000000000000900460ff161515600114156109215760055473ffffffffffffffffffffffffffffffffffffffff163314610921576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610565565b73ffffffffffffffffffffffffffffffffffffffff831660009081526003602052604081208054849290610956908490610e23565b909155505060405182815273ffffffffffffffffffffffffffffffffffffffff8416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020016104d7565b60055473ffffffffffffffffffffffffffffffffffffffff163314610a27576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610565565b60055460405160009173ffffffffffffffffffffffffffffffffffffffff16907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600580547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b600180546103ee90610e3b565b6000610ab03384846105b8565b9392505050565b60055473ffffffffffffffffffffffffffffffffffffffff163314610b38576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610565565b73ffffffffffffffffffffffffffffffffffffffff8116610bdb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610565565b60055460405173ffffffffffffffffffffffffffffffffffffffff8084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600580547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b600060208083528351808285015260005b81811015610c9657858101830151858201604001528201610c7a565b81811115610ca8576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610d0057600080fd5b919050565b60008060408385031215610d1857600080fd5b610d2183610cdc565b946020939093013593505050565b600060208284031215610d4157600080fd5b81358015158114610ab057600080fd5b600080600060608486031215610d6657600080fd5b610d6f84610cdc565b9250610d7d60208501610cdc565b9150604084013590509250925092565b600060208284031215610d9f57600080fd5b5035919050565b600060208284031215610db857600080fd5b610ab082610cdc565b60008060408385031215610dd457600080fd5b610ddd83610cdc565b9150610deb60208401610cdc565b90509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008219821115610e3657610e36610df4565b500190565b600181811c90821680610e4f57607f821691505b60208210811415610e89577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b600082821015610ea157610ea1610df4565b50039056fea26469706673582212201b95fd02a551bd725b4bcc600ca1083bac15a2b3e9d6bee1a29df6a38a8c38ea64736f6c634300080a00338be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","opcodes":"PUSH1 0xC0 PUSH1 0x40 MSTORE PUSH1 0xD PUSH1 0x80 DUP2 SWAP1 MSTORE PUSH13 0x2BB930B83832B21022BA3432B9 PUSH1 0x99 SHL PUSH1 0xA0 SWAP1 DUP2 MSTORE PUSH3 0x30 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH3 0x233 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x4 DUP1 DUP3 MSTORE PUSH4 0xAE8AA89 PUSH1 0xE3 SHL PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 DUP3 MSTORE PUSH3 0x5E SWAP2 PUSH1 0x1 SWAP2 PUSH3 0x233 JUMP JUMPDEST POP PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x12 OR SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x137C CODESIZE SUB DUP1 PUSH3 0x137C DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x9C SWAP2 PUSH3 0x3A6 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x135C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP3 SWAP1 LOG3 POP DUP3 MLOAD PUSH3 0xE3 SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x20 DUP7 ADD SWAP1 PUSH3 0x233 JUMP JUMPDEST POP DUP2 MLOAD PUSH3 0xF9 SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x233 JUMP JUMPDEST POP PUSH3 0x105 DUP2 PUSH3 0x121 JUMP JUMPDEST POP POP PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE POP PUSH3 0x470 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH3 0x181 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0x1E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x178 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x135C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x241 SWAP1 PUSH3 0x433 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x265 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x2B0 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x280 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x2B0 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x2B0 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x2B0 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x293 JUMP JUMPDEST POP PUSH3 0x2BE SWAP3 SWAP2 POP PUSH3 0x2C2 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x2BE JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x2C3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x301 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x31E JUMPI PUSH3 0x31E PUSH3 0x2D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x349 JUMPI PUSH3 0x349 PUSH3 0x2D9 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x366 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x38A JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x36B JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x39C JUMPI PUSH1 0x0 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x3BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x3D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x3E2 DUP8 DUP4 DUP9 ADD PUSH3 0x2EF JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x3F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x408 DUP7 DUP3 DUP8 ADD PUSH3 0x2EF JUMP JUMPDEST PUSH1 0x40 DUP7 ADD MLOAD SWAP1 SWAP4 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x428 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x448 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x46A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEDC DUP1 PUSH3 0x480 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x112 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5300F82B GT PUSH2 0xA5 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x74 JUMPI DUP1 PUSH4 0xD0E30DB0 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x326 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x32E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x366 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2F1 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x306 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5300F82B EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x27A JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xE1 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1BE JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x22A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0x1C02BC31 EQ PUSH2 0x19E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x121 JUMPI PUSH2 0x11F PUSH2 0x386 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x132 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13B PUSH2 0x3E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x148 SWAP2 SWAP1 PUSH2 0xC69 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x171 PUSH2 0x16C CALLDATASIZE PUSH1 0x4 PUSH2 0xD05 JUMP JUMPDEST PUSH2 0x46F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x148 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SELFBALANCE JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x148 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11F PUSH2 0x1B9 CALLDATASIZE PUSH1 0x4 PUSH2 0xD2F JUMP JUMPDEST PUSH2 0x4E8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x171 PUSH2 0x1D9 CALLDATASIZE PUSH1 0x4 PUSH2 0xD51 JUMP JUMPDEST PUSH2 0x5B8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11F PUSH2 0x1F9 CALLDATASIZE PUSH1 0x4 PUSH2 0xD8D JUMP JUMPDEST PUSH2 0x7CF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x218 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x148 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x236 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x171 PUSH2 0x245 CALLDATASIZE PUSH1 0x4 PUSH2 0xD05 JUMP JUMPDEST PUSH2 0x875 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x256 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x171 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x286 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x190 PUSH2 0x295 CALLDATASIZE PUSH1 0x4 PUSH2 0xDA6 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11F PUSH2 0x9A6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x148 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13B PUSH2 0xA96 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x312 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x171 PUSH2 0x321 CALLDATASIZE PUSH1 0x4 PUSH2 0xD05 JUMP JUMPDEST PUSH2 0xAA3 JUMP JUMPDEST PUSH2 0x11F PUSH2 0x386 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x190 PUSH2 0x349 CALLDATASIZE PUSH1 0x4 PUSH2 0xDC1 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x372 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11F PUSH2 0x381 CALLDATASIZE PUSH1 0x4 PUSH2 0xDA6 JUMP JUMPDEST PUSH2 0xAB7 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD CALLVALUE SWAP3 SWAP1 PUSH2 0x3A5 SWAP1 DUP5 SWAP1 PUSH2 0xE23 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD CALLVALUE DUP2 MSTORE CALLER SWAP1 PUSH32 0xE1FFFCC4923D04B559F4D29A8BFC6CDA04EB5B0D3C460751C2402C5C5CC9109C SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x3EE SWAP1 PUSH2 0xE3B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x41A SWAP1 PUSH2 0xE3B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x467 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x43C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x467 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x44A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE MLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0x4D7 SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x56E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH21 0x10000000000000000000000000000000000000000 MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x5EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0x660 JUMPI POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF EQ ISZERO JUMPDEST ISZERO PUSH2 0x6E8 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x6A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6E2 SWAP1 DUP5 SWAP1 PUSH2 0xE8F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x71D SWAP1 DUP5 SWAP1 PUSH2 0xE8F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x757 SWAP1 DUP5 SWAP1 PUSH2 0xE23 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x7BD SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x7EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x80A SWAP1 DUP5 SWAP1 PUSH2 0xE8F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD CALLER SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x83C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0x7FCF532C15F0A6DB0BD6D0E038BEA71D30D808C7D98CB3BF7268A95BF5081B65 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 SWAP1 PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ ISZERO PUSH2 0x921 JUMPI PUSH1 0x5 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x921 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x565 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x956 SWAP1 DUP5 SWAP1 PUSH2 0xE23 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH2 0x4D7 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0xA27 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x565 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x5 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x3EE SWAP1 PUSH2 0xE3B JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAB0 CALLER DUP5 DUP5 PUSH2 0x5B8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0xB38 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x565 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0xBDB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x565 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND SWAP3 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x5 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC96 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xC7A JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xCA8 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xD00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD21 DUP4 PUSH2 0xCDC JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xAB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xD66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD6F DUP5 PUSH2 0xCDC JUMP JUMPDEST SWAP3 POP PUSH2 0xD7D PUSH1 0x20 DUP6 ADD PUSH2 0xCDC JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAB0 DUP3 PUSH2 0xCDC JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDD4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDDD DUP4 PUSH2 0xCDC JUMP JUMPDEST SWAP2 POP PUSH2 0xDEB PUSH1 0x20 DUP5 ADD PUSH2 0xCDC JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xE36 JUMPI PUSH2 0xE36 PUSH2 0xDF4 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xE4F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xE89 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xEA1 JUMPI PUSH2 0xEA1 PUSH2 0xDF4 JUMP JUMPDEST POP SUB SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHL SWAP6 REVERT MUL 0xA5 MLOAD 0xBD PUSH19 0x5B4BCC600CA1083BAC15A2B3E9D6BEE1A29DF6 LOG3 DUP11 DUP13 CODESIZE 0xEA PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER DUP12 0xE0 SMOD SWAP13 MSTORE8 AND MSIZE EQ SGT DIFFICULTY 0xCD 0x1F 0xD0 LOG4 CALLCODE DUP5 NOT 0x49 PUSH32 0x9722A3DAAFE3B4186F6B6457E000000000000000000000000000000000000000 ","sourceMap":"731:36:6:-:0;235:885:8;731:36:6;;235:885:8;731:36:6;;;-1:-1:-1;;;731:36:6;;;;;;-1:-1:-1;;731:36:6;;:::i;:::-;-1:-1:-1;771:29:6;;;;;;;;;;;;;-1:-1:-1;;;771:29:6;;;;;;;;;;;;:::i;:::-;-1:-1:-1;804:26:6;;;-1:-1:-1;;804:26:6;828:2;804:26;;;575:182:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;873:6:4;:18;;-1:-1:-1;;;;;;873:18:4;678:10:1;873:18:4;;;;;;902:43;;678:10:1;;835:17:4;;-1:-1:-1;;;;;;;;;;;902:43:4;835:17;;902:43;-1:-1:-1;658:15:8;;;;:4;;:15;;;;;:::i;:::-;-1:-1:-1;679:19:8;;;;:6;;:19;;;;;:::i;:::-;-1:-1:-1;705:24:8;723:5;705:17;:24::i;:::-;-1:-1:-1;;735:10:8;:17;;-1:-1:-1;;;;735:17:8;-1:-1:-1;;;735:17:8;;;-1:-1:-1;235:885:8;;1875:226:4;1204:6;;-1:-1:-1;;;;;1204:6:4;678:10:1;1204:22:4;1196:67;;;;-1:-1:-1;;;1196:67:4;;1972:2:12;1196:67:4;;;1954:21:12;;;1991:18;;;1984:30;2050:34;2030:18;;;2023:62;2102:18;;1196:67:4;;;;;;;;;-1:-1:-1;;;;;1959:22:4;::::1;1951:73;;;::::0;-1:-1:-1;;;1951:73:4;;2333:2:12;1951:73:4::1;::::0;::::1;2315:21:12::0;2372:2;2352:18;;;2345:30;2411:34;2391:18;;;2384:62;-1:-1:-1;;;2462:18:12;;;2455:36;2508:19;;1951:73:4::1;2131:402:12::0;1951:73:4::1;2056:6;::::0;2035:38:::1;::::0;-1:-1:-1;;;;;2035:38:4;;::::1;::::0;2056:6:::1;::::0;-1:-1:-1;;;;;;;;;;;2035:38:4;2056:6:::1;::::0;2035:38:::1;2079:6;:17:::0;;-1:-1:-1;;;;;;2079:17:4::1;-1:-1:-1::0;;;;;2079:17:4;;;::::1;::::0;;;::::1;::::0;;1875:226::o;235:885:8:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;235:885:8;;;-1:-1:-1;235:885:8;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:12;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:12;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:12;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:12:o;1036:729::-;1144:6;1152;1160;1213:2;1201:9;1192:7;1188:23;1184:32;1181:52;;;1229:1;1226;1219:12;1181:52;1256:16;;-1:-1:-1;;;;;1321:14:12;;;1318:34;;;1348:1;1345;1338:12;1318:34;1371:61;1424:7;1415:6;1404:9;1400:22;1371:61;:::i;:::-;1361:71;;1478:2;1467:9;1463:18;1457:25;1441:41;;1507:2;1497:8;1494:16;1491:36;;;1523:1;1520;1513:12;1491:36;;1546:63;1601:7;1590:8;1579:9;1575:24;1546:63;:::i;:::-;1652:2;1637:18;;1631:25;1536:73;;-1:-1:-1;1631:25:12;-1:-1:-1;;;;;;1685:31:12;;1675:42;;1665:70;;1731:1;1728;1721:12;1665:70;1754:5;1744:15;;;1036:729;;;;;:::o;2538:380::-;2617:1;2613:12;;;;2660;;;2681:61;;2735:4;2727:6;2723:17;2713:27;;2681:61;2788:2;2780:6;2777:14;2757:18;2754:38;2751:161;;;2834:10;2829:3;2825:20;2822:1;2815:31;2869:4;2866:1;2859:15;2897:4;2894:1;2887:15;2751:161;;2538:380;;;:::o;:::-;235:885:8;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_1192":{"entryPoint":null,"id":1192,"parameterSlots":0,"returnSlots":0},"@_msgSender_310":{"entryPoint":null,"id":310,"parameterSlots":0,"returnSlots":1},"@allowance_1185":{"entryPoint":null,"id":1185,"parameterSlots":0,"returnSlots":0},"@approve_1288":{"entryPoint":1135,"id":1288,"parameterSlots":2,"returnSlots":1},"@balanceOf_1179":{"entryPoint":null,"id":1179,"parameterSlots":0,"returnSlots":0},"@decimals_1147":{"entryPoint":null,"id":1147,"parameterSlots":0,"returnSlots":0},"@deposit_1211":{"entryPoint":902,"id":1211,"parameterSlots":0,"returnSlots":0},"@isProtected_1517":{"entryPoint":null,"id":1517,"parameterSlots":0,"returnSlots":1},"@mint_1497":{"entryPoint":2165,"id":1497,"parameterSlots":2,"returnSlots":1},"@name_1141":{"entryPoint":993,"id":1141,"parameterSlots":0,"returnSlots":0},"@owner_952":{"entryPoint":null,"id":952,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_987":{"entryPoint":2470,"id":987,"parameterSlots":0,"returnSlots":0},"@setProtected_1509":{"entryPoint":1256,"id":1509,"parameterSlots":1,"returnSlots":0},"@symbol_1144":{"entryPoint":2710,"id":1144,"parameterSlots":0,"returnSlots":0},"@totalSupply_1260":{"entryPoint":null,"id":1260,"parameterSlots":0,"returnSlots":1},"@transferFrom_1384":{"entryPoint":1464,"id":1384,"parameterSlots":3,"returnSlots":1},"@transferOwnership_1015":{"entryPoint":2743,"id":1015,"parameterSlots":1,"returnSlots":0},"@transfer_1305":{"entryPoint":2723,"id":1305,"parameterSlots":2,"returnSlots":1},"@withdraw_1248":{"entryPoint":1999,"id":1248,"parameterSlots":1,"returnSlots":0},"abi_decode_address":{"entryPoint":3292,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3494,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":3521,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":3409,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":3333,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bool":{"entryPoint":3375,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":3469,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3177,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":3619,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":3727,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":3643,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":3572,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4840:12","statements":[{"nodeType":"YulBlock","src":"6:3:12","statements":[]},{"body":{"nodeType":"YulBlock","src":"135:535:12","statements":[{"nodeType":"YulVariableDeclaration","src":"145:12:12","value":{"kind":"number","nodeType":"YulLiteral","src":"155:2:12","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"149:2:12","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"173:9:12"},{"name":"_1","nodeType":"YulIdentifier","src":"184:2:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"166:6:12"},"nodeType":"YulFunctionCall","src":"166:21:12"},"nodeType":"YulExpressionStatement","src":"166:21:12"},{"nodeType":"YulVariableDeclaration","src":"196:27:12","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"216:6:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"210:5:12"},"nodeType":"YulFunctionCall","src":"210:13:12"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"200:6:12","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"243:9:12"},{"name":"_1","nodeType":"YulIdentifier","src":"254:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"239:3:12"},"nodeType":"YulFunctionCall","src":"239:18:12"},{"name":"length","nodeType":"YulIdentifier","src":"259:6:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"232:6:12"},"nodeType":"YulFunctionCall","src":"232:34:12"},"nodeType":"YulExpressionStatement","src":"232:34:12"},{"nodeType":"YulVariableDeclaration","src":"275:10:12","value":{"kind":"number","nodeType":"YulLiteral","src":"284:1:12","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"279:1:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"344:90:12","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"373:9:12"},{"name":"i","nodeType":"YulIdentifier","src":"384:1:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"369:3:12"},"nodeType":"YulFunctionCall","src":"369:17:12"},{"kind":"number","nodeType":"YulLiteral","src":"388:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"365:3:12"},"nodeType":"YulFunctionCall","src":"365:26:12"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"407:6:12"},{"name":"i","nodeType":"YulIdentifier","src":"415:1:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"403:3:12"},"nodeType":"YulFunctionCall","src":"403:14:12"},{"name":"_1","nodeType":"YulIdentifier","src":"419:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"399:3:12"},"nodeType":"YulFunctionCall","src":"399:23:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"393:5:12"},"nodeType":"YulFunctionCall","src":"393:30:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"358:6:12"},"nodeType":"YulFunctionCall","src":"358:66:12"},"nodeType":"YulExpressionStatement","src":"358:66:12"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"305:1:12"},{"name":"length","nodeType":"YulIdentifier","src":"308:6:12"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"302:2:12"},"nodeType":"YulFunctionCall","src":"302:13:12"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"316:19:12","statements":[{"nodeType":"YulAssignment","src":"318:15:12","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"327:1:12"},{"name":"_1","nodeType":"YulIdentifier","src":"330:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"323:3:12"},"nodeType":"YulFunctionCall","src":"323:10:12"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"318:1:12"}]}]},"pre":{"nodeType":"YulBlock","src":"298:3:12","statements":[]},"src":"294:140:12"},{"body":{"nodeType":"YulBlock","src":"468:66:12","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"497:9:12"},{"name":"length","nodeType":"YulIdentifier","src":"508:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"493:3:12"},"nodeType":"YulFunctionCall","src":"493:22:12"},{"kind":"number","nodeType":"YulLiteral","src":"517:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"489:3:12"},"nodeType":"YulFunctionCall","src":"489:31:12"},{"kind":"number","nodeType":"YulLiteral","src":"522:1:12","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"482:6:12"},"nodeType":"YulFunctionCall","src":"482:42:12"},"nodeType":"YulExpressionStatement","src":"482:42:12"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"449:1:12"},{"name":"length","nodeType":"YulIdentifier","src":"452:6:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"446:2:12"},"nodeType":"YulFunctionCall","src":"446:13:12"},"nodeType":"YulIf","src":"443:91:12"},{"nodeType":"YulAssignment","src":"543:121:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"559:9:12"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"578:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"586:2:12","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"574:3:12"},"nodeType":"YulFunctionCall","src":"574:15:12"},{"kind":"number","nodeType":"YulLiteral","src":"591:66:12","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"570:3:12"},"nodeType":"YulFunctionCall","src":"570:88:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"555:3:12"},"nodeType":"YulFunctionCall","src":"555:104:12"},{"kind":"number","nodeType":"YulLiteral","src":"661:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"551:3:12"},"nodeType":"YulFunctionCall","src":"551:113:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"543:4:12"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"104:9:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"115:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"126:4:12","type":""}],"src":"14:656:12"},{"body":{"nodeType":"YulBlock","src":"724:147:12","statements":[{"nodeType":"YulAssignment","src":"734:29:12","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"756:6:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"743:12:12"},"nodeType":"YulFunctionCall","src":"743:20:12"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"734:5:12"}]},{"body":{"nodeType":"YulBlock","src":"849:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"858:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"861:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"851:6:12"},"nodeType":"YulFunctionCall","src":"851:12:12"},"nodeType":"YulExpressionStatement","src":"851:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"785:5:12"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"796:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"803:42:12","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"792:3:12"},"nodeType":"YulFunctionCall","src":"792:54:12"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"782:2:12"},"nodeType":"YulFunctionCall","src":"782:65:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"775:6:12"},"nodeType":"YulFunctionCall","src":"775:73:12"},"nodeType":"YulIf","src":"772:93:12"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"703:6:12","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"714:5:12","type":""}],"src":"675:196:12"},{"body":{"nodeType":"YulBlock","src":"963:167:12","statements":[{"body":{"nodeType":"YulBlock","src":"1009:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1018:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1021:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1011:6:12"},"nodeType":"YulFunctionCall","src":"1011:12:12"},"nodeType":"YulExpressionStatement","src":"1011:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"984:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"993:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"980:3:12"},"nodeType":"YulFunctionCall","src":"980:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"1005:2:12","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"976:3:12"},"nodeType":"YulFunctionCall","src":"976:32:12"},"nodeType":"YulIf","src":"973:52:12"},{"nodeType":"YulAssignment","src":"1034:39:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1063:9:12"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1044:18:12"},"nodeType":"YulFunctionCall","src":"1044:29:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1034:6:12"}]},{"nodeType":"YulAssignment","src":"1082:42:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1109:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"1120:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1105:3:12"},"nodeType":"YulFunctionCall","src":"1105:18:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1092:12:12"},"nodeType":"YulFunctionCall","src":"1092:32:12"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1082:6:12"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"921:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"932:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"944:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"952:6:12","type":""}],"src":"876:254:12"},{"body":{"nodeType":"YulBlock","src":"1230:92:12","statements":[{"nodeType":"YulAssignment","src":"1240:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1252:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"1263:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1248:3:12"},"nodeType":"YulFunctionCall","src":"1248:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1240:4:12"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1282:9:12"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1307:6:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1300:6:12"},"nodeType":"YulFunctionCall","src":"1300:14:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1293:6:12"},"nodeType":"YulFunctionCall","src":"1293:22:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1275:6:12"},"nodeType":"YulFunctionCall","src":"1275:41:12"},"nodeType":"YulExpressionStatement","src":"1275:41:12"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1199:9:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1210:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1221:4:12","type":""}],"src":"1135:187:12"},{"body":{"nodeType":"YulBlock","src":"1428:76:12","statements":[{"nodeType":"YulAssignment","src":"1438:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1450:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"1461:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1446:3:12"},"nodeType":"YulFunctionCall","src":"1446:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1438:4:12"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1480:9:12"},{"name":"value0","nodeType":"YulIdentifier","src":"1491:6:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1473:6:12"},"nodeType":"YulFunctionCall","src":"1473:25:12"},"nodeType":"YulExpressionStatement","src":"1473:25:12"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1397:9:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1408:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1419:4:12","type":""}],"src":"1327:177:12"},{"body":{"nodeType":"YulBlock","src":"1576:206:12","statements":[{"body":{"nodeType":"YulBlock","src":"1622:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1631:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1634:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1624:6:12"},"nodeType":"YulFunctionCall","src":"1624:12:12"},"nodeType":"YulExpressionStatement","src":"1624:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1597:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"1606:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1593:3:12"},"nodeType":"YulFunctionCall","src":"1593:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"1618:2:12","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1589:3:12"},"nodeType":"YulFunctionCall","src":"1589:32:12"},"nodeType":"YulIf","src":"1586:52:12"},{"nodeType":"YulVariableDeclaration","src":"1647:36:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1673:9:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1660:12:12"},"nodeType":"YulFunctionCall","src":"1660:23:12"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1651:5:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"1736:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1745:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1748:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1738:6:12"},"nodeType":"YulFunctionCall","src":"1738:12:12"},"nodeType":"YulExpressionStatement","src":"1738:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1705:5:12"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1726:5:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1719:6:12"},"nodeType":"YulFunctionCall","src":"1719:13:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1712:6:12"},"nodeType":"YulFunctionCall","src":"1712:21:12"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1702:2:12"},"nodeType":"YulFunctionCall","src":"1702:32:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1695:6:12"},"nodeType":"YulFunctionCall","src":"1695:40:12"},"nodeType":"YulIf","src":"1692:60:12"},{"nodeType":"YulAssignment","src":"1761:15:12","value":{"name":"value","nodeType":"YulIdentifier","src":"1771:5:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1761:6:12"}]}]},"name":"abi_decode_tuple_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1542:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1553:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1565:6:12","type":""}],"src":"1509:273:12"},{"body":{"nodeType":"YulBlock","src":"1891:224:12","statements":[{"body":{"nodeType":"YulBlock","src":"1937:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1946:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1949:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1939:6:12"},"nodeType":"YulFunctionCall","src":"1939:12:12"},"nodeType":"YulExpressionStatement","src":"1939:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1912:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"1921:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1908:3:12"},"nodeType":"YulFunctionCall","src":"1908:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"1933:2:12","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1904:3:12"},"nodeType":"YulFunctionCall","src":"1904:32:12"},"nodeType":"YulIf","src":"1901:52:12"},{"nodeType":"YulAssignment","src":"1962:39:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1991:9:12"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1972:18:12"},"nodeType":"YulFunctionCall","src":"1972:29:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1962:6:12"}]},{"nodeType":"YulAssignment","src":"2010:48:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2043:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"2054:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2039:3:12"},"nodeType":"YulFunctionCall","src":"2039:18:12"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2020:18:12"},"nodeType":"YulFunctionCall","src":"2020:38:12"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2010:6:12"}]},{"nodeType":"YulAssignment","src":"2067:42:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2094:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"2105:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2090:3:12"},"nodeType":"YulFunctionCall","src":"2090:18:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2077:12:12"},"nodeType":"YulFunctionCall","src":"2077:32:12"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2067:6:12"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1841:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1852:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1864:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1872:6:12","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1880:6:12","type":""}],"src":"1787:328:12"},{"body":{"nodeType":"YulBlock","src":"2190:110:12","statements":[{"body":{"nodeType":"YulBlock","src":"2236:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2245:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2248:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2238:6:12"},"nodeType":"YulFunctionCall","src":"2238:12:12"},"nodeType":"YulExpressionStatement","src":"2238:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2211:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"2220:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2207:3:12"},"nodeType":"YulFunctionCall","src":"2207:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"2232:2:12","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2203:3:12"},"nodeType":"YulFunctionCall","src":"2203:32:12"},"nodeType":"YulIf","src":"2200:52:12"},{"nodeType":"YulAssignment","src":"2261:33:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2284:9:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2271:12:12"},"nodeType":"YulFunctionCall","src":"2271:23:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2261:6:12"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2156:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2167:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2179:6:12","type":""}],"src":"2120:180:12"},{"body":{"nodeType":"YulBlock","src":"2402:87:12","statements":[{"nodeType":"YulAssignment","src":"2412:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2424:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"2435:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2420:3:12"},"nodeType":"YulFunctionCall","src":"2420:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2412:4:12"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2454:9:12"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2469:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"2477:4:12","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2465:3:12"},"nodeType":"YulFunctionCall","src":"2465:17:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2447:6:12"},"nodeType":"YulFunctionCall","src":"2447:36:12"},"nodeType":"YulExpressionStatement","src":"2447:36:12"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2371:9:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2382:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2393:4:12","type":""}],"src":"2305:184:12"},{"body":{"nodeType":"YulBlock","src":"2564:116:12","statements":[{"body":{"nodeType":"YulBlock","src":"2610:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2619:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2622:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2612:6:12"},"nodeType":"YulFunctionCall","src":"2612:12:12"},"nodeType":"YulExpressionStatement","src":"2612:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2585:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"2594:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2581:3:12"},"nodeType":"YulFunctionCall","src":"2581:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"2606:2:12","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2577:3:12"},"nodeType":"YulFunctionCall","src":"2577:32:12"},"nodeType":"YulIf","src":"2574:52:12"},{"nodeType":"YulAssignment","src":"2635:39:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2664:9:12"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2645:18:12"},"nodeType":"YulFunctionCall","src":"2645:29:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2635:6:12"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2530:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2541:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2553:6:12","type":""}],"src":"2494:186:12"},{"body":{"nodeType":"YulBlock","src":"2786:125:12","statements":[{"nodeType":"YulAssignment","src":"2796:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2808:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"2819:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2804:3:12"},"nodeType":"YulFunctionCall","src":"2804:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2796:4:12"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2838:9:12"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2853:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"2861:42:12","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2849:3:12"},"nodeType":"YulFunctionCall","src":"2849:55:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2831:6:12"},"nodeType":"YulFunctionCall","src":"2831:74:12"},"nodeType":"YulExpressionStatement","src":"2831:74:12"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2755:9:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2766:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2777:4:12","type":""}],"src":"2685:226:12"},{"body":{"nodeType":"YulBlock","src":"3003:173:12","statements":[{"body":{"nodeType":"YulBlock","src":"3049:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3058:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3061:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3051:6:12"},"nodeType":"YulFunctionCall","src":"3051:12:12"},"nodeType":"YulExpressionStatement","src":"3051:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3024:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"3033:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3020:3:12"},"nodeType":"YulFunctionCall","src":"3020:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"3045:2:12","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3016:3:12"},"nodeType":"YulFunctionCall","src":"3016:32:12"},"nodeType":"YulIf","src":"3013:52:12"},{"nodeType":"YulAssignment","src":"3074:39:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3103:9:12"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"3084:18:12"},"nodeType":"YulFunctionCall","src":"3084:29:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3074:6:12"}]},{"nodeType":"YulAssignment","src":"3122:48:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3155:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"3166:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3151:3:12"},"nodeType":"YulFunctionCall","src":"3151:18:12"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"3132:18:12"},"nodeType":"YulFunctionCall","src":"3132:38:12"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3122:6:12"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2961:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2972:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2984:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2992:6:12","type":""}],"src":"2916:260:12"},{"body":{"nodeType":"YulBlock","src":"3213:152:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3230:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3233:77:12","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3223:6:12"},"nodeType":"YulFunctionCall","src":"3223:88:12"},"nodeType":"YulExpressionStatement","src":"3223:88:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3327:1:12","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3330:4:12","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3320:6:12"},"nodeType":"YulFunctionCall","src":"3320:15:12"},"nodeType":"YulExpressionStatement","src":"3320:15:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3351:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3354:4:12","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3344:6:12"},"nodeType":"YulFunctionCall","src":"3344:15:12"},"nodeType":"YulExpressionStatement","src":"3344:15:12"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"3181:184:12"},{"body":{"nodeType":"YulBlock","src":"3418:80:12","statements":[{"body":{"nodeType":"YulBlock","src":"3445:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"3447:16:12"},"nodeType":"YulFunctionCall","src":"3447:18:12"},"nodeType":"YulExpressionStatement","src":"3447:18:12"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3434:1:12"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"3441:1:12"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3437:3:12"},"nodeType":"YulFunctionCall","src":"3437:6:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3431:2:12"},"nodeType":"YulFunctionCall","src":"3431:13:12"},"nodeType":"YulIf","src":"3428:39:12"},{"nodeType":"YulAssignment","src":"3476:16:12","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3487:1:12"},{"name":"y","nodeType":"YulIdentifier","src":"3490:1:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3483:3:12"},"nodeType":"YulFunctionCall","src":"3483:9:12"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"3476:3:12"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"3401:1:12","type":""},{"name":"y","nodeType":"YulTypedName","src":"3404:1:12","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"3410:3:12","type":""}],"src":"3370:128:12"},{"body":{"nodeType":"YulBlock","src":"3558:382:12","statements":[{"nodeType":"YulAssignment","src":"3568:22:12","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3582:1:12","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"3585:4:12"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3578:3:12"},"nodeType":"YulFunctionCall","src":"3578:12:12"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3568:6:12"}]},{"nodeType":"YulVariableDeclaration","src":"3599:38:12","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3629:4:12"},{"kind":"number","nodeType":"YulLiteral","src":"3635:1:12","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3625:3:12"},"nodeType":"YulFunctionCall","src":"3625:12:12"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"3603:18:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"3676:31:12","statements":[{"nodeType":"YulAssignment","src":"3678:27:12","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3692:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"3700:4:12","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3688:3:12"},"nodeType":"YulFunctionCall","src":"3688:17:12"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3678:6:12"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3656:18:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3649:6:12"},"nodeType":"YulFunctionCall","src":"3649:26:12"},"nodeType":"YulIf","src":"3646:61:12"},{"body":{"nodeType":"YulBlock","src":"3766:168:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3787:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3790:77:12","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3780:6:12"},"nodeType":"YulFunctionCall","src":"3780:88:12"},"nodeType":"YulExpressionStatement","src":"3780:88:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3888:1:12","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3891:4:12","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3881:6:12"},"nodeType":"YulFunctionCall","src":"3881:15:12"},"nodeType":"YulExpressionStatement","src":"3881:15:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3916:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3919:4:12","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3909:6:12"},"nodeType":"YulFunctionCall","src":"3909:15:12"},"nodeType":"YulExpressionStatement","src":"3909:15:12"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3722:18:12"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3745:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"3753:2:12","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3742:2:12"},"nodeType":"YulFunctionCall","src":"3742:14:12"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3719:2:12"},"nodeType":"YulFunctionCall","src":"3719:38:12"},"nodeType":"YulIf","src":"3716:218:12"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3538:4:12","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3547:6:12","type":""}],"src":"3503:437:12"},{"body":{"nodeType":"YulBlock","src":"4119:182:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4136:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"4147:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4129:6:12"},"nodeType":"YulFunctionCall","src":"4129:21:12"},"nodeType":"YulExpressionStatement","src":"4129:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4170:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"4181:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4166:3:12"},"nodeType":"YulFunctionCall","src":"4166:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"4186:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4159:6:12"},"nodeType":"YulFunctionCall","src":"4159:30:12"},"nodeType":"YulExpressionStatement","src":"4159:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4209:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"4220:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4205:3:12"},"nodeType":"YulFunctionCall","src":"4205:18:12"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"4225:34:12","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4198:6:12"},"nodeType":"YulFunctionCall","src":"4198:62:12"},"nodeType":"YulExpressionStatement","src":"4198:62:12"},{"nodeType":"YulAssignment","src":"4269:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4281:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"4292:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4277:3:12"},"nodeType":"YulFunctionCall","src":"4277:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4269:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4096:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4110:4:12","type":""}],"src":"3945:356:12"},{"body":{"nodeType":"YulBlock","src":"4355:76:12","statements":[{"body":{"nodeType":"YulBlock","src":"4377:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"4379:16:12"},"nodeType":"YulFunctionCall","src":"4379:18:12"},"nodeType":"YulExpressionStatement","src":"4379:18:12"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4371:1:12"},{"name":"y","nodeType":"YulIdentifier","src":"4374:1:12"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4368:2:12"},"nodeType":"YulFunctionCall","src":"4368:8:12"},"nodeType":"YulIf","src":"4365:34:12"},{"nodeType":"YulAssignment","src":"4408:17:12","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4420:1:12"},{"name":"y","nodeType":"YulIdentifier","src":"4423:1:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4416:3:12"},"nodeType":"YulFunctionCall","src":"4416:9:12"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"4408:4:12"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"4337:1:12","type":""},{"name":"y","nodeType":"YulTypedName","src":"4340:1:12","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"4346:4:12","type":""}],"src":"4306:125:12"},{"body":{"nodeType":"YulBlock","src":"4610:228:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4627:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"4638:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4620:6:12"},"nodeType":"YulFunctionCall","src":"4620:21:12"},"nodeType":"YulExpressionStatement","src":"4620:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4661:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"4672:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4657:3:12"},"nodeType":"YulFunctionCall","src":"4657:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"4677:2:12","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4650:6:12"},"nodeType":"YulFunctionCall","src":"4650:30:12"},"nodeType":"YulExpressionStatement","src":"4650:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4700:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"4711:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4696:3:12"},"nodeType":"YulFunctionCall","src":"4696:18:12"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"4716:34:12","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4689:6:12"},"nodeType":"YulFunctionCall","src":"4689:62:12"},"nodeType":"YulExpressionStatement","src":"4689:62:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4771:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"4782:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4767:3:12"},"nodeType":"YulFunctionCall","src":"4767:18:12"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"4787:8:12","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4760:6:12"},"nodeType":"YulFunctionCall","src":"4760:36:12"},"nodeType":"YulExpressionStatement","src":"4760:36:12"},{"nodeType":"YulAssignment","src":"4805:27:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4817:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"4828:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4813:3:12"},"nodeType":"YulFunctionCall","src":"4813:19:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4805:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4587:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4601:4:12","type":""}],"src":"4436:402:12"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n}","id":12,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436106101125760003560e01c80635300f82b116100a557806395d89b4111610074578063d0e30db011610059578063d0e30db014610326578063dd62ed3e1461032e578063f2fde38b1461036657600080fd5b806395d89b41146102f1578063a9059cbb1461030657600080fd5b80635300f82b1461024a57806370a082311461027a578063715018a6146102a75780638da5cb5b146102bc57600080fd5b806323b872dd116100e157806323b872dd146101be5780632e1a7d4d146101de578063313ce567146101fe57806340c10f191461022a57600080fd5b806306fdde0314610126578063095ea7b31461015157806318160ddd146101815780631c02bc311461019e57600080fd5b366101215761011f610386565b005b600080fd5b34801561013257600080fd5b5061013b6103e1565b6040516101489190610c69565b60405180910390f35b34801561015d57600080fd5b5061017161016c366004610d05565b61046f565b6040519015158152602001610148565b34801561018d57600080fd5b50475b604051908152602001610148565b3480156101aa57600080fd5b5061011f6101b9366004610d2f565b6104e8565b3480156101ca57600080fd5b506101716101d9366004610d51565b6105b8565b3480156101ea57600080fd5b5061011f6101f9366004610d8d565b6107cf565b34801561020a57600080fd5b506002546102189060ff1681565b60405160ff9091168152602001610148565b34801561023657600080fd5b50610171610245366004610d05565b610875565b34801561025657600080fd5b5060055474010000000000000000000000000000000000000000900460ff16610171565b34801561028657600080fd5b50610190610295366004610da6565b60036020526000908152604090205481565b3480156102b357600080fd5b5061011f6109a6565b3480156102c857600080fd5b5060055460405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610148565b3480156102fd57600080fd5b5061013b610a96565b34801561031257600080fd5b50610171610321366004610d05565b610aa3565b61011f610386565b34801561033a57600080fd5b50610190610349366004610dc1565b600460209081526000928352604080842090915290825290205481565b34801561037257600080fd5b5061011f610381366004610da6565b610ab7565b33600090815260036020526040812080543492906103a5908490610e23565b909155505060405134815233907fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c9060200160405180910390a2565b600080546103ee90610e3b565b80601f016020809104026020016040519081016040528092919081815260200182805461041a90610e3b565b80156104675780601f1061043c57610100808354040283529160200191610467565b820191906000526020600020905b81548152906001019060200180831161044a57829003601f168201915b505050505081565b33600081815260046020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906104d79086815260200190565b60405180910390a350600192915050565b60055473ffffffffffffffffffffffffffffffffffffffff16331461056e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6005805491151574010000000000000000000000000000000000000000027fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff909216919091179055565b73ffffffffffffffffffffffffffffffffffffffff83166000908152600360205260408120548211156105ea57600080fd5b73ffffffffffffffffffffffffffffffffffffffff84163314801590610660575073ffffffffffffffffffffffffffffffffffffffff841660009081526004602090815260408083203384529091529020547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff14155b156106e85773ffffffffffffffffffffffffffffffffffffffff841660009081526004602090815260408083203384529091529020548211156106a257600080fd5b73ffffffffffffffffffffffffffffffffffffffff84166000908152600460209081526040808320338452909152812080548492906106e2908490610e8f565b90915550505b73ffffffffffffffffffffffffffffffffffffffff84166000908152600360205260408120805484929061071d908490610e8f565b909155505073ffffffffffffffffffffffffffffffffffffffff831660009081526003602052604081208054849290610757908490610e23565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516107bd91815260200190565b60405180910390a35060019392505050565b336000908152600360205260409020548111156107eb57600080fd5b336000908152600360205260408120805483929061080a908490610e8f565b9091555050604051339082156108fc029083906000818181858888f1935050505015801561083c573d6000803e3d6000fd5b5060405181815233907f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b659060200160405180910390a250565b60055460009074010000000000000000000000000000000000000000900460ff161515600114156109215760055473ffffffffffffffffffffffffffffffffffffffff163314610921576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610565565b73ffffffffffffffffffffffffffffffffffffffff831660009081526003602052604081208054849290610956908490610e23565b909155505060405182815273ffffffffffffffffffffffffffffffffffffffff8416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020016104d7565b60055473ffffffffffffffffffffffffffffffffffffffff163314610a27576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610565565b60055460405160009173ffffffffffffffffffffffffffffffffffffffff16907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600580547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b600180546103ee90610e3b565b6000610ab03384846105b8565b9392505050565b60055473ffffffffffffffffffffffffffffffffffffffff163314610b38576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610565565b73ffffffffffffffffffffffffffffffffffffffff8116610bdb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610565565b60055460405173ffffffffffffffffffffffffffffffffffffffff8084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600580547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b600060208083528351808285015260005b81811015610c9657858101830151858201604001528201610c7a565b81811115610ca8576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610d0057600080fd5b919050565b60008060408385031215610d1857600080fd5b610d2183610cdc565b946020939093013593505050565b600060208284031215610d4157600080fd5b81358015158114610ab057600080fd5b600080600060608486031215610d6657600080fd5b610d6f84610cdc565b9250610d7d60208501610cdc565b9150604084013590509250925092565b600060208284031215610d9f57600080fd5b5035919050565b600060208284031215610db857600080fd5b610ab082610cdc565b60008060408385031215610dd457600080fd5b610ddd83610cdc565b9150610deb60208401610cdc565b90509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008219821115610e3657610e36610df4565b500190565b600181811c90821680610e4f57607f821691505b60208210811415610e89577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b600082821015610ea157610ea1610df4565b50039056fea26469706673582212201b95fd02a551bd725b4bcc600ca1083bac15a2b3e9d6bee1a29df6a38a8c38ea64736f6c634300080a0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x112 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5300F82B GT PUSH2 0xA5 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x74 JUMPI DUP1 PUSH4 0xD0E30DB0 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x326 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x32E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x366 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2F1 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x306 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5300F82B EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x27A JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xE1 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1BE JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x22A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0x1C02BC31 EQ PUSH2 0x19E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x121 JUMPI PUSH2 0x11F PUSH2 0x386 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x132 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13B PUSH2 0x3E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x148 SWAP2 SWAP1 PUSH2 0xC69 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x171 PUSH2 0x16C CALLDATASIZE PUSH1 0x4 PUSH2 0xD05 JUMP JUMPDEST PUSH2 0x46F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x148 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SELFBALANCE JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x148 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11F PUSH2 0x1B9 CALLDATASIZE PUSH1 0x4 PUSH2 0xD2F JUMP JUMPDEST PUSH2 0x4E8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x171 PUSH2 0x1D9 CALLDATASIZE PUSH1 0x4 PUSH2 0xD51 JUMP JUMPDEST PUSH2 0x5B8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11F PUSH2 0x1F9 CALLDATASIZE PUSH1 0x4 PUSH2 0xD8D JUMP JUMPDEST PUSH2 0x7CF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x218 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x148 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x236 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x171 PUSH2 0x245 CALLDATASIZE PUSH1 0x4 PUSH2 0xD05 JUMP JUMPDEST PUSH2 0x875 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x256 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x171 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x286 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x190 PUSH2 0x295 CALLDATASIZE PUSH1 0x4 PUSH2 0xDA6 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11F PUSH2 0x9A6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x148 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13B PUSH2 0xA96 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x312 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x171 PUSH2 0x321 CALLDATASIZE PUSH1 0x4 PUSH2 0xD05 JUMP JUMPDEST PUSH2 0xAA3 JUMP JUMPDEST PUSH2 0x11F PUSH2 0x386 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x190 PUSH2 0x349 CALLDATASIZE PUSH1 0x4 PUSH2 0xDC1 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x372 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11F PUSH2 0x381 CALLDATASIZE PUSH1 0x4 PUSH2 0xDA6 JUMP JUMPDEST PUSH2 0xAB7 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD CALLVALUE SWAP3 SWAP1 PUSH2 0x3A5 SWAP1 DUP5 SWAP1 PUSH2 0xE23 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD CALLVALUE DUP2 MSTORE CALLER SWAP1 PUSH32 0xE1FFFCC4923D04B559F4D29A8BFC6CDA04EB5B0D3C460751C2402C5C5CC9109C SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x3EE SWAP1 PUSH2 0xE3B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x41A SWAP1 PUSH2 0xE3B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x467 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x43C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x467 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x44A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE MLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0x4D7 SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x56E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH21 0x10000000000000000000000000000000000000000 MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x5EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0x660 JUMPI POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF EQ ISZERO JUMPDEST ISZERO PUSH2 0x6E8 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x6A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6E2 SWAP1 DUP5 SWAP1 PUSH2 0xE8F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x71D SWAP1 DUP5 SWAP1 PUSH2 0xE8F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x757 SWAP1 DUP5 SWAP1 PUSH2 0xE23 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x7BD SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x7EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x80A SWAP1 DUP5 SWAP1 PUSH2 0xE8F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD CALLER SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x83C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0x7FCF532C15F0A6DB0BD6D0E038BEA71D30D808C7D98CB3BF7268A95BF5081B65 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 SWAP1 PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ ISZERO PUSH2 0x921 JUMPI PUSH1 0x5 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x921 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x565 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x956 SWAP1 DUP5 SWAP1 PUSH2 0xE23 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH2 0x4D7 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0xA27 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x565 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x5 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x3EE SWAP1 PUSH2 0xE3B JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAB0 CALLER DUP5 DUP5 PUSH2 0x5B8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0xB38 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x565 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0xBDB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x565 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND SWAP3 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x5 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC96 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xC7A JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xCA8 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xD00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD21 DUP4 PUSH2 0xCDC JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xAB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xD66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD6F DUP5 PUSH2 0xCDC JUMP JUMPDEST SWAP3 POP PUSH2 0xD7D PUSH1 0x20 DUP6 ADD PUSH2 0xCDC JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAB0 DUP3 PUSH2 0xCDC JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDD4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDDD DUP4 PUSH2 0xCDC JUMP JUMPDEST SWAP2 POP PUSH2 0xDEB PUSH1 0x20 DUP5 ADD PUSH2 0xCDC JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xE36 JUMPI PUSH2 0xE36 PUSH2 0xDF4 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xE4F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xE89 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xEA1 JUMPI PUSH2 0xEA1 PUSH2 0xDF4 JUMP JUMPDEST POP SUB SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHL SWAP6 REVERT MUL 0xA5 MLOAD 0xBD PUSH19 0x5B4BCC600CA1083BAC15A2B3E9D6BEE1A29DF6 LOG3 DUP11 DUP13 CODESIZE 0xEA PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ","sourceMap":"235:885:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1237:9:6;:7;:9::i;:::-;235:885:8;;;;;731:36:6;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1676:166;;;;;;;;;;-1:-1:-1;1676:166:6;;;;;:::i;:::-;;:::i;:::-;;;1300:14:12;;1293:22;1275:41;;1263:2;1248:18;1676:166:6;1135:187:12;1580:92:6;;;;;;;;;;-1:-1:-1;1646:21:6;1580:92;;;1473:25:12;;;1461:2;1446:18;1580:92:6;1327:177:12;956:80:8;;;;;;;;;;-1:-1:-1;956:80:8;;;;;:::i;:::-;;:::i;1968:410:6:-;;;;;;;;;;-1:-1:-1;1968:410:6;;;;;:::i;:::-;;:::i;1379:197::-;;;;;;;;;;-1:-1:-1;1379:197:6;;;;;:::i;:::-;;:::i;804:26::-;;;;;;;;;;-1:-1:-1;804:26:6;;;;;;;;;;;2477:4:12;2465:17;;;2447:36;;2435:2;2420:18;804:26:6;2305:184:12;761:191:8;;;;;;;;;;-1:-1:-1;761:191:8;;;;;:::i;:::-;;:::i;1040:78::-;;;;;;;;;;-1:-1:-1;1103:10:8;;;;;;;1040:78;;1087:44:6;;;;;;;;;;-1:-1:-1;1087:44:6;;;;;:::i;:::-;;;;;;;;;;;;;;1601:135:4;;;;;;;;;;;;;:::i;1018:71::-;;;;;;;;;;-1:-1:-1;1078:6:4;;1018:71;;1078:6;;;;2831:74:12;;2819:2;2804:18;1018:71:4;2685:226:12;771:29:6;;;;;;;;;;;;;:::i;1846:118::-;;;;;;;;;;-1:-1:-1;1846:118:6;;;;;:::i;:::-;;:::i;1255:120::-;;;:::i;1135:64::-;;;;;;;;;;-1:-1:-1;1135:64:6;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;1875:226:4;;;;;;;;;;-1:-1:-1;1875:226:4;;;;;:::i;:::-;;:::i;1255:120:6:-;1305:10;1295:21;;;;:9;:21;;;;;:34;;1320:9;;1295:21;:34;;1320:9;;1295:34;:::i;:::-;;;;-1:-1:-1;;1340:30:6;;1360:9;1473:25:12;;1348:10:6;;1340:30;;1461:2:12;1446:18;1340:30:6;;;;;;;1255:120::o;731:36::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1676:166::-;1757:10;1735:4;1747:21;;;:9;:21;;;;;;;;;:26;;;;;;;;;;:32;;;1790:30;1735:4;;1747:26;;1790:30;;;;1776:3;1473:25:12;;1461:2;1446:18;;1327:177;1790:30:6;;;;;;;;-1:-1:-1;1833:4:6;1676:166;;;;:::o;956:80:8:-;1204:6:4;;:22;:6;678:10:1;1204:22:4;1196:67;;;;;;;4147:2:12;1196:67:4;;;4129:21:12;;;4166:18;;;4159:30;4225:34;4205:18;;;4198:62;4277:18;;1196:67:4;;;;;;;;;1013:10:8::1;:18:::0;;;::::1;;::::0;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;956:80::o;1968:410:6:-;2065:14;;;2045:4;2065:14;;;:9;:14;;;;;;:21;-1:-1:-1;2065:21:6;2057:30;;;;;;2098:17;;;2105:10;2098:17;;;;:68;;-1:-1:-1;2119:14:6;;;;;;;:9;:14;;;;;;;;2134:10;2119:26;;;;;;;;2149:17;2119:47;;2098:68;2094:172;;;2184:14;;;;;;;:9;:14;;;;;;;;2199:10;2184:26;;;;;;;;:33;-1:-1:-1;2184:33:6;2176:42;;;;;;2226:14;;;;;;;:9;:14;;;;;;;;2241:10;2226:26;;;;;;;:33;;2256:3;;2226:14;:33;;2256:3;;2226:33;:::i;:::-;;;;-1:-1:-1;;2094:172:6;2272:14;;;;;;;:9;:14;;;;;:21;;2290:3;;2272:14;:21;;2290:3;;2272:21;:::i;:::-;;;;-1:-1:-1;;2299:14:6;;;;;;;:9;:14;;;;;:21;;2317:3;;2299:14;:21;;2317:3;;2299:21;:::i;:::-;;;;;;;;2346:3;2332:23;;2341:3;2332:23;;;2351:3;2332:23;;;;1473:25:12;;1461:2;1446:18;;1327:177;2332:23:6;;;;;;;;-1:-1:-1;2369:4:6;1968:410;;;;;:::o;1379:197::-;1441:10;1431:21;;;;:9;:21;;;;;;:28;-1:-1:-1;1431:28:6;1423:37;;;;;;1476:10;1466:21;;;;:9;:21;;;;;:28;;1491:3;;1466:21;:28;;1491:3;;1466:28;:::i;:::-;;;;-1:-1:-1;;1500:33:6;;1508:10;;1500:33;;;;;1529:3;;1500:33;;;;1529:3;1508:10;1500:33;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1544:27:6;;1473:25:12;;;1555:10:6;;1544:27;;1461:2:12;1446:18;1544:27:6;;;;;;;1379:197;:::o;761:191:8:-;457:10;;844:4;;457:10;;;;;:18;;471:4;457:18;453:107;;;1078:6:4;;493:23:8;1078:6:4;678:10:1;493:23:8;485:68;;;;;;;4147:2:12;485:68:8;;;4129:21:12;;;4166:18;;;4159:30;4225:34;4205:18;;;4198:62;4277:18;;485:68:8;3945:356:12;485:68:8;856:18:::1;::::0;::::1;;::::0;;;:9:::1;:18;::::0;;;;:27;;878:5;;856:18;:27:::1;::::0;878:5;;856:27:::1;:::i;:::-;::::0;;;-1:-1:-1;;894:36:8::1;::::0;1473:25:12;;;894:36:8::1;::::0;::::1;::::0;911:1:::1;::::0;894:36:::1;::::0;1461:2:12;1446:18;894:36:8::1;1327:177:12::0;1601:135:4;1204:6;;:22;:6;678:10:1;1204:22:4;1196:67;;;;;;;4147:2:12;1196:67:4;;;4129:21:12;;;4166:18;;;4159:30;4225:34;4205:18;;;4198:62;4277:18;;1196:67:4;3945:356:12;1196:67:4;1687:6:::1;::::0;1666:40:::1;::::0;1703:1:::1;::::0;1666:40:::1;1687:6;::::0;1666:40:::1;::::0;1703:1;;1666:40:::1;1712:6;:19:::0;;;::::1;::::0;;1601:135::o;771:29:6:-;;;;;;;:::i;1846:118::-;1906:4;1925:34;1938:10;1950:3;1955;1925:12;:34::i;:::-;1918:41;1846:118;-1:-1:-1;;;1846:118:6:o;1875:226:4:-;1204:6;;:22;:6;678:10:1;1204:22:4;1196:67;;;;;;;4147:2:12;1196:67:4;;;4129:21:12;;;4166:18;;;4159:30;4225:34;4205:18;;;4198:62;4277:18;;1196:67:4;3945:356:12;1196:67:4;1959:22:::1;::::0;::::1;1951:73;;;::::0;::::1;::::0;;4638:2:12;1951:73:4::1;::::0;::::1;4620:21:12::0;4677:2;4657:18;;;4650:30;4716:34;4696:18;;;4689:62;4787:8;4767:18;;;4760:36;4813:19;;1951:73:4::1;4436:402:12::0;1951:73:4::1;2056:6;::::0;2035:38:::1;::::0;::::1;::::0;;::::1;::::0;2056:6:::1;::::0;2035:38:::1;::::0;2056:6:::1;::::0;2035:38:::1;2079:6;:17:::0;;;::::1;;::::0;;;::::1;::::0;;;::::1;::::0;;1875:226::o;14:656:12:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;586:2:12;574:15;591:66;570:88;555:104;;;;661:2;551:113;;14:656;-1:-1:-1;;;14:656:12:o;675:196::-;743:20;;803:42;792:54;;782:65;;772:93;;861:1;858;851:12;772:93;675:196;;;:::o;876:254::-;944:6;952;1005:2;993:9;984:7;980:23;976:32;973:52;;;1021:1;1018;1011:12;973:52;1044:29;1063:9;1044:29;:::i;:::-;1034:39;1120:2;1105:18;;;;1092:32;;-1:-1:-1;;;876:254:12:o;1509:273::-;1565:6;1618:2;1606:9;1597:7;1593:23;1589:32;1586:52;;;1634:1;1631;1624:12;1586:52;1673:9;1660:23;1726:5;1719:13;1712:21;1705:5;1702:32;1692:60;;1748:1;1745;1738:12;1787:328;1864:6;1872;1880;1933:2;1921:9;1912:7;1908:23;1904:32;1901:52;;;1949:1;1946;1939:12;1901:52;1972:29;1991:9;1972:29;:::i;:::-;1962:39;;2020:38;2054:2;2043:9;2039:18;2020:38;:::i;:::-;2010:48;;2105:2;2094:9;2090:18;2077:32;2067:42;;1787:328;;;;;:::o;2120:180::-;2179:6;2232:2;2220:9;2211:7;2207:23;2203:32;2200:52;;;2248:1;2245;2238:12;2200:52;-1:-1:-1;2271:23:12;;2120:180;-1:-1:-1;2120:180:12:o;2494:186::-;2553:6;2606:2;2594:9;2585:7;2581:23;2577:32;2574:52;;;2622:1;2619;2612:12;2574:52;2645:29;2664:9;2645:29;:::i;2916:260::-;2984:6;2992;3045:2;3033:9;3024:7;3020:23;3016:32;3013:52;;;3061:1;3058;3051:12;3013:52;3084:29;3103:9;3084:29;:::i;:::-;3074:39;;3132:38;3166:2;3155:9;3151:18;3132:38;:::i;:::-;3122:48;;2916:260;;;;;:::o;3181:184::-;3233:77;3230:1;3223:88;3330:4;3327:1;3320:15;3354:4;3351:1;3344:15;3370:128;3410:3;3441:1;3437:6;3434:1;3431:13;3428:39;;;3447:18;;:::i;:::-;-1:-1:-1;3483:9:12;;3370:128::o;3503:437::-;3582:1;3578:12;;;;3625;;;3646:61;;3700:4;3692:6;3688:17;3678:27;;3646:61;3753:2;3745:6;3742:14;3722:18;3719:38;3716:218;;;3790:77;3787:1;3780:88;3891:4;3888:1;3881:15;3919:4;3916:1;3909:15;3716:218;;3503:437;;;:::o;4306:125::-;4346:4;4374:1;4371;4368:8;4365:34;;;4379:18;;:::i;:::-;-1:-1:-1;4416:9:12;;4306:125::o"},"gasEstimates":{"creation":{"codeDepositCost":"760800","executionCost":"infinite","totalCost":"infinite"},"external":{"allowance(address,address)":"infinite","approve(address,uint256)":"24521","balanceOf(address)":"2552","decimals()":"2380","deposit()":"25965","isProtected()":"2338","mint(address,uint256)":"30964","name()":"infinite","owner()":"2378","renounceOwnership()":"30190","setProtected(bool)":"26723","symbol()":"infinite","totalSupply()":"251","transfer(address,uint256)":"53342","transferFrom(address,address,uint256)":"infinite","transferOwnership(address)":"30413","withdraw(uint256)":"infinite"}},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","deposit()":"d0e30db0","isProtected()":"5300f82b","mint(address,uint256)":"40c10f19","name()":"06fdde03","owner()":"8da5cb5b","renounceOwnership()":"715018a6","setProtected(bool)":"1c02bc31","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b","withdraw(uint256)":"2e1a7d4d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mockName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"mockSymbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isProtected\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"state\",\"type\":\"bool\"}],\"name\":\"setProtected\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mocks/WETH9Mock.sol\":\"WETH9Mock\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":25000},\"remappings\":[]},\"sources\":{\"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n  function _msgSender() internal view virtual returns (address payable) {\\n    return payable(msg.sender);\\n  }\\n\\n  function _msgData() internal view virtual returns (bytes memory) {\\n    this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n    return msg.data;\\n  }\\n}\\n\",\"keccak256\":\"0xc0df5ebb2c3d8b4509464c40a88cc51e5e5f5e4a26fafc909330e9bb2658f641\",\"license\":\"MIT\"},\"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport './Context.sol';\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\ncontract Ownable is Context {\\n  address private _owner;\\n\\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n  /**\\n   * @dev Initializes the contract setting the deployer as the initial owner.\\n   */\\n  constructor() {\\n    address msgSender = _msgSender();\\n    _owner = msgSender;\\n    emit OwnershipTransferred(address(0), msgSender);\\n  }\\n\\n  /**\\n   * @dev Returns the address of the current owner.\\n   */\\n  function owner() public view returns (address) {\\n    return _owner;\\n  }\\n\\n  /**\\n   * @dev Throws if called by any account other than the owner.\\n   */\\n  modifier onlyOwner() {\\n    require(_owner == _msgSender(), 'Ownable: caller is not the owner');\\n    _;\\n  }\\n\\n  /**\\n   * @dev Leaves the contract without owner. It will not be possible to call\\n   * `onlyOwner` functions anymore. Can only be called by the current owner.\\n   *\\n   * NOTE: Renouncing ownership will leave the contract without an owner,\\n   * thereby removing any functionality that is only available to the owner.\\n   */\\n  function renounceOwnership() public virtual onlyOwner {\\n    emit OwnershipTransferred(_owner, address(0));\\n    _owner = address(0);\\n  }\\n\\n  /**\\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n   * Can only be called by the current owner.\\n   */\\n  function transferOwnership(address newOwner) public virtual onlyOwner {\\n    require(newOwner != address(0), 'Ownable: new owner is the zero address');\\n    emit OwnershipTransferred(_owner, newOwner);\\n    _owner = newOwner;\\n  }\\n}\\n\",\"keccak256\":\"0x3ce185c4f579e32006f8893dbfdc1b5d878c0e2cafd1508f7ceb081698bc81f9\",\"license\":\"MIT\"},\"@aave/core-v3/contracts/dependencies/weth/WETH9.sol\":{\"content\":\"// Copyright (C) 2015, 2016, 2017 Dapphub\\n\\n// This program is free software: you can redistribute it and/or modify\\n// it under the terms of the GNU General Public License as published by\\n// the Free Software Foundation, either version 3 of the License, or\\n// (at your option) any later version.\\n\\n// This program is distributed in the hope that it will be useful,\\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n// GNU General Public License for more details.\\n\\n// You should have received a copy of the GNU General Public License\\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\\n\\npragma solidity ^0.8.10;\\n\\ncontract WETH9 {\\n  string public name = 'Wrapped Ether';\\n  string public symbol = 'WETH';\\n  uint8 public decimals = 18;\\n\\n  event Approval(address indexed src, address indexed guy, uint256 wad);\\n  event Transfer(address indexed src, address indexed dst, uint256 wad);\\n  event Deposit(address indexed dst, uint256 wad);\\n  event Withdrawal(address indexed src, uint256 wad);\\n\\n  mapping(address => uint256) public balanceOf;\\n  mapping(address => mapping(address => uint256)) public allowance;\\n\\n  receive() external payable {\\n    deposit();\\n  }\\n\\n  function deposit() public payable {\\n    balanceOf[msg.sender] += msg.value;\\n    emit Deposit(msg.sender, msg.value);\\n  }\\n\\n  function withdraw(uint256 wad) public {\\n    require(balanceOf[msg.sender] >= wad);\\n    balanceOf[msg.sender] -= wad;\\n    payable(msg.sender).transfer(wad);\\n    emit Withdrawal(msg.sender, wad);\\n  }\\n\\n  function totalSupply() public view returns (uint256) {\\n    return address(this).balance;\\n  }\\n\\n  function approve(address guy, uint256 wad) public returns (bool) {\\n    allowance[msg.sender][guy] = wad;\\n    emit Approval(msg.sender, guy, wad);\\n    return true;\\n  }\\n\\n  function transfer(address dst, uint256 wad) public returns (bool) {\\n    return transferFrom(msg.sender, dst, wad);\\n  }\\n\\n  function transferFrom(address src, address dst, uint256 wad) public returns (bool) {\\n    require(balanceOf[src] >= wad);\\n\\n    if (src != msg.sender && allowance[src][msg.sender] != type(uint256).max) {\\n      require(allowance[src][msg.sender] >= wad);\\n      allowance[src][msg.sender] -= wad;\\n    }\\n\\n    balanceOf[src] -= wad;\\n    balanceOf[dst] += wad;\\n\\n    emit Transfer(src, dst, wad);\\n\\n    return true;\\n  }\\n}\\n\\n/*\\n                    GNU GENERAL PUBLIC LICENSE\\n                       Version 3, 29 June 2007\\n\\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\\n Everyone is permitted to copy and distribute verbatim copies\\n of this license document, but changing it is not allowed.\\n\\n                            Preamble\\n\\n  The GNU General Public License is a free, copyleft license for\\nsoftware and other kinds of works.\\n\\n  The licenses for most software and other practical works are designed\\nto take away your freedom to share and change the works.  By contrast,\\nthe GNU General Public License is intended to guarantee your freedom to\\nshare and change all versions of a program--to make sure it remains free\\nsoftware for all its users.  We, the Free Software Foundation, use the\\nGNU General Public License for most of our software; it applies also to\\nany other work released this way by its authors.  You can apply it to\\nyour programs, too.\\n\\n  When we speak of free software, we are referring to freedom, not\\nprice.  Our General Public Licenses are designed to make sure that you\\nhave the freedom to distribute copies of free software (and charge for\\nthem if you wish), that you receive source code or can get it if you\\nwant it, that you can change the software or use pieces of it in new\\nfree programs, and that you know you can do these things.\\n\\n  To protect your rights, we need to prevent others from denying you\\nthese rights or asking you to surrender the rights.  Therefore, you have\\ncertain responsibilities if you distribute copies of the software, or if\\nyou modify it: responsibilities to respect the freedom of others.\\n\\n  For example, if you distribute copies of such a program, whether\\ngratis or for a fee, you must pass on to the recipients the same\\nfreedoms that you received.  You must make sure that they, too, receive\\nor can get the source code.  And you must show them these terms so they\\nknow their rights.\\n\\n  Developers that use the GNU GPL protect your rights with two steps:\\n(1) assert copyright on the software, and (2) offer you this License\\ngiving you legal permission to copy, distribute and/or modify it.\\n\\n  For the developers' and authors' protection, the GPL clearly explains\\nthat there is no warranty for this free software.  For both users' and\\nauthors' sake, the GPL requires that modified versions be marked as\\nchanged, so that their problems will not be attributed erroneously to\\nauthors of previous versions.\\n\\n  Some devices are designed to deny users access to install or run\\nmodified versions of the software inside them, although the manufacturer\\ncan do so.  This is fundamentally incompatible with the aim of\\nprotecting users' freedom to change the software.  The systematic\\npattern of such abuse occurs in the area of products for individuals to\\nuse, which is precisely where it is most unacceptable.  Therefore, we\\nhave designed this version of the GPL to prohibit the practice for those\\nproducts.  If such problems arise substantially in other domains, we\\nstand ready to extend this provision to those domains in future versions\\nof the GPL, as needed to protect the freedom of users.\\n\\n  Finally, every program is threatened constantly by software patents.\\nStates should not allow patents to restrict development and use of\\nsoftware on general-purpose computers, but in those that do, we wish to\\navoid the special danger that patents applied to a free program could\\nmake it effectively proprietary.  To prevent this, the GPL assures that\\npatents cannot be used to render the program non-free.\\n\\n  The precise terms and conditions for copying, distribution and\\nmodification follow.\\n\\n                       TERMS AND CONDITIONS\\n\\n  0. Definitions.\\n\\n  \\\"This License\\\" refers to version 3 of the GNU General Public License.\\n\\n  \\\"Copyright\\\" also means copyright-like laws that apply to other kinds of\\nworks, such as semiconductor masks.\\n\\n  \\\"The Program\\\" refers to any copyrightable work licensed under this\\nLicense.  Each licensee is addressed as \\\"you\\\".  \\\"Licensees\\\" and\\n\\\"recipients\\\" may be individuals or organizations.\\n\\n  To \\\"modify\\\" a work means to copy from or adapt all or part of the work\\nin a fashion requiring copyright permission, other than the making of an\\nexact copy.  The resulting work is called a \\\"modified version\\\" of the\\nearlier work or a work \\\"based on\\\" the earlier work.\\n\\n  A \\\"covered work\\\" means either the unmodified Program or a work based\\non the Program.\\n\\n  To \\\"propagate\\\" a work means to do anything with it that, without\\npermission, would make you directly or secondarily liable for\\ninfringement under applicable copyright law, except executing it on a\\ncomputer or modifying a private copy.  Propagation includes copying,\\ndistribution (with or without modification), making available to the\\npublic, and in some countries other activities as well.\\n\\n  To \\\"convey\\\" a work means any kind of propagation that enables other\\nparties to make or receive copies.  Mere interaction with a user through\\na computer network, with no transfer of a copy, is not conveying.\\n\\n  An interactive user interface displays \\\"Appropriate Legal Notices\\\"\\nto the extent that it includes a convenient and prominently visible\\nfeature that (1) displays an appropriate copyright notice, and (2)\\ntells the user that there is no warranty for the work (except to the\\nextent that warranties are provided), that licensees may convey the\\nwork under this License, and how to view a copy of this License.  If\\nthe interface presents a list of user commands or options, such as a\\nmenu, a prominent item in the list meets this criterion.\\n\\n  1. Source Code.\\n\\n  The \\\"source code\\\" for a work means the preferred form of the work\\nfor making modifications to it.  \\\"Object code\\\" means any non-source\\nform of a work.\\n\\n  A \\\"Standard Interface\\\" means an interface that either is an official\\nstandard defined by a recognized standards body, or, in the case of\\ninterfaces specified for a particular programming language, one that\\nis widely used among developers working in that language.\\n\\n  The \\\"System Libraries\\\" of an executable work include anything, other\\nthan the work as a whole, that (a) is included in the normal form of\\npackaging a Major Component, but which is not part of that Major\\nComponent, and (b) serves only to enable use of the work with that\\nMajor Component, or to implement a Standard Interface for which an\\nimplementation is available to the public in source code form.  A\\n\\\"Major Component\\\", in this context, means a major essential component\\n(kernel, window system, and so on) of the specific operating system\\n(if any) on which the executable work runs, or a compiler used to\\nproduce the work, or an object code interpreter used to run it.\\n\\n  The \\\"Corresponding Source\\\" for a work in object code form means all\\nthe source code needed to generate, install, and (for an executable\\nwork) run the object code and to modify the work, including scripts to\\ncontrol those activities.  However, it does not include the work's\\nSystem Libraries, or general-purpose tools or generally available free\\nprograms which are used unmodified in performing those activities but\\nwhich are not part of the work.  For example, Corresponding Source\\nincludes interface definition files associated with source files for\\nthe work, and the source code for shared libraries and dynamically\\nlinked subprograms that the work is specifically designed to require,\\nsuch as by intimate data communication or control flow between those\\nsubprograms and other parts of the work.\\n\\n  The Corresponding Source need not include anything that users\\ncan regenerate automatically from other parts of the Corresponding\\nSource.\\n\\n  The Corresponding Source for a work in source code form is that\\nsame work.\\n\\n  2. Basic Permissions.\\n\\n  All rights granted under this License are granted for the term of\\ncopyright on the Program, and are irrevocable provided the stated\\nconditions are met.  This License explicitly affirms your unlimited\\npermission to run the unmodified Program.  The output from running a\\ncovered work is covered by this License only if the output, given its\\ncontent, constitutes a covered work.  This License acknowledges your\\nrights of fair use or other equivalent, as provided by copyright law.\\n\\n  You may make, run and propagate covered works that you do not\\nconvey, without conditions so long as your license otherwise remains\\nin force.  You may convey covered works to others for the sole purpose\\nof having them make modifications exclusively for you, or provide you\\nwith facilities for running those works, provided that you comply with\\nthe terms of this License in conveying all material for which you do\\nnot control copyright.  Those thus making or running the covered works\\nfor you must do so exclusively on your behalf, under your direction\\nand control, on terms that prohibit them from making any copies of\\nyour copyrighted material outside their relationship with you.\\n\\n  Conveying under any other circumstances is permitted solely under\\nthe conditions stated below.  Sublicensing is not allowed; section 10\\nmakes it unnecessary.\\n\\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\\n\\n  No covered work shall be deemed part of an effective technological\\nmeasure under any applicable law fulfilling obligations under article\\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\\nsimilar laws prohibiting or restricting circumvention of such\\nmeasures.\\n\\n  When you convey a covered work, you waive any legal power to forbid\\ncircumvention of technological measures to the extent such circumvention\\nis effected by exercising rights under this License with respect to\\nthe covered work, and you disclaim any intention to limit operation or\\nmodification of the work as a means of enforcing, against the work's\\nusers, your or third parties' legal rights to forbid circumvention of\\ntechnological measures.\\n\\n  4. Conveying Verbatim Copies.\\n\\n  You may convey verbatim copies of the Program's source code as you\\nreceive it, in any medium, provided that you conspicuously and\\nappropriately publish on each copy an appropriate copyright notice;\\nkeep intact all notices stating that this License and any\\nnon-permissive terms added in accord with section 7 apply to the code;\\nkeep intact all notices of the absence of any warranty; and give all\\nrecipients a copy of this License along with the Program.\\n\\n  You may charge any price or no price for each copy that you convey,\\nand you may offer support or warranty protection for a fee.\\n\\n  5. Conveying Modified Source Versions.\\n\\n  You may convey a work based on the Program, or the modifications to\\nproduce it from the Program, in the form of source code under the\\nterms of section 4, provided that you also meet all of these conditions:\\n\\n    a) The work must carry prominent notices stating that you modified\\n    it, and giving a relevant date.\\n\\n    b) The work must carry prominent notices stating that it is\\n    released under this License and any conditions added under section\\n    7.  This requirement modifies the requirement in section 4 to\\n    \\\"keep intact all notices\\\".\\n\\n    c) You must license the entire work, as a whole, under this\\n    License to anyone who comes into possession of a copy.  This\\n    License will therefore apply, along with any applicable section 7\\n    additional terms, to the whole of the work, and all its parts,\\n    regardless of how they are packaged.  This License gives no\\n    permission to license the work in any other way, but it does not\\n    invalidate such permission if you have separately received it.\\n\\n    d) If the work has interactive user interfaces, each must display\\n    Appropriate Legal Notices; however, if the Program has interactive\\n    interfaces that do not display Appropriate Legal Notices, your\\n    work need not make them do so.\\n\\n  A compilation of a covered work with other separate and independent\\nworks, which are not by their nature extensions of the covered work,\\nand which are not combined with it such as to form a larger program,\\nin or on a volume of a storage or distribution medium, is called an\\n\\\"aggregate\\\" if the compilation and its resulting copyright are not\\nused to limit the access or legal rights of the compilation's users\\nbeyond what the individual works permit.  Inclusion of a covered work\\nin an aggregate does not cause this License to apply to the other\\nparts of the aggregate.\\n\\n  6. Conveying Non-Source Forms.\\n\\n  You may convey a covered work in object code form under the terms\\nof sections 4 and 5, provided that you also convey the\\nmachine-readable Corresponding Source under the terms of this License,\\nin one of these ways:\\n\\n    a) Convey the object code in, or embodied in, a physical product\\n    (including a physical distribution medium), accompanied by the\\n    Corresponding Source fixed on a durable physical medium\\n    customarily used for software interchange.\\n\\n    b) Convey the object code in, or embodied in, a physical product\\n    (including a physical distribution medium), accompanied by a\\n    written offer, valid for at least three years and valid for as\\n    long as you offer spare parts or customer support for that product\\n    model, to give anyone who possesses the object code either (1) a\\n    copy of the Corresponding Source for all the software in the\\n    product that is covered by this License, on a durable physical\\n    medium customarily used for software interchange, for a price no\\n    more than your reasonable cost of physically performing this\\n    conveying of source, or (2) access to copy the\\n    Corresponding Source from a network server at no charge.\\n\\n    c) Convey individual copies of the object code with a copy of the\\n    written offer to provide the Corresponding Source.  This\\n    alternative is allowed only occasionally and noncommercially, and\\n    only if you received the object code with such an offer, in accord\\n    with subsection 6b.\\n\\n    d) Convey the object code by offering access from a designated\\n    place (gratis or for a charge), and offer equivalent access to the\\n    Corresponding Source in the same way through the same place at no\\n    further charge.  You need not require recipients to copy the\\n    Corresponding Source along with the object code.  If the place to\\n    copy the object code is a network server, the Corresponding Source\\n    may be on a different server (operated by you or a third party)\\n    that supports equivalent copying facilities, provided you maintain\\n    clear directions next to the object code saying where to find the\\n    Corresponding Source.  Regardless of what server hosts the\\n    Corresponding Source, you remain obligated to ensure that it is\\n    available for as long as needed to satisfy these requirements.\\n\\n    e) Convey the object code using peer-to-peer transmission, provided\\n    you inform other peers where the object code and Corresponding\\n    Source of the work are being offered to the general public at no\\n    charge under subsection 6d.\\n\\n  A separable portion of the object code, whose source code is excluded\\nfrom the Corresponding Source as a System Library, need not be\\nincluded in conveying the object code work.\\n\\n  A \\\"User Product\\\" is either (1) a \\\"consumer product\\\", which means any\\ntangible personal property which is normally used for personal, family,\\nor household purposes, or (2) anything designed or sold for incorporation\\ninto a dwelling.  In determining whether a product is a consumer product,\\ndoubtful cases shall be resolved in favor of coverage.  For a particular\\nproduct received by a particular user, \\\"normally used\\\" refers to a\\ntypical or common use of that class of product, regardless of the status\\nof the particular user or of the way in which the particular user\\nactually uses, or expects or is expected to use, the product.  A product\\nis a consumer product regardless of whether the product has substantial\\ncommercial, industrial or non-consumer uses, unless such uses represent\\nthe only significant mode of use of the product.\\n\\n  \\\"Installation Information\\\" for a User Product means any methods,\\nprocedures, authorization keys, or other information required to install\\nand execute modified versions of a covered work in that User Product from\\na modified version of its Corresponding Source.  The information must\\nsuffice to ensure that the continued functioning of the modified object\\ncode is in no case prevented or interfered with solely because\\nmodification has been made.\\n\\n  If you convey an object code work under this section in, or with, or\\nspecifically for use in, a User Product, and the conveying occurs as\\npart of a transaction in which the right of possession and use of the\\nUser Product is transferred to the recipient in perpetuity or for a\\nfixed term (regardless of how the transaction is characterized), the\\nCorresponding Source conveyed under this section must be accompanied\\nby the Installation Information.  But this requirement does not apply\\nif neither you nor any third party retains the ability to install\\nmodified object code on the User Product (for example, the work has\\nbeen installed in ROM).\\n\\n  The requirement to provide Installation Information does not include a\\nrequirement to continue to provide support service, warranty, or updates\\nfor a work that has been modified or installed by the recipient, or for\\nthe User Product in which it has been modified or installed.  Access to a\\nnetwork may be denied when the modification itself materially and\\nadversely affects the operation of the network or violates the rules and\\nprotocols for communication across the network.\\n\\n  Corresponding Source conveyed, and Installation Information provided,\\nin accord with this section must be in a format that is publicly\\ndocumented (and with an implementation available to the public in\\nsource code form), and must require no special password or key for\\nunpacking, reading or copying.\\n\\n  7. Additional Terms.\\n\\n  \\\"Additional permissions\\\" are terms that supplement the terms of this\\nLicense by making exceptions from one or more of its conditions.\\nAdditional permissions that are applicable to the entire Program shall\\nbe treated as though they were included in this License, to the extent\\nthat they are valid under applicable law.  If additional permissions\\napply only to part of the Program, that part may be used separately\\nunder those permissions, but the entire Program remains governed by\\nthis License without regard to the additional permissions.\\n\\n  When you convey a copy of a covered work, you may at your option\\nremove any additional permissions from that copy, or from any part of\\nit.  (Additional permissions may be written to require their own\\nremoval in certain cases when you modify the work.)  You may place\\nadditional permissions on material, added by you to a covered work,\\nfor which you have or can give appropriate copyright permission.\\n\\n  Notwithstanding any other provision of this License, for material you\\nadd to a covered work, you may (if authorized by the copyright holders of\\nthat material) supplement the terms of this License with terms:\\n\\n    a) Disclaiming warranty or limiting liability differently from the\\n    terms of sections 15 and 16 of this License; or\\n\\n    b) Requiring preservation of specified reasonable legal notices or\\n    author attributions in that material or in the Appropriate Legal\\n    Notices displayed by works containing it; or\\n\\n    c) Prohibiting misrepresentation of the origin of that material, or\\n    requiring that modified versions of such material be marked in\\n    reasonable ways as different from the original version; or\\n\\n    d) Limiting the use for publicity purposes of names of licensors or\\n    authors of the material; or\\n\\n    e) Declining to grant rights under trademark law for use of some\\n    trade names, trademarks, or service marks; or\\n\\n    f) Requiring indemnification of licensors and authors of that\\n    material by anyone who conveys the material (or modified versions of\\n    it) with contractual assumptions of liability to the recipient, for\\n    any liability that these contractual assumptions directly impose on\\n    those licensors and authors.\\n\\n  All other non-permissive additional terms are considered \\\"further\\nrestrictions\\\" within the meaning of section 10.  If the Program as you\\nreceived it, or any part of it, contains a notice stating that it is\\ngoverned by this License along with a term that is a further\\nrestriction, you may remove that term.  If a license document contains\\na further restriction but permits relicensing or conveying under this\\nLicense, you may add to a covered work material governed by the terms\\nof that license document, provided that the further restriction does\\nnot survive such relicensing or conveying.\\n\\n  If you add terms to a covered work in accord with this section, you\\nmust place, in the relevant source files, a statement of the\\nadditional terms that apply to those files, or a notice indicating\\nwhere to find the applicable terms.\\n\\n  Additional terms, permissive or non-permissive, may be stated in the\\nform of a separately written license, or stated as exceptions;\\nthe above requirements apply either way.\\n\\n  8. Termination.\\n\\n  You may not propagate or modify a covered work except as expressly\\nprovided under this License.  Any attempt otherwise to propagate or\\nmodify it is void, and will automatically terminate your rights under\\nthis License (including any patent licenses granted under the third\\nparagraph of section 11).\\n\\n  However, if you cease all violation of this License, then your\\nlicense from a particular copyright holder is reinstated (a)\\nprovisionally, unless and until the copyright holder explicitly and\\nfinally terminates your license, and (b) permanently, if the copyright\\nholder fails to notify you of the violation by some reasonable means\\nprior to 60 days after the cessation.\\n\\n  Moreover, your license from a particular copyright holder is\\nreinstated permanently if the copyright holder notifies you of the\\nviolation by some reasonable means, this is the first time you have\\nreceived notice of violation of this License (for any work) from that\\ncopyright holder, and you cure the violation prior to 30 days after\\nyour receipt of the notice.\\n\\n  Termination of your rights under this section does not terminate the\\nlicenses of parties who have received copies or rights from you under\\nthis License.  If your rights have been terminated and not permanently\\nreinstated, you do not qualify to receive new licenses for the same\\nmaterial under section 10.\\n\\n  9. Acceptance Not Required for Having Copies.\\n\\n  You are not required to accept this License in order to receive or\\nrun a copy of the Program.  Ancillary propagation of a covered work\\noccurring solely as a consequence of using peer-to-peer transmission\\nto receive a copy likewise does not require acceptance.  However,\\nnothing other than this License grants you permission to propagate or\\nmodify any covered work.  These actions infringe copyright if you do\\nnot accept this License.  Therefore, by modifying or propagating a\\ncovered work, you indicate your acceptance of this License to do so.\\n\\n  10. Automatic Licensing of Downstream Recipients.\\n\\n  Each time you convey a covered work, the recipient automatically\\nreceives a license from the original licensors, to run, modify and\\npropagate that work, subject to this License.  You are not responsible\\nfor enforcing compliance by third parties with this License.\\n\\n  An \\\"entity transaction\\\" is a transaction transferring control of an\\norganization, or substantially all assets of one, or subdividing an\\norganization, or merging organizations.  If propagation of a covered\\nwork results from an entity transaction, each party to that\\ntransaction who receives a copy of the work also receives whatever\\nlicenses to the work the party's predecessor in interest had or could\\ngive under the previous paragraph, plus a right to possession of the\\nCorresponding Source of the work from the predecessor in interest, if\\nthe predecessor has it or can get it with reasonable efforts.\\n\\n  You may not impose any further restrictions on the exercise of the\\nrights granted or affirmed under this License.  For example, you may\\nnot impose a license fee, royalty, or other charge for exercise of\\nrights granted under this License, and you may not initiate litigation\\n(including a cross-claim or counterclaim in a lawsuit) alleging that\\nany patent claim is infringed by making, using, selling, offering for\\nsale, or importing the Program or any portion of it.\\n\\n  11. Patents.\\n\\n  A \\\"contributor\\\" is a copyright holder who authorizes use under this\\nLicense of the Program or a work on which the Program is based.  The\\nwork thus licensed is called the contributor's \\\"contributor version\\\".\\n\\n  A contributor's \\\"essential patent claims\\\" are all patent claims\\nowned or controlled by the contributor, whether already acquired or\\nhereafter acquired, that would be infringed by some manner, permitted\\nby this License, of making, using, or selling its contributor version,\\nbut do not include claims that would be infringed only as a\\nconsequence of further modification of the contributor version.  For\\npurposes of this definition, \\\"control\\\" includes the right to grant\\npatent sublicenses in a manner consistent with the requirements of\\nthis License.\\n\\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\\npatent license under the contributor's essential patent claims, to\\nmake, use, sell, offer for sale, import and otherwise run, modify and\\npropagate the contents of its contributor version.\\n\\n  In the following three paragraphs, a \\\"patent license\\\" is any express\\nagreement or commitment, however denominated, not to enforce a patent\\n(such as an express permission to practice a patent or covenant not to\\nsue for patent infringement).  To \\\"grant\\\" such a patent license to a\\nparty means to make such an agreement or commitment not to enforce a\\npatent against the party.\\n\\n  If you convey a covered work, knowingly relying on a patent license,\\nand the Corresponding Source of the work is not available for anyone\\nto copy, free of charge and under the terms of this License, through a\\npublicly available network server or other readily accessible means,\\nthen you must either (1) cause the Corresponding Source to be so\\navailable, or (2) arrange to deprive yourself of the benefit of the\\npatent license for this particular work, or (3) arrange, in a manner\\nconsistent with the requirements of this License, to extend the patent\\nlicense to downstream recipients.  \\\"Knowingly relying\\\" means you have\\nactual knowledge that, but for the patent license, your conveying the\\ncovered work in a country, or your recipient's use of the covered work\\nin a country, would infringe one or more identifiable patents in that\\ncountry that you have reason to believe are valid.\\n\\n  If, pursuant to or in connection with a single transaction or\\narrangement, you convey, or propagate by procuring conveyance of, a\\ncovered work, and grant a patent license to some of the parties\\nreceiving the covered work authorizing them to use, propagate, modify\\nor convey a specific copy of the covered work, then the patent license\\nyou grant is automatically extended to all recipients of the covered\\nwork and works based on it.\\n\\n  A patent license is \\\"discriminatory\\\" if it does not include within\\nthe scope of its coverage, prohibits the exercise of, or is\\nconditioned on the non-exercise of one or more of the rights that are\\nspecifically granted under this License.  You may not convey a covered\\nwork if you are a party to an arrangement with a third party that is\\nin the business of distributing software, under which you make payment\\nto the third party based on the extent of your activity of conveying\\nthe work, and under which the third party grants, to any of the\\nparties who would receive the covered work from you, a discriminatory\\npatent license (a) in connection with copies of the covered work\\nconveyed by you (or copies made from those copies), or (b) primarily\\nfor and in connection with specific products or compilations that\\ncontain the covered work, unless you entered into that arrangement,\\nor that patent license was granted, prior to 28 March 2007.\\n\\n  Nothing in this License shall be construed as excluding or limiting\\nany implied license or other defenses to infringement that may\\notherwise be available to you under applicable patent law.\\n\\n  12. No Surrender of Others' Freedom.\\n\\n  If conditions are imposed on you (whether by court order, agreement or\\notherwise) that contradict the conditions of this License, they do not\\nexcuse you from the conditions of this License.  If you cannot convey a\\ncovered work so as to satisfy simultaneously your obligations under this\\nLicense and any other pertinent obligations, then as a consequence you may\\nnot convey it at all.  For example, if you agree to terms that obligate you\\nto collect a royalty for further conveying from those to whom you convey\\nthe Program, the only way you could satisfy both those terms and this\\nLicense would be to refrain entirely from conveying the Program.\\n\\n  13. Use with the GNU Affero General Public License.\\n\\n  Notwithstanding any other provision of this License, you have\\npermission to link or combine any covered work with a work licensed\\nunder version 3 of the GNU Affero General Public License into a single\\ncombined work, and to convey the resulting work.  The terms of this\\nLicense will continue to apply to the part which is the covered work,\\nbut the special requirements of the GNU Affero General Public License,\\nsection 13, concerning interaction through a network will apply to the\\ncombination as such.\\n\\n  14. Revised Versions of this License.\\n\\n  The Free Software Foundation may publish revised and/or new versions of\\nthe GNU General Public License from time to time.  Such new versions will\\nbe similar in spirit to the present version, but may differ in detail to\\naddress new problems or concerns.\\n\\n  Each version is given a distinguishing version number.  If the\\nProgram specifies that a certain numbered version of the GNU General\\nPublic License \\\"or any later version\\\" applies to it, you have the\\noption of following the terms and conditions either of that numbered\\nversion or of any later version published by the Free Software\\nFoundation.  If the Program does not specify a version number of the\\nGNU General Public License, you may choose any version ever published\\nby the Free Software Foundation.\\n\\n  If the Program specifies that a proxy can decide which future\\nversions of the GNU General Public License can be used, that proxy's\\npublic statement of acceptance of a version permanently authorizes you\\nto choose that version for the Program.\\n\\n  Later license versions may give you additional or different\\npermissions.  However, no additional obligations are imposed on any\\nauthor or copyright holder as a result of your choosing to follow a\\nlater version.\\n\\n  15. Disclaimer of Warranty.\\n\\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \\\"AS IS\\\" WITHOUT WARRANTY\\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\\n\\n  16. Limitation of Liability.\\n\\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\\nSUCH DAMAGES.\\n\\n  17. Interpretation of Sections 15 and 16.\\n\\n  If the disclaimer of warranty and limitation of liability provided\\nabove cannot be given local legal effect according to their terms,\\nreviewing courts shall apply local law that most closely approximates\\nan absolute waiver of all civil liability in connection with the\\nProgram, unless a warranty or assumption of liability accompanies a\\ncopy of the Program in return for a fee.\\n\\n                     END OF TERMS AND CONDITIONS\\n\\n            How to Apply These Terms to Your New Programs\\n\\n  If you develop a new program, and you want it to be of the greatest\\npossible use to the public, the best way to achieve this is to make it\\nfree software which everyone can redistribute and change under these terms.\\n\\n  To do so, attach the following notices to the program.  It is safest\\nto attach them to the start of each source file to most effectively\\nstate the exclusion of warranty; and each file should have at least\\nthe \\\"copyright\\\" line and a pointer to where the full notice is found.\\n\\n    <one line to give the program's name and a brief idea of what it does.>\\n    Copyright (C) <year>  <name of author>\\n\\n    This program is free software: you can redistribute it and/or modify\\n    it under the terms of the GNU General Public License as published by\\n    the Free Software Foundation, either version 3 of the License, or\\n    (at your option) any later version.\\n\\n    This program is distributed in the hope that it will be useful,\\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n    GNU General Public License for more details.\\n\\n    You should have received a copy of the GNU General Public License\\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\\n\\nAlso add information on how to contact you by electronic and paper mail.\\n\\n  If the program does terminal interaction, make it output a short\\nnotice like this when it starts in an interactive mode:\\n\\n    <program>  Copyright (C) <year>  <name of author>\\n    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\\n    This is free software, and you are welcome to redistribute it\\n    under certain conditions; type `show c' for details.\\n\\nThe hypothetical commands `show w' and `show c' should show the appropriate\\nparts of the General Public License.  Of course, your program's commands\\nmight be different; for a GUI interface, you would use an \\\"about box\\\".\\n\\n  You should also get your employer (if you work as a programmer) or school,\\nif any, to sign a \\\"copyright disclaimer\\\" for the program, if necessary.\\nFor more information on this, and how to apply and follow the GNU GPL, see\\n<http://www.gnu.org/licenses/>.\\n\\n  The GNU General Public License does not permit incorporating your program\\ninto proprietary programs.  If your program is a subroutine library, you\\nmay consider it more useful to permit linking proprietary applications with\\nthe library.  If this is what you want to do, use the GNU Lesser General\\nPublic License instead of this License.  But first, please read\\n<http://www.gnu.org/philosophy/why-not-lgpl.html>.\\n\\n*/\\n\",\"keccak256\":\"0x08da88e3ef46dae3e7937fbc60210e7a02f1e7b7daddd3c33ab40bdd20ca30e6\"},\"contracts/mocks/WETH9Mock.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity ^0.8.0;\\n\\nimport {WETH9} from '@aave/core-v3/contracts/dependencies/weth/WETH9.sol';\\nimport {Ownable} from '@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol';\\n\\ncontract WETH9Mock is WETH9, Ownable {\\n  bool internal _protected;\\n\\n  /**\\n   * @dev Function modifier, if _protected is enabled then msg.sender is required to be the owner\\n   */\\n  modifier onlyOwnerIfProtected() {\\n    if (_protected == true) {\\n      require(owner() == _msgSender(), 'Ownable: caller is not the owner');\\n    }\\n    _;\\n  }\\n\\n  constructor(string memory mockName, string memory mockSymbol, address owner) {\\n    name = mockName;\\n    symbol = mockSymbol;\\n\\n    transferOwnership(owner);\\n    _protected = true;\\n  }\\n\\n  function mint(address account, uint256 value) public onlyOwnerIfProtected returns (bool) {\\n    balanceOf[account] += value;\\n    emit Transfer(address(0), account, value);\\n    return true;\\n  }\\n\\n  function setProtected(bool state) public onlyOwner {\\n    _protected = state;\\n  }\\n\\n  function isProtected() public view returns (bool) {\\n    return _protected;\\n  }\\n}\\n\",\"keccak256\":\"0x1e3868aab07fb2e9dbfa4d7149dcbfcaee7abe174538400c0c1be4b971ff7ba1\",\"license\":\"BUSL-1.1\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1141,"contract":"contracts/mocks/WETH9Mock.sol:WETH9Mock","label":"name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":1144,"contract":"contracts/mocks/WETH9Mock.sol:WETH9Mock","label":"symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":1147,"contract":"contracts/mocks/WETH9Mock.sol:WETH9Mock","label":"decimals","offset":0,"slot":"2","type":"t_uint8"},{"astId":1179,"contract":"contracts/mocks/WETH9Mock.sol:WETH9Mock","label":"balanceOf","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":1185,"contract":"contracts/mocks/WETH9Mock.sol:WETH9Mock","label":"allowance","offset":0,"slot":"4","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":915,"contract":"contracts/mocks/WETH9Mock.sol:WETH9Mock","label":"_owner","offset":0,"slot":"5","type":"t_address"},{"astId":1423,"contract":"contracts/mocks/WETH9Mock.sol:WETH9Mock","label":"_protected","offset":20,"slot":"5","type":"t_bool"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/mocks/testnet-helpers/Faucet.sol":{"Faucet":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"bool","name":"permissioned","type":"bool"},{"internalType":"uint256","name":"maxMinAmount","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"getMaximumMintAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"}],"name":"isMintable","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isPermissioned","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newMaxMintAmount","type":"uint256"}],"name":"setMaximumMintAmount","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"bool","name":"active","type":"bool"}],"name":"setMintable","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"permissioned","type":"bool"}],"name":"setPermissioned","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"childContracts","type":"address[]"},{"internalType":"bool","name":"state","type":"bool"}],"name":"setProtectedOfChild","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"childContracts","type":"address[]"},{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnershipOfChild","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Ownable Faucet Contract","kind":"dev","methods":{"getMaximumMintAmount()":{"returns":{"_0":"The maximum amount of tokens per mint allowed (whole tokens)"}},"isMintable(address)":{"params":{"asset":"The address of the asset"},"returns":{"_0":"True if the asset is mintable, false otherwise"}},"isPermissioned()":{"returns":{"_0":"Returns a boolean, if true the mode is enabled, if false is disabled"}},"mint(address,address,uint256)":{"params":{"amount":"The amount of tokens to mint","to":"The address to send the minted tokens","token":"The address of the token to perform the mint"},"returns":{"_0":"The amount minted*"}},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"setMaximumMintAmount(uint256)":{"params":{"newMaxMintAmount":"The new value of maximum amount of tokens per mint (whole tokens)"}},"setMintable(address,bool)":{"params":{"active":"True to enable, false to disable","asset":"The address of the asset"}},"setPermissioned(bool)":{"params":{"value":"If true, ask for authentication at `mint` function, if false, disable the authentication"}},"setProtectedOfChild(address[],bool)":{"params":{"childContracts":"A list of child token contract addresses","state":"True if tokens are only mintable through Faucet, false otherwise"}},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"transferOwnershipOfChild(address[],address)":{"params":{"childContracts":"A list of child contract addresses","newOwner":"The address of the new owner"}}},"title":"Faucet","version":1},"evm":{"bytecode":{"functionDebugData":{"@_1570":{"entryPoint":null,"id":1570,"parameterSlots":3,"returnSlots":0},"@_943":{"entryPoint":null,"id":943,"parameterSlots":0,"returnSlots":0},"@_msgSender_310":{"entryPoint":null,"id":310,"parameterSlots":0,"returnSlots":1},"@transferOwnership_1015":{"entryPoint":159,"id":1015,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_addresst_boolt_uint256_fromMemory":{"entryPoint":432,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1297:12","statements":[{"nodeType":"YulBlock","src":"6:3:12","statements":[]},{"body":{"nodeType":"YulBlock","src":"126:401:12","statements":[{"body":{"nodeType":"YulBlock","src":"172:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"181:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"184:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"174:6:12"},"nodeType":"YulFunctionCall","src":"174:12:12"},"nodeType":"YulExpressionStatement","src":"174:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"147:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"156:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"143:3:12"},"nodeType":"YulFunctionCall","src":"143:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"168:2:12","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"139:3:12"},"nodeType":"YulFunctionCall","src":"139:32:12"},"nodeType":"YulIf","src":"136:52:12"},{"nodeType":"YulVariableDeclaration","src":"197:29:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"216:9:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"210:5:12"},"nodeType":"YulFunctionCall","src":"210:16:12"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"201:5:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"289:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"298:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"301:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"291:6:12"},"nodeType":"YulFunctionCall","src":"291:12:12"},"nodeType":"YulExpressionStatement","src":"291:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"248:5:12"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"259:5:12"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"274:3:12","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"279:1:12","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"270:3:12"},"nodeType":"YulFunctionCall","src":"270:11:12"},{"kind":"number","nodeType":"YulLiteral","src":"283:1:12","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"266:3:12"},"nodeType":"YulFunctionCall","src":"266:19:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"255:3:12"},"nodeType":"YulFunctionCall","src":"255:31:12"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"245:2:12"},"nodeType":"YulFunctionCall","src":"245:42:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"238:6:12"},"nodeType":"YulFunctionCall","src":"238:50:12"},"nodeType":"YulIf","src":"235:70:12"},{"nodeType":"YulAssignment","src":"314:15:12","value":{"name":"value","nodeType":"YulIdentifier","src":"324:5:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"314:6:12"}]},{"nodeType":"YulVariableDeclaration","src":"338:40:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"363:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"374:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"359:3:12"},"nodeType":"YulFunctionCall","src":"359:18:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"353:5:12"},"nodeType":"YulFunctionCall","src":"353:25:12"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"342:7:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"435:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"444:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"447:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"437:6:12"},"nodeType":"YulFunctionCall","src":"437:12:12"},"nodeType":"YulExpressionStatement","src":"437:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"400:7:12"},{"arguments":[{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"423:7:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"416:6:12"},"nodeType":"YulFunctionCall","src":"416:15:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"409:6:12"},"nodeType":"YulFunctionCall","src":"409:23:12"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"397:2:12"},"nodeType":"YulFunctionCall","src":"397:36:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"390:6:12"},"nodeType":"YulFunctionCall","src":"390:44:12"},"nodeType":"YulIf","src":"387:64:12"},{"nodeType":"YulAssignment","src":"460:17:12","value":{"name":"value_1","nodeType":"YulIdentifier","src":"470:7:12"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"460:6:12"}]},{"nodeType":"YulAssignment","src":"486:35:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"506:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"517:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"502:3:12"},"nodeType":"YulFunctionCall","src":"502:18:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"496:5:12"},"nodeType":"YulFunctionCall","src":"496:25:12"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"486:6:12"}]}]},"name":"abi_decode_tuple_t_addresst_boolt_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"76:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"87:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"99:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"107:6:12","type":""},{"name":"value2","nodeType":"YulTypedName","src":"115:6:12","type":""}],"src":"14:513:12"},{"body":{"nodeType":"YulBlock","src":"706:182:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"723:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"734:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"716:6:12"},"nodeType":"YulFunctionCall","src":"716:21:12"},"nodeType":"YulExpressionStatement","src":"716:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"757:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"768:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"753:3:12"},"nodeType":"YulFunctionCall","src":"753:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"773:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"746:6:12"},"nodeType":"YulFunctionCall","src":"746:30:12"},"nodeType":"YulExpressionStatement","src":"746:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"796:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"807:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"792:3:12"},"nodeType":"YulFunctionCall","src":"792:18:12"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"812:34:12","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"785:6:12"},"nodeType":"YulFunctionCall","src":"785:62:12"},"nodeType":"YulExpressionStatement","src":"785:62:12"},{"nodeType":"YulAssignment","src":"856:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"868:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"879:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"864:3:12"},"nodeType":"YulFunctionCall","src":"864:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"856:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"683:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"697:4:12","type":""}],"src":"532:356:12"},{"body":{"nodeType":"YulBlock","src":"1067:228:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1084:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"1095:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1077:6:12"},"nodeType":"YulFunctionCall","src":"1077:21:12"},"nodeType":"YulExpressionStatement","src":"1077:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1118:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"1129:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1114:3:12"},"nodeType":"YulFunctionCall","src":"1114:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"1134:2:12","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1107:6:12"},"nodeType":"YulFunctionCall","src":"1107:30:12"},"nodeType":"YulExpressionStatement","src":"1107:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1157:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"1168:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1153:3:12"},"nodeType":"YulFunctionCall","src":"1153:18:12"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"1173:34:12","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1146:6:12"},"nodeType":"YulFunctionCall","src":"1146:62:12"},"nodeType":"YulExpressionStatement","src":"1146:62:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1228:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"1239:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1224:3:12"},"nodeType":"YulFunctionCall","src":"1224:18:12"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"1244:8:12","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1217:6:12"},"nodeType":"YulFunctionCall","src":"1217:36:12"},"nodeType":"YulExpressionStatement","src":"1217:36:12"},{"nodeType":"YulAssignment","src":"1262:27:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1274:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"1285:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1270:3:12"},"nodeType":"YulFunctionCall","src":"1270:19:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1262:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1044:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1058:4:12","type":""}],"src":"893:402:12"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_addresst_boolt_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        if iszero(eq(value_1, iszero(iszero(value_1)))) { revert(0, 0) }\n        value1 := value_1\n        value2 := mload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n}","id":12,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x12D5 CODESIZE SUB DUP1 PUSH3 0x12D5 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x1B0 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 DUP3 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x12B5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP3 SWAP1 LOG3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH3 0x78 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x83 DUP4 PUSH3 0x9F JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP3 ISZERO ISZERO SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x1 SSTORE POP PUSH3 0x207 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH3 0xFF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0x166 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0xF6 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x12B5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x1C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x1DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD SWAP1 SWAP4 POP DUP1 ISZERO ISZERO DUP2 EQ PUSH3 0x1F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP3 POP POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x109E DUP1 PUSH3 0x217 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xD4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC6C3BBE6 GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xE2A4157C GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xE2A4157C EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0xF7EB06C4 EQ PUSH2 0x1ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC6C3BBE6 EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0xCA51A903 EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0xDD26B1D3 EQ PUSH2 0x1C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0x9420D476 EQ PUSH2 0x180 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1A678CD3 EQ PUSH2 0xD9 JUMPI DUP1 PUSH4 0x222B15FB EQ PUSH2 0xEE JUMPI DUP1 PUSH4 0x506F26CC EQ PUSH2 0x13D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEC PUSH2 0xE7 CALLDATASIZE PUSH1 0x4 PUSH2 0xC38 JUMP JUMPDEST PUSH2 0x200 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x128 PUSH2 0xFC CALLDATASIZE PUSH1 0x4 PUSH2 0xC85 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEC PUSH2 0x14B CALLDATASIZE PUSH1 0x4 PUSH2 0xCEC JUMP JUMPDEST PUSH2 0x2B7 JUMP JUMPDEST PUSH2 0xEC PUSH2 0x406 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x134 JUMP JUMPDEST PUSH2 0xEC PUSH2 0x18E CALLDATASIZE PUSH1 0x4 PUSH2 0xD40 JUMP JUMPDEST PUSH2 0x4F6 JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x1A1 CALLDATASIZE PUSH1 0x4 PUSH2 0xD59 JUMP JUMPDEST PUSH2 0x57C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x134 JUMP JUMPDEST PUSH2 0xEC PUSH2 0x1C2 CALLDATASIZE PUSH1 0x4 PUSH2 0xD95 JUMP JUMPDEST PUSH2 0x858 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x1A6 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xFF AND PUSH2 0x128 JUMP JUMPDEST PUSH2 0xEC PUSH2 0x1E8 CALLDATASIZE PUSH1 0x4 PUSH2 0xC85 JUMP JUMPDEST PUSH2 0x9A1 JUMP JUMPDEST PUSH2 0xEC PUSH2 0x1FB CALLDATASIZE PUSH1 0x4 PUSH2 0xDEC JUMP JUMPDEST PUSH2 0xB52 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x286 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x338 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x27D JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x400 JUMPI DUP4 DUP4 DUP3 DUP2 DUP2 LT PUSH2 0x355 JUMPI PUSH2 0x355 PUSH2 0xE23 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x36A SWAP2 SWAP1 PUSH2 0xC85 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xF2FDE38B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0xF2FDE38B SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3E9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 DUP1 PUSH2 0x3F8 SWAP1 PUSH2 0xE81 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x33B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x487 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x27D JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x577 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x27D JUMP JUMPDEST PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ ISZERO PUSH2 0x610 JUMPI PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x610 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x27D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x6A0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4572726F723A206E6F74206D696E7461626C6500000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x27D JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6EB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x70F SWAP2 SWAP1 PUSH2 0xEBA JUMP JUMPDEST PUSH2 0x71A SWAP1 PUSH1 0xA PUSH2 0xFFF JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x727 SWAP2 SWAP1 PUSH2 0x100E JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x7B6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4572726F723A204D696E74206C696D6974207472616E73616374696F6E206578 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6365656465640000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x27D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x40C10F1900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE DUP6 AND SWAP1 PUSH4 0x40C10F19 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x82B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x84F SWAP2 SWAP1 PUSH2 0x104B JUMP JUMPDEST POP SWAP1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x8D9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x27D JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x400 JUMPI DUP4 DUP4 DUP3 DUP2 DUP2 LT PUSH2 0x8F6 JUMPI PUSH2 0x8F6 PUSH2 0xE23 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x90B SWAP2 SWAP1 PUSH2 0xC85 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1C02BC3100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 ISZERO ISZERO PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x1C02BC31 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x976 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x98A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 DUP1 PUSH2 0x999 SWAP1 PUSH2 0xE81 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x8DC JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0xA22 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x27D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0xAC5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x27D JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0xBD3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x27D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP2 ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xC35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xC55 DUP2 PUSH2 0xC27 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xC80 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC55 DUP3 PUSH2 0xC5C JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xCB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCCA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0xCE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xD01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD24 DUP7 DUP3 DUP8 ADD PUSH2 0xCA0 JUMP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP PUSH2 0xD37 SWAP1 POP PUSH1 0x20 DUP6 ADD PUSH2 0xC5C JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xD6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD77 DUP5 PUSH2 0xC5C JUMP JUMPDEST SWAP3 POP PUSH2 0xD85 PUSH1 0x20 DUP6 ADD PUSH2 0xC5C JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xDAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xDC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDCD DUP7 DUP3 DUP8 ADD PUSH2 0xCA0 JUMP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0xDE1 DUP2 PUSH2 0xC27 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE08 DUP4 PUSH2 0xC5C JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0xE18 DUP2 PUSH2 0xC27 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0xEB3 JUMPI PUSH2 0xEB3 PUSH2 0xE52 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xECC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0xC55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0xF36 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP3 GT ISZERO PUSH2 0xF1C JUMPI PUSH2 0xF1C PUSH2 0xE52 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0xF29 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0xEE2 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xF4D JUMPI POP PUSH1 0x1 PUSH2 0xFF9 JUMP JUMPDEST DUP2 PUSH2 0xF5A JUMPI POP PUSH1 0x0 PUSH2 0xFF9 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0xF70 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xF7A JUMPI PUSH2 0xF96 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xFF9 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0xF8B JUMPI PUSH2 0xF8B PUSH2 0xE52 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0xFF9 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0xFB9 JUMPI POP DUP2 DUP2 EXP PUSH2 0xFF9 JUMP JUMPDEST PUSH2 0xFC3 DUP4 DUP4 PUSH2 0xEDD JUMP JUMPDEST DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP3 GT ISZERO PUSH2 0xFF5 JUMPI PUSH2 0xFF5 PUSH2 0xE52 JUMP JUMPDEST MUL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC55 PUSH1 0xFF DUP5 AND DUP4 PUSH2 0xF3E JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1046 JUMPI PUSH2 0x1046 PUSH2 0xE52 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x105D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xC55 DUP2 PUSH2 0xC27 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TIMESTAMP 0xEE DUP8 0xC3 PUSH3 0xC02396 DUP16 MSTORE DUP16 PUSH21 0x3B4B754D43798BAD978B093BCDAE6AA3C0ECB33B64 PUSH20 0x6F6C634300080A00338BE0079C531659141344CD 0x1F 0xD0 LOG4 CALLCODE DUP5 NOT 0x49 PUSH32 0x9722A3DAAFE3B4186F6B6457E000000000000000000000000000000000000000 ","sourceMap":"305:2714:9:-:0;;;682:209;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;835:17:4;873:18;;-1:-1:-1;;;;;;873:18:4;678:10:1;873:18:4;;;;;902:43;;678:10:1;;;;-1:-1:-1;;;;;;;;;;;902:43:4;835:17;;902:43;-1:-1:-1;;;;;;764:19:9;;756:28;;;;;;790:24;808:5;790:17;:24::i;:::-;820:13;:28;;-1:-1:-1;;820:28:9;;;;;;;;;;;-1:-1:-1;854:32:9;-1:-1:-1;305:2714:9;;1875:226:4;1204:6;;-1:-1:-1;;;;;1204:6:4;678:10:1;1204:22:4;1196:67;;;;-1:-1:-1;;;1196:67:4;;734:2:12;1196:67:4;;;716:21:12;;;753:18;;;746:30;812:34;792:18;;;785:62;864:18;;1196:67:4;;;;;;;;;-1:-1:-1;;;;;1959:22:4;::::1;1951:73;;;::::0;-1:-1:-1;;;1951:73:4;;1095:2:12;1951:73:4::1;::::0;::::1;1077:21:12::0;1134:2;1114:18;;;1107:30;1173:34;1153:18;;;1146:62;-1:-1:-1;;;1224:18:12;;;1217:36;1270:19;;1951:73:4::1;893:402:12::0;1951:73:4::1;2056:6;::::0;;2035:38:::1;::::0;-1:-1:-1;;;;;2035:38:4;;::::1;::::0;2056:6;::::1;::::0;-1:-1:-1;;;;;;;;;;;2035:38:4;::::1;2079:6;:17:::0;;-1:-1:-1;;;;;;2079:17:4::1;-1:-1:-1::0;;;;;2079:17:4;;;::::1;::::0;;;::::1;::::0;;1875:226::o;14:513:12:-;99:6;107;115;168:2;156:9;147:7;143:23;139:32;136:52;;;184:1;181;174:12;136:52;210:16;;-1:-1:-1;;;;;255:31:12;;245:42;;235:70;;301:1;298;291:12;235:70;374:2;359:18;;353:25;324:5;;-1:-1:-1;416:15:12;;409:23;397:36;;387:64;;447:1;444;437:12;387:64;470:7;460:17;;;517:2;506:9;502:18;496:25;486:35;;14:513;;;;;:::o;893:402::-;305:2714:9;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_msgSender_310":{"entryPoint":null,"id":310,"parameterSlots":0,"returnSlots":1},"@getMaximumMintAmount_1791":{"entryPoint":null,"id":1791,"parameterSlots":0,"returnSlots":1},"@isMintable_1697":{"entryPoint":null,"id":1697,"parameterSlots":1,"returnSlots":1},"@isPermissioned_1663":{"entryPoint":null,"id":1663,"parameterSlots":0,"returnSlots":1},"@mint_1639":{"entryPoint":1404,"id":1639,"parameterSlots":3,"returnSlots":1},"@owner_952":{"entryPoint":null,"id":952,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_987":{"entryPoint":1030,"id":987,"parameterSlots":0,"returnSlots":0},"@setMaximumMintAmount_1781":{"entryPoint":1270,"id":1781,"parameterSlots":1,"returnSlots":0},"@setMintable_1682":{"entryPoint":2898,"id":1682,"parameterSlots":2,"returnSlots":0},"@setPermissioned_1653":{"entryPoint":512,"id":1653,"parameterSlots":1,"returnSlots":0},"@setProtectedOfChild_1767":{"entryPoint":2136,"id":1767,"parameterSlots":3,"returnSlots":0},"@transferOwnershipOfChild_1732":{"entryPoint":695,"id":1732,"parameterSlots":3,"returnSlots":0},"@transferOwnership_1015":{"entryPoint":2465,"id":1015,"parameterSlots":1,"returnSlots":0},"abi_decode_address":{"entryPoint":3164,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_array_address_dyn_calldata":{"entryPoint":3232,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_address":{"entryPoint":3205,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":3417,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_bool":{"entryPoint":3564,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_address":{"entryPoint":3308,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_bool":{"entryPoint":3477,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_bool":{"entryPoint":3128,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":4171,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":3392,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint8_fromMemory":{"entryPoint":3770,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0ede82dc9ae41bf2b2aee39aeb0f1780b14caf910cda71c7ce68835c5a4ee7f4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4c70a5af4f9f1eecb7d3eacc63eb554c1747b9b8db0d040cf0e0675c3461312e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_helper":{"entryPoint":3805,"id":null,"parameterSlots":2,"returnSlots":2},"checked_exp_t_uint256_t_uint8":{"entryPoint":4095,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_unsigned":{"entryPoint":3902,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":4110,"id":null,"parameterSlots":2,"returnSlots":1},"increment_t_uint256":{"entryPoint":3713,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":3666,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":3619,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_bool":{"entryPoint":3111,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:8341:12","statements":[{"nodeType":"YulBlock","src":"6:3:12","statements":[]},{"body":{"nodeType":"YulBlock","src":"56:76:12","statements":[{"body":{"nodeType":"YulBlock","src":"110:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"119:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"122:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"112:6:12"},"nodeType":"YulFunctionCall","src":"112:12:12"},"nodeType":"YulExpressionStatement","src":"112:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"79:5:12"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"100:5:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"93:6:12"},"nodeType":"YulFunctionCall","src":"93:13:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"86:6:12"},"nodeType":"YulFunctionCall","src":"86:21:12"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"76:2:12"},"nodeType":"YulFunctionCall","src":"76:32:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"69:6:12"},"nodeType":"YulFunctionCall","src":"69:40:12"},"nodeType":"YulIf","src":"66:60:12"}]},"name":"validator_revert_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"45:5:12","type":""}],"src":"14:118:12"},{"body":{"nodeType":"YulBlock","src":"204:174:12","statements":[{"body":{"nodeType":"YulBlock","src":"250:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"259:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"262:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"252:6:12"},"nodeType":"YulFunctionCall","src":"252:12:12"},"nodeType":"YulExpressionStatement","src":"252:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"225:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"234:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"221:3:12"},"nodeType":"YulFunctionCall","src":"221:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"246:2:12","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"217:3:12"},"nodeType":"YulFunctionCall","src":"217:32:12"},"nodeType":"YulIf","src":"214:52:12"},{"nodeType":"YulVariableDeclaration","src":"275:36:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"301:9:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"288:12:12"},"nodeType":"YulFunctionCall","src":"288:23:12"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"279:5:12","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"342:5:12"}],"functionName":{"name":"validator_revert_bool","nodeType":"YulIdentifier","src":"320:21:12"},"nodeType":"YulFunctionCall","src":"320:28:12"},"nodeType":"YulExpressionStatement","src":"320:28:12"},{"nodeType":"YulAssignment","src":"357:15:12","value":{"name":"value","nodeType":"YulIdentifier","src":"367:5:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"357:6:12"}]}]},"name":"abi_decode_tuple_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"170:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"181:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"193:6:12","type":""}],"src":"137:241:12"},{"body":{"nodeType":"YulBlock","src":"432:147:12","statements":[{"nodeType":"YulAssignment","src":"442:29:12","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"464:6:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"451:12:12"},"nodeType":"YulFunctionCall","src":"451:20:12"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"442:5:12"}]},{"body":{"nodeType":"YulBlock","src":"557:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"566:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"569:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"559:6:12"},"nodeType":"YulFunctionCall","src":"559:12:12"},"nodeType":"YulExpressionStatement","src":"559:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"493:5:12"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"504:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"511:42:12","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"500:3:12"},"nodeType":"YulFunctionCall","src":"500:54:12"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"490:2:12"},"nodeType":"YulFunctionCall","src":"490:65:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"483:6:12"},"nodeType":"YulFunctionCall","src":"483:73:12"},"nodeType":"YulIf","src":"480:93:12"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"411:6:12","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"422:5:12","type":""}],"src":"383:196:12"},{"body":{"nodeType":"YulBlock","src":"654:116:12","statements":[{"body":{"nodeType":"YulBlock","src":"700:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"709:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"712:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"702:6:12"},"nodeType":"YulFunctionCall","src":"702:12:12"},"nodeType":"YulExpressionStatement","src":"702:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"675:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"684:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"671:3:12"},"nodeType":"YulFunctionCall","src":"671:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"696:2:12","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"667:3:12"},"nodeType":"YulFunctionCall","src":"667:32:12"},"nodeType":"YulIf","src":"664:52:12"},{"nodeType":"YulAssignment","src":"725:39:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"754:9:12"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"735:18:12"},"nodeType":"YulFunctionCall","src":"735:29:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"725:6:12"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"620:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"631:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"643:6:12","type":""}],"src":"584:186:12"},{"body":{"nodeType":"YulBlock","src":"870:92:12","statements":[{"nodeType":"YulAssignment","src":"880:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"892:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"903:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"888:3:12"},"nodeType":"YulFunctionCall","src":"888:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"880:4:12"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"922:9:12"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"947:6:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"940:6:12"},"nodeType":"YulFunctionCall","src":"940:14:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"933:6:12"},"nodeType":"YulFunctionCall","src":"933:22:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"915:6:12"},"nodeType":"YulFunctionCall","src":"915:41:12"},"nodeType":"YulExpressionStatement","src":"915:41:12"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"839:9:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"850:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"861:4:12","type":""}],"src":"775:187:12"},{"body":{"nodeType":"YulBlock","src":"1051:283:12","statements":[{"body":{"nodeType":"YulBlock","src":"1100:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1109:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1112:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1102:6:12"},"nodeType":"YulFunctionCall","src":"1102:12:12"},"nodeType":"YulExpressionStatement","src":"1102:12:12"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1079:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"1087:4:12","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1075:3:12"},"nodeType":"YulFunctionCall","src":"1075:17:12"},{"name":"end","nodeType":"YulIdentifier","src":"1094:3:12"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1071:3:12"},"nodeType":"YulFunctionCall","src":"1071:27:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1064:6:12"},"nodeType":"YulFunctionCall","src":"1064:35:12"},"nodeType":"YulIf","src":"1061:55:12"},{"nodeType":"YulAssignment","src":"1125:30:12","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1148:6:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1135:12:12"},"nodeType":"YulFunctionCall","src":"1135:20:12"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1125:6:12"}]},{"body":{"nodeType":"YulBlock","src":"1198:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1207:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1210:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1200:6:12"},"nodeType":"YulFunctionCall","src":"1200:12:12"},"nodeType":"YulExpressionStatement","src":"1200:12:12"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1170:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"1178:18:12","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1167:2:12"},"nodeType":"YulFunctionCall","src":"1167:30:12"},"nodeType":"YulIf","src":"1164:50:12"},{"nodeType":"YulAssignment","src":"1223:29:12","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1239:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"1247:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1235:3:12"},"nodeType":"YulFunctionCall","src":"1235:17:12"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"1223:8:12"}]},{"body":{"nodeType":"YulBlock","src":"1312:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1321:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1324:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1314:6:12"},"nodeType":"YulFunctionCall","src":"1314:12:12"},"nodeType":"YulExpressionStatement","src":"1314:12:12"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1275:6:12"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1287:1:12","type":"","value":"5"},{"name":"length","nodeType":"YulIdentifier","src":"1290:6:12"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1283:3:12"},"nodeType":"YulFunctionCall","src":"1283:14:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1271:3:12"},"nodeType":"YulFunctionCall","src":"1271:27:12"},{"kind":"number","nodeType":"YulLiteral","src":"1300:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1267:3:12"},"nodeType":"YulFunctionCall","src":"1267:38:12"},{"name":"end","nodeType":"YulIdentifier","src":"1307:3:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1264:2:12"},"nodeType":"YulFunctionCall","src":"1264:47:12"},"nodeType":"YulIf","src":"1261:67:12"}]},"name":"abi_decode_array_address_dyn_calldata","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1014:6:12","type":""},{"name":"end","nodeType":"YulTypedName","src":"1022:3:12","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"1030:8:12","type":""},{"name":"length","nodeType":"YulTypedName","src":"1040:6:12","type":""}],"src":"967:367:12"},{"body":{"nodeType":"YulBlock","src":"1461:389:12","statements":[{"body":{"nodeType":"YulBlock","src":"1507:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1516:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1519:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1509:6:12"},"nodeType":"YulFunctionCall","src":"1509:12:12"},"nodeType":"YulExpressionStatement","src":"1509:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1482:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"1491:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1478:3:12"},"nodeType":"YulFunctionCall","src":"1478:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"1503:2:12","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1474:3:12"},"nodeType":"YulFunctionCall","src":"1474:32:12"},"nodeType":"YulIf","src":"1471:52:12"},{"nodeType":"YulVariableDeclaration","src":"1532:37:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1559:9:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1546:12:12"},"nodeType":"YulFunctionCall","src":"1546:23:12"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1536:6:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"1612:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1621:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1624:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1614:6:12"},"nodeType":"YulFunctionCall","src":"1614:12:12"},"nodeType":"YulExpressionStatement","src":"1614:12:12"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1584:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"1592:18:12","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1581:2:12"},"nodeType":"YulFunctionCall","src":"1581:30:12"},"nodeType":"YulIf","src":"1578:50:12"},{"nodeType":"YulVariableDeclaration","src":"1637:96:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1705:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"1716:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1701:3:12"},"nodeType":"YulFunctionCall","src":"1701:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1725:7:12"}],"functionName":{"name":"abi_decode_array_address_dyn_calldata","nodeType":"YulIdentifier","src":"1663:37:12"},"nodeType":"YulFunctionCall","src":"1663:70:12"},"variables":[{"name":"value0_1","nodeType":"YulTypedName","src":"1641:8:12","type":""},{"name":"value1_1","nodeType":"YulTypedName","src":"1651:8:12","type":""}]},{"nodeType":"YulAssignment","src":"1742:18:12","value":{"name":"value0_1","nodeType":"YulIdentifier","src":"1752:8:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1742:6:12"}]},{"nodeType":"YulAssignment","src":"1769:18:12","value":{"name":"value1_1","nodeType":"YulIdentifier","src":"1779:8:12"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1769:6:12"}]},{"nodeType":"YulAssignment","src":"1796:48:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1829:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"1840:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1825:3:12"},"nodeType":"YulFunctionCall","src":"1825:18:12"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1806:18:12"},"nodeType":"YulFunctionCall","src":"1806:38:12"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1796:6:12"}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1411:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1422:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1434:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1442:6:12","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1450:6:12","type":""}],"src":"1339:511:12"},{"body":{"nodeType":"YulBlock","src":"1956:125:12","statements":[{"nodeType":"YulAssignment","src":"1966:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1978:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"1989:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1974:3:12"},"nodeType":"YulFunctionCall","src":"1974:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1966:4:12"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2008:9:12"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2023:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"2031:42:12","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2019:3:12"},"nodeType":"YulFunctionCall","src":"2019:55:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2001:6:12"},"nodeType":"YulFunctionCall","src":"2001:74:12"},"nodeType":"YulExpressionStatement","src":"2001:74:12"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1925:9:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1936:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1947:4:12","type":""}],"src":"1855:226:12"},{"body":{"nodeType":"YulBlock","src":"2156:110:12","statements":[{"body":{"nodeType":"YulBlock","src":"2202:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2211:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2214:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2204:6:12"},"nodeType":"YulFunctionCall","src":"2204:12:12"},"nodeType":"YulExpressionStatement","src":"2204:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2177:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"2186:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2173:3:12"},"nodeType":"YulFunctionCall","src":"2173:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"2198:2:12","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2169:3:12"},"nodeType":"YulFunctionCall","src":"2169:32:12"},"nodeType":"YulIf","src":"2166:52:12"},{"nodeType":"YulAssignment","src":"2227:33:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2250:9:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2237:12:12"},"nodeType":"YulFunctionCall","src":"2237:23:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2227:6:12"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2122:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2133:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2145:6:12","type":""}],"src":"2086:180:12"},{"body":{"nodeType":"YulBlock","src":"2375:224:12","statements":[{"body":{"nodeType":"YulBlock","src":"2421:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2430:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2433:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2423:6:12"},"nodeType":"YulFunctionCall","src":"2423:12:12"},"nodeType":"YulExpressionStatement","src":"2423:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2396:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"2405:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2392:3:12"},"nodeType":"YulFunctionCall","src":"2392:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"2417:2:12","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2388:3:12"},"nodeType":"YulFunctionCall","src":"2388:32:12"},"nodeType":"YulIf","src":"2385:52:12"},{"nodeType":"YulAssignment","src":"2446:39:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2475:9:12"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2456:18:12"},"nodeType":"YulFunctionCall","src":"2456:29:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2446:6:12"}]},{"nodeType":"YulAssignment","src":"2494:48:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2527:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"2538:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2523:3:12"},"nodeType":"YulFunctionCall","src":"2523:18:12"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2504:18:12"},"nodeType":"YulFunctionCall","src":"2504:38:12"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2494:6:12"}]},{"nodeType":"YulAssignment","src":"2551:42:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2578:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"2589:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2574:3:12"},"nodeType":"YulFunctionCall","src":"2574:18:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2561:12:12"},"nodeType":"YulFunctionCall","src":"2561:32:12"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2551:6:12"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2325:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2336:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2348:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2356:6:12","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2364:6:12","type":""}],"src":"2271:328:12"},{"body":{"nodeType":"YulBlock","src":"2705:76:12","statements":[{"nodeType":"YulAssignment","src":"2715:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2727:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"2738:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2723:3:12"},"nodeType":"YulFunctionCall","src":"2723:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2715:4:12"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2757:9:12"},{"name":"value0","nodeType":"YulIdentifier","src":"2768:6:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2750:6:12"},"nodeType":"YulFunctionCall","src":"2750:25:12"},"nodeType":"YulExpressionStatement","src":"2750:25:12"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2674:9:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2685:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2696:4:12","type":""}],"src":"2604:177:12"},{"body":{"nodeType":"YulBlock","src":"2905:447:12","statements":[{"body":{"nodeType":"YulBlock","src":"2951:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2960:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2963:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2953:6:12"},"nodeType":"YulFunctionCall","src":"2953:12:12"},"nodeType":"YulExpressionStatement","src":"2953:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2926:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"2935:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2922:3:12"},"nodeType":"YulFunctionCall","src":"2922:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"2947:2:12","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2918:3:12"},"nodeType":"YulFunctionCall","src":"2918:32:12"},"nodeType":"YulIf","src":"2915:52:12"},{"nodeType":"YulVariableDeclaration","src":"2976:37:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3003:9:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2990:12:12"},"nodeType":"YulFunctionCall","src":"2990:23:12"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2980:6:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"3056:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3065:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3068:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3058:6:12"},"nodeType":"YulFunctionCall","src":"3058:12:12"},"nodeType":"YulExpressionStatement","src":"3058:12:12"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3028:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"3036:18:12","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3025:2:12"},"nodeType":"YulFunctionCall","src":"3025:30:12"},"nodeType":"YulIf","src":"3022:50:12"},{"nodeType":"YulVariableDeclaration","src":"3081:96:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3149:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"3160:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3145:3:12"},"nodeType":"YulFunctionCall","src":"3145:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3169:7:12"}],"functionName":{"name":"abi_decode_array_address_dyn_calldata","nodeType":"YulIdentifier","src":"3107:37:12"},"nodeType":"YulFunctionCall","src":"3107:70:12"},"variables":[{"name":"value0_1","nodeType":"YulTypedName","src":"3085:8:12","type":""},{"name":"value1_1","nodeType":"YulTypedName","src":"3095:8:12","type":""}]},{"nodeType":"YulAssignment","src":"3186:18:12","value":{"name":"value0_1","nodeType":"YulIdentifier","src":"3196:8:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3186:6:12"}]},{"nodeType":"YulAssignment","src":"3213:18:12","value":{"name":"value1_1","nodeType":"YulIdentifier","src":"3223:8:12"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3213:6:12"}]},{"nodeType":"YulVariableDeclaration","src":"3240:45:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3270:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"3281:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3266:3:12"},"nodeType":"YulFunctionCall","src":"3266:18:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3253:12:12"},"nodeType":"YulFunctionCall","src":"3253:32:12"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3244:5:12","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3316:5:12"}],"functionName":{"name":"validator_revert_bool","nodeType":"YulIdentifier","src":"3294:21:12"},"nodeType":"YulFunctionCall","src":"3294:28:12"},"nodeType":"YulExpressionStatement","src":"3294:28:12"},{"nodeType":"YulAssignment","src":"3331:15:12","value":{"name":"value","nodeType":"YulIdentifier","src":"3341:5:12"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3331:6:12"}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2855:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2866:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2878:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2886:6:12","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2894:6:12","type":""}],"src":"2786:566:12"},{"body":{"nodeType":"YulBlock","src":"3441:231:12","statements":[{"body":{"nodeType":"YulBlock","src":"3487:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3496:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3499:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3489:6:12"},"nodeType":"YulFunctionCall","src":"3489:12:12"},"nodeType":"YulExpressionStatement","src":"3489:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3462:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"3471:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3458:3:12"},"nodeType":"YulFunctionCall","src":"3458:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"3483:2:12","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3454:3:12"},"nodeType":"YulFunctionCall","src":"3454:32:12"},"nodeType":"YulIf","src":"3451:52:12"},{"nodeType":"YulAssignment","src":"3512:39:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3541:9:12"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"3522:18:12"},"nodeType":"YulFunctionCall","src":"3522:29:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3512:6:12"}]},{"nodeType":"YulVariableDeclaration","src":"3560:45:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3590:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"3601:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3586:3:12"},"nodeType":"YulFunctionCall","src":"3586:18:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3573:12:12"},"nodeType":"YulFunctionCall","src":"3573:32:12"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3564:5:12","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3636:5:12"}],"functionName":{"name":"validator_revert_bool","nodeType":"YulIdentifier","src":"3614:21:12"},"nodeType":"YulFunctionCall","src":"3614:28:12"},"nodeType":"YulExpressionStatement","src":"3614:28:12"},{"nodeType":"YulAssignment","src":"3651:15:12","value":{"name":"value","nodeType":"YulIdentifier","src":"3661:5:12"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3651:6:12"}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3399:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3410:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3422:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3430:6:12","type":""}],"src":"3357:315:12"},{"body":{"nodeType":"YulBlock","src":"3851:182:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3868:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"3879:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3861:6:12"},"nodeType":"YulFunctionCall","src":"3861:21:12"},"nodeType":"YulExpressionStatement","src":"3861:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3902:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"3913:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3898:3:12"},"nodeType":"YulFunctionCall","src":"3898:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"3918:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3891:6:12"},"nodeType":"YulFunctionCall","src":"3891:30:12"},"nodeType":"YulExpressionStatement","src":"3891:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3941:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"3952:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3937:3:12"},"nodeType":"YulFunctionCall","src":"3937:18:12"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"3957:34:12","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3930:6:12"},"nodeType":"YulFunctionCall","src":"3930:62:12"},"nodeType":"YulExpressionStatement","src":"3930:62:12"},{"nodeType":"YulAssignment","src":"4001:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4013:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"4024:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4009:3:12"},"nodeType":"YulFunctionCall","src":"4009:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4001:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3828:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3842:4:12","type":""}],"src":"3677:356:12"},{"body":{"nodeType":"YulBlock","src":"4070:152:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4087:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4090:77:12","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4080:6:12"},"nodeType":"YulFunctionCall","src":"4080:88:12"},"nodeType":"YulExpressionStatement","src":"4080:88:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4184:1:12","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4187:4:12","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4177:6:12"},"nodeType":"YulFunctionCall","src":"4177:15:12"},"nodeType":"YulExpressionStatement","src":"4177:15:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4208:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4211:4:12","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4201:6:12"},"nodeType":"YulFunctionCall","src":"4201:15:12"},"nodeType":"YulExpressionStatement","src":"4201:15:12"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"4038:184:12"},{"body":{"nodeType":"YulBlock","src":"4259:152:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4276:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4279:77:12","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4269:6:12"},"nodeType":"YulFunctionCall","src":"4269:88:12"},"nodeType":"YulExpressionStatement","src":"4269:88:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4373:1:12","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4376:4:12","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4366:6:12"},"nodeType":"YulFunctionCall","src":"4366:15:12"},"nodeType":"YulExpressionStatement","src":"4366:15:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4397:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4400:4:12","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4390:6:12"},"nodeType":"YulFunctionCall","src":"4390:15:12"},"nodeType":"YulExpressionStatement","src":"4390:15:12"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"4227:184:12"},{"body":{"nodeType":"YulBlock","src":"4463:148:12","statements":[{"body":{"nodeType":"YulBlock","src":"4554:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"4556:16:12"},"nodeType":"YulFunctionCall","src":"4556:18:12"},"nodeType":"YulExpressionStatement","src":"4556:18:12"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4479:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"4486:66:12","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4476:2:12"},"nodeType":"YulFunctionCall","src":"4476:77:12"},"nodeType":"YulIf","src":"4473:103:12"},{"nodeType":"YulAssignment","src":"4585:20:12","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4596:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"4603:1:12","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4592:3:12"},"nodeType":"YulFunctionCall","src":"4592:13:12"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"4585:3:12"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4445:5:12","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"4455:3:12","type":""}],"src":"4416:195:12"},{"body":{"nodeType":"YulBlock","src":"4790:169:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4807:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"4818:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4800:6:12"},"nodeType":"YulFunctionCall","src":"4800:21:12"},"nodeType":"YulExpressionStatement","src":"4800:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4841:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"4852:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4837:3:12"},"nodeType":"YulFunctionCall","src":"4837:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"4857:2:12","type":"","value":"19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4830:6:12"},"nodeType":"YulFunctionCall","src":"4830:30:12"},"nodeType":"YulExpressionStatement","src":"4830:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4880:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"4891:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4876:3:12"},"nodeType":"YulFunctionCall","src":"4876:18:12"},{"hexValue":"4572726f723a206e6f74206d696e7461626c65","kind":"string","nodeType":"YulLiteral","src":"4896:21:12","type":"","value":"Error: not mintable"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4869:6:12"},"nodeType":"YulFunctionCall","src":"4869:49:12"},"nodeType":"YulExpressionStatement","src":"4869:49:12"},{"nodeType":"YulAssignment","src":"4927:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4939:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"4950:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4935:3:12"},"nodeType":"YulFunctionCall","src":"4935:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4927:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_0ede82dc9ae41bf2b2aee39aeb0f1780b14caf910cda71c7ce68835c5a4ee7f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4767:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4781:4:12","type":""}],"src":"4616:343:12"},{"body":{"nodeType":"YulBlock","src":"5043:194:12","statements":[{"body":{"nodeType":"YulBlock","src":"5089:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5098:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5101:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5091:6:12"},"nodeType":"YulFunctionCall","src":"5091:12:12"},"nodeType":"YulExpressionStatement","src":"5091:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5064:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"5073:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5060:3:12"},"nodeType":"YulFunctionCall","src":"5060:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"5085:2:12","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5056:3:12"},"nodeType":"YulFunctionCall","src":"5056:32:12"},"nodeType":"YulIf","src":"5053:52:12"},{"nodeType":"YulVariableDeclaration","src":"5114:29:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5133:9:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5127:5:12"},"nodeType":"YulFunctionCall","src":"5127:16:12"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5118:5:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"5191:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5200:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5203:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5193:6:12"},"nodeType":"YulFunctionCall","src":"5193:12:12"},"nodeType":"YulExpressionStatement","src":"5193:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5165:5:12"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5176:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"5183:4:12","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5172:3:12"},"nodeType":"YulFunctionCall","src":"5172:16:12"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5162:2:12"},"nodeType":"YulFunctionCall","src":"5162:27:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5155:6:12"},"nodeType":"YulFunctionCall","src":"5155:35:12"},"nodeType":"YulIf","src":"5152:55:12"},{"nodeType":"YulAssignment","src":"5216:15:12","value":{"name":"value","nodeType":"YulIdentifier","src":"5226:5:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5216:6:12"}]}]},"name":"abi_decode_tuple_t_uint8_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5009:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5020:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5032:6:12","type":""}],"src":"4964:273:12"},{"body":{"nodeType":"YulBlock","src":"5306:418:12","statements":[{"nodeType":"YulVariableDeclaration","src":"5316:16:12","value":{"kind":"number","nodeType":"YulLiteral","src":"5331:1:12","type":"","value":"1"},"variables":[{"name":"power_1","nodeType":"YulTypedName","src":"5320:7:12","type":""}]},{"nodeType":"YulAssignment","src":"5341:16:12","value":{"name":"power_1","nodeType":"YulIdentifier","src":"5350:7:12"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"5341:5:12"}]},{"nodeType":"YulAssignment","src":"5366:13:12","value":{"name":"_base","nodeType":"YulIdentifier","src":"5374:5:12"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"5366:4:12"}]},{"body":{"nodeType":"YulBlock","src":"5430:288:12","statements":[{"body":{"nodeType":"YulBlock","src":"5535:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"5537:16:12"},"nodeType":"YulFunctionCall","src":"5537:18:12"},"nodeType":"YulExpressionStatement","src":"5537:18:12"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"5450:4:12"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5460:66:12","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"base","nodeType":"YulIdentifier","src":"5528:4:12"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"5456:3:12"},"nodeType":"YulFunctionCall","src":"5456:77:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5447:2:12"},"nodeType":"YulFunctionCall","src":"5447:87:12"},"nodeType":"YulIf","src":"5444:113:12"},{"body":{"nodeType":"YulBlock","src":"5596:29:12","statements":[{"nodeType":"YulAssignment","src":"5598:25:12","value":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"5611:5:12"},{"name":"base","nodeType":"YulIdentifier","src":"5618:4:12"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5607:3:12"},"nodeType":"YulFunctionCall","src":"5607:16:12"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"5598:5:12"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"5577:8:12"},{"name":"power_1","nodeType":"YulIdentifier","src":"5587:7:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5573:3:12"},"nodeType":"YulFunctionCall","src":"5573:22:12"},"nodeType":"YulIf","src":"5570:55:12"},{"nodeType":"YulAssignment","src":"5638:23:12","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"5650:4:12"},{"name":"base","nodeType":"YulIdentifier","src":"5656:4:12"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5646:3:12"},"nodeType":"YulFunctionCall","src":"5646:15:12"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"5638:4:12"}]},{"nodeType":"YulAssignment","src":"5674:34:12","value":{"arguments":[{"name":"power_1","nodeType":"YulIdentifier","src":"5690:7:12"},{"name":"exponent","nodeType":"YulIdentifier","src":"5699:8:12"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"5686:3:12"},"nodeType":"YulFunctionCall","src":"5686:22:12"},"variableNames":[{"name":"exponent","nodeType":"YulIdentifier","src":"5674:8:12"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"5399:8:12"},{"name":"power_1","nodeType":"YulIdentifier","src":"5409:7:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5396:2:12"},"nodeType":"YulFunctionCall","src":"5396:21:12"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5418:3:12","statements":[]},"pre":{"nodeType":"YulBlock","src":"5392:3:12","statements":[]},"src":"5388:330:12"}]},"name":"checked_exp_helper","nodeType":"YulFunctionDefinition","parameters":[{"name":"_base","nodeType":"YulTypedName","src":"5270:5:12","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"5277:8:12","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"5290:5:12","type":""},{"name":"base","nodeType":"YulTypedName","src":"5297:4:12","type":""}],"src":"5242:482:12"},{"body":{"nodeType":"YulBlock","src":"5788:807:12","statements":[{"body":{"nodeType":"YulBlock","src":"5826:52:12","statements":[{"nodeType":"YulAssignment","src":"5840:10:12","value":{"kind":"number","nodeType":"YulLiteral","src":"5849:1:12","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"5840:5:12"}]},{"nodeType":"YulLeave","src":"5863:5:12"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"5808:8:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5801:6:12"},"nodeType":"YulFunctionCall","src":"5801:16:12"},"nodeType":"YulIf","src":"5798:80:12"},{"body":{"nodeType":"YulBlock","src":"5911:52:12","statements":[{"nodeType":"YulAssignment","src":"5925:10:12","value":{"kind":"number","nodeType":"YulLiteral","src":"5934:1:12","type":"","value":"0"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"5925:5:12"}]},{"nodeType":"YulLeave","src":"5948:5:12"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"5897:4:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5890:6:12"},"nodeType":"YulFunctionCall","src":"5890:12:12"},"nodeType":"YulIf","src":"5887:76:12"},{"cases":[{"body":{"nodeType":"YulBlock","src":"5999:52:12","statements":[{"nodeType":"YulAssignment","src":"6013:10:12","value":{"kind":"number","nodeType":"YulLiteral","src":"6022:1:12","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"6013:5:12"}]},{"nodeType":"YulLeave","src":"6036:5:12"}]},"nodeType":"YulCase","src":"5992:59:12","value":{"kind":"number","nodeType":"YulLiteral","src":"5997:1:12","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"6067:123:12","statements":[{"body":{"nodeType":"YulBlock","src":"6102:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6104:16:12"},"nodeType":"YulFunctionCall","src":"6104:18:12"},"nodeType":"YulExpressionStatement","src":"6104:18:12"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"6087:8:12"},{"kind":"number","nodeType":"YulLiteral","src":"6097:3:12","type":"","value":"255"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6084:2:12"},"nodeType":"YulFunctionCall","src":"6084:17:12"},"nodeType":"YulIf","src":"6081:43:12"},{"nodeType":"YulAssignment","src":"6137:25:12","value":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"6150:8:12"},{"kind":"number","nodeType":"YulLiteral","src":"6160:1:12","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6146:3:12"},"nodeType":"YulFunctionCall","src":"6146:16:12"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"6137:5:12"}]},{"nodeType":"YulLeave","src":"6175:5:12"}]},"nodeType":"YulCase","src":"6060:130:12","value":{"kind":"number","nodeType":"YulLiteral","src":"6065:1:12","type":"","value":"2"}}],"expression":{"name":"base","nodeType":"YulIdentifier","src":"5979:4:12"},"nodeType":"YulSwitch","src":"5972:218:12"},{"body":{"nodeType":"YulBlock","src":"6288:70:12","statements":[{"nodeType":"YulAssignment","src":"6302:28:12","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"6315:4:12"},{"name":"exponent","nodeType":"YulIdentifier","src":"6321:8:12"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"6311:3:12"},"nodeType":"YulFunctionCall","src":"6311:19:12"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"6302:5:12"}]},{"nodeType":"YulLeave","src":"6343:5:12"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"6212:4:12"},{"kind":"number","nodeType":"YulLiteral","src":"6218:2:12","type":"","value":"11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6209:2:12"},"nodeType":"YulFunctionCall","src":"6209:12:12"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"6226:8:12"},{"kind":"number","nodeType":"YulLiteral","src":"6236:2:12","type":"","value":"78"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6223:2:12"},"nodeType":"YulFunctionCall","src":"6223:16:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6205:3:12"},"nodeType":"YulFunctionCall","src":"6205:35:12"},{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"6249:4:12"},{"kind":"number","nodeType":"YulLiteral","src":"6255:3:12","type":"","value":"307"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6246:2:12"},"nodeType":"YulFunctionCall","src":"6246:13:12"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"6264:8:12"},{"kind":"number","nodeType":"YulLiteral","src":"6274:2:12","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6261:2:12"},"nodeType":"YulFunctionCall","src":"6261:16:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6242:3:12"},"nodeType":"YulFunctionCall","src":"6242:36:12"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"6202:2:12"},"nodeType":"YulFunctionCall","src":"6202:77:12"},"nodeType":"YulIf","src":"6199:159:12"},{"nodeType":"YulVariableDeclaration","src":"6367:57:12","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"6409:4:12"},{"name":"exponent","nodeType":"YulIdentifier","src":"6415:8:12"}],"functionName":{"name":"checked_exp_helper","nodeType":"YulIdentifier","src":"6390:18:12"},"nodeType":"YulFunctionCall","src":"6390:34:12"},"variables":[{"name":"power_1","nodeType":"YulTypedName","src":"6371:7:12","type":""},{"name":"base_1","nodeType":"YulTypedName","src":"6380:6:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"6529:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6531:16:12"},"nodeType":"YulFunctionCall","src":"6531:18:12"},"nodeType":"YulExpressionStatement","src":"6531:18:12"}]},"condition":{"arguments":[{"name":"power_1","nodeType":"YulIdentifier","src":"6439:7:12"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6452:66:12","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"base_1","nodeType":"YulIdentifier","src":"6520:6:12"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6448:3:12"},"nodeType":"YulFunctionCall","src":"6448:79:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6436:2:12"},"nodeType":"YulFunctionCall","src":"6436:92:12"},"nodeType":"YulIf","src":"6433:118:12"},{"nodeType":"YulAssignment","src":"6560:29:12","value":{"arguments":[{"name":"power_1","nodeType":"YulIdentifier","src":"6573:7:12"},{"name":"base_1","nodeType":"YulIdentifier","src":"6582:6:12"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6569:3:12"},"nodeType":"YulFunctionCall","src":"6569:20:12"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"6560:5:12"}]}]},"name":"checked_exp_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"5759:4:12","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"5765:8:12","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"5778:5:12","type":""}],"src":"5729:866:12"},{"body":{"nodeType":"YulBlock","src":"6668:72:12","statements":[{"nodeType":"YulAssignment","src":"6678:56:12","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"6708:4:12"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"6718:8:12"},{"kind":"number","nodeType":"YulLiteral","src":"6728:4:12","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6714:3:12"},"nodeType":"YulFunctionCall","src":"6714:19:12"}],"functionName":{"name":"checked_exp_unsigned","nodeType":"YulIdentifier","src":"6687:20:12"},"nodeType":"YulFunctionCall","src":"6687:47:12"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"6678:5:12"}]}]},"name":"checked_exp_t_uint256_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"6639:4:12","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"6645:8:12","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"6658:5:12","type":""}],"src":"6600:140:12"},{"body":{"nodeType":"YulBlock","src":"6797:176:12","statements":[{"body":{"nodeType":"YulBlock","src":"6916:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6918:16:12"},"nodeType":"YulFunctionCall","src":"6918:18:12"},"nodeType":"YulExpressionStatement","src":"6918:18:12"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6828:1:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6821:6:12"},"nodeType":"YulFunctionCall","src":"6821:9:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6814:6:12"},"nodeType":"YulFunctionCall","src":"6814:17:12"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6836:1:12"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6843:66:12","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"x","nodeType":"YulIdentifier","src":"6911:1:12"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6839:3:12"},"nodeType":"YulFunctionCall","src":"6839:74:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6833:2:12"},"nodeType":"YulFunctionCall","src":"6833:81:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6810:3:12"},"nodeType":"YulFunctionCall","src":"6810:105:12"},"nodeType":"YulIf","src":"6807:131:12"},{"nodeType":"YulAssignment","src":"6947:20:12","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6962:1:12"},{"name":"y","nodeType":"YulIdentifier","src":"6965:1:12"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6958:3:12"},"nodeType":"YulFunctionCall","src":"6958:9:12"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"6947:7:12"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6776:1:12","type":""},{"name":"y","nodeType":"YulTypedName","src":"6779:1:12","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"6785:7:12","type":""}],"src":"6745:228:12"},{"body":{"nodeType":"YulBlock","src":"7152:228:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7169:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"7180:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7162:6:12"},"nodeType":"YulFunctionCall","src":"7162:21:12"},"nodeType":"YulExpressionStatement","src":"7162:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7203:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"7214:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7199:3:12"},"nodeType":"YulFunctionCall","src":"7199:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"7219:2:12","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7192:6:12"},"nodeType":"YulFunctionCall","src":"7192:30:12"},"nodeType":"YulExpressionStatement","src":"7192:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7242:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"7253:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7238:3:12"},"nodeType":"YulFunctionCall","src":"7238:18:12"},{"hexValue":"4572726f723a204d696e74206c696d6974207472616e73616374696f6e206578","kind":"string","nodeType":"YulLiteral","src":"7258:34:12","type":"","value":"Error: Mint limit transaction ex"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7231:6:12"},"nodeType":"YulFunctionCall","src":"7231:62:12"},"nodeType":"YulExpressionStatement","src":"7231:62:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7313:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"7324:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7309:3:12"},"nodeType":"YulFunctionCall","src":"7309:18:12"},{"hexValue":"636565646564","kind":"string","nodeType":"YulLiteral","src":"7329:8:12","type":"","value":"ceeded"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7302:6:12"},"nodeType":"YulFunctionCall","src":"7302:36:12"},"nodeType":"YulExpressionStatement","src":"7302:36:12"},{"nodeType":"YulAssignment","src":"7347:27:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7359:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"7370:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7355:3:12"},"nodeType":"YulFunctionCall","src":"7355:19:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7347:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_4c70a5af4f9f1eecb7d3eacc63eb554c1747b9b8db0d040cf0e0675c3461312e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7129:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7143:4:12","type":""}],"src":"6978:402:12"},{"body":{"nodeType":"YulBlock","src":"7514:168:12","statements":[{"nodeType":"YulAssignment","src":"7524:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7536:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"7547:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7532:3:12"},"nodeType":"YulFunctionCall","src":"7532:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7524:4:12"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7566:9:12"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7581:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"7589:42:12","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7577:3:12"},"nodeType":"YulFunctionCall","src":"7577:55:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7559:6:12"},"nodeType":"YulFunctionCall","src":"7559:74:12"},"nodeType":"YulExpressionStatement","src":"7559:74:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7653:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"7664:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7649:3:12"},"nodeType":"YulFunctionCall","src":"7649:18:12"},{"name":"value1","nodeType":"YulIdentifier","src":"7669:6:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7642:6:12"},"nodeType":"YulFunctionCall","src":"7642:34:12"},"nodeType":"YulExpressionStatement","src":"7642:34:12"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7475:9:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7486:6:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7494:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7505:4:12","type":""}],"src":"7385:297:12"},{"body":{"nodeType":"YulBlock","src":"7765:167:12","statements":[{"body":{"nodeType":"YulBlock","src":"7811:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7820:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7823:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7813:6:12"},"nodeType":"YulFunctionCall","src":"7813:12:12"},"nodeType":"YulExpressionStatement","src":"7813:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7786:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"7795:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7782:3:12"},"nodeType":"YulFunctionCall","src":"7782:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"7807:2:12","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7778:3:12"},"nodeType":"YulFunctionCall","src":"7778:32:12"},"nodeType":"YulIf","src":"7775:52:12"},{"nodeType":"YulVariableDeclaration","src":"7836:29:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7855:9:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7849:5:12"},"nodeType":"YulFunctionCall","src":"7849:16:12"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"7840:5:12","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7896:5:12"}],"functionName":{"name":"validator_revert_bool","nodeType":"YulIdentifier","src":"7874:21:12"},"nodeType":"YulFunctionCall","src":"7874:28:12"},"nodeType":"YulExpressionStatement","src":"7874:28:12"},{"nodeType":"YulAssignment","src":"7911:15:12","value":{"name":"value","nodeType":"YulIdentifier","src":"7921:5:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7911:6:12"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7731:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7742:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7754:6:12","type":""}],"src":"7687:245:12"},{"body":{"nodeType":"YulBlock","src":"8111:228:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8128:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"8139:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8121:6:12"},"nodeType":"YulFunctionCall","src":"8121:21:12"},"nodeType":"YulExpressionStatement","src":"8121:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8162:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"8173:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8158:3:12"},"nodeType":"YulFunctionCall","src":"8158:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"8178:2:12","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8151:6:12"},"nodeType":"YulFunctionCall","src":"8151:30:12"},"nodeType":"YulExpressionStatement","src":"8151:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8201:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"8212:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8197:3:12"},"nodeType":"YulFunctionCall","src":"8197:18:12"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"8217:34:12","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8190:6:12"},"nodeType":"YulFunctionCall","src":"8190:62:12"},"nodeType":"YulExpressionStatement","src":"8190:62:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8272:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"8283:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8268:3:12"},"nodeType":"YulFunctionCall","src":"8268:18:12"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"8288:8:12","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8261:6:12"},"nodeType":"YulFunctionCall","src":"8261:36:12"},"nodeType":"YulExpressionStatement","src":"8261:36:12"},{"nodeType":"YulAssignment","src":"8306:27:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8318:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"8329:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8314:3:12"},"nodeType":"YulFunctionCall","src":"8314:19:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8306:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8088:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8102:4:12","type":""}],"src":"7937:402:12"}]},"contents":"{\n    { }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_array_address_dyn_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, shl(5, length)), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value0_1, value1_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n        value2 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_bool(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value0_1, value1_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n        let value := calldataload(add(headStart, 32))\n        validator_revert_bool(value)\n        value2 := value\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_bool(value)\n        value1 := value\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_0ede82dc9ae41bf2b2aee39aeb0f1780b14caf910cda71c7ce68835c5a4ee7f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Error: not mintable\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value0 := value\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_4c70a5af4f9f1eecb7d3eacc63eb554c1747b9b8db0d040cf0e0675c3461312e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Error: Mint limit transaction ex\")\n        mstore(add(headStart, 96), \"ceeded\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n}","id":12,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100d45760003560e01c8063c6c3bbe611610081578063e2a4157c1161005b578063e2a4157c146101cf578063f2fde38b146101da578063f7eb06c4146101ed57600080fd5b8063c6c3bbe614610193578063ca51a903146101b4578063dd26b1d3146101c757600080fd5b8063715018a6116100b2578063715018a6146101505780638da5cb5b146101585780639420d4761461018057600080fd5b80631a678cd3146100d9578063222b15fb146100ee578063506f26cc1461013d575b600080fd5b6100ec6100e7366004610c38565b610200565b005b6101286100fc366004610c85565b73ffffffffffffffffffffffffffffffffffffffff1660009081526002602052604090205460ff161590565b60405190151581526020015b60405180910390f35b6100ec61014b366004610cec565b6102b7565b6100ec610406565b60005460405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610134565b6100ec61018e366004610d40565b6104f6565b6101a66101a1366004610d59565b61057c565b604051908152602001610134565b6100ec6101c2366004610d95565b610858565b6001546101a6565b60035460ff16610128565b6100ec6101e8366004610c85565b6109a1565b6100ec6101fb366004610dec565b610b52565b60005473ffffffffffffffffffffffffffffffffffffffff163314610286576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b600380547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055565b60005473ffffffffffffffffffffffffffffffffffffffff163314610338576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161027d565b60005b828110156104005783838281811061035557610355610e23565b905060200201602081019061036a9190610c85565b6040517ff2fde38b00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8481166004830152919091169063f2fde38b90602401600060405180830381600087803b1580156103d557600080fd5b505af11580156103e9573d6000803e3d6000fd5b5050505080806103f890610e81565b91505061033b565b50505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610487576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161027d565b6000805460405173ffffffffffffffffffffffffffffffffffffffff909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b60005473ffffffffffffffffffffffffffffffffffffffff163314610577576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161027d565b600155565b60035460009060ff161515600114156106105760005473ffffffffffffffffffffffffffffffffffffffff163314610610576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161027d565b73ffffffffffffffffffffffffffffffffffffffff841660009081526002602052604090205460ff16156106a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4572726f723a206e6f74206d696e7461626c6500000000000000000000000000604482015260640161027d565b8373ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061070f9190610eba565b61071a90600a610fff565b600154610727919061100e565b8211156107b6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4572726f723a204d696e74206c696d6974207472616e73616374696f6e20657860448201527f6365656465640000000000000000000000000000000000000000000000000000606482015260840161027d565b6040517f40c10f1900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8481166004830152602482018490528516906340c10f19906044016020604051808303816000875af115801561082b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084f919061104b565b50909392505050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146108d9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161027d565b60005b82811015610400578383828181106108f6576108f6610e23565b905060200201602081019061090b9190610c85565b6040517f1c02bc31000000000000000000000000000000000000000000000000000000008152831515600482015273ffffffffffffffffffffffffffffffffffffffff9190911690631c02bc3190602401600060405180830381600087803b15801561097657600080fd5b505af115801561098a573d6000803e3d6000fd5b50505050808061099990610e81565b9150506108dc565b60005473ffffffffffffffffffffffffffffffffffffffff163314610a22576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161027d565b73ffffffffffffffffffffffffffffffffffffffff8116610ac5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161027d565b6000805460405173ffffffffffffffffffffffffffffffffffffffff808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60005473ffffffffffffffffffffffffffffffffffffffff163314610bd3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161027d565b73ffffffffffffffffffffffffffffffffffffffff909116600090815260026020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169115919091179055565b8015158114610c3557600080fd5b50565b600060208284031215610c4a57600080fd5b8135610c5581610c27565b9392505050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610c8057600080fd5b919050565b600060208284031215610c9757600080fd5b610c5582610c5c565b60008083601f840112610cb257600080fd5b50813567ffffffffffffffff811115610cca57600080fd5b6020830191508360208260051b8501011115610ce557600080fd5b9250929050565b600080600060408486031215610d0157600080fd5b833567ffffffffffffffff811115610d1857600080fd5b610d2486828701610ca0565b9094509250610d37905060208501610c5c565b90509250925092565b600060208284031215610d5257600080fd5b5035919050565b600080600060608486031215610d6e57600080fd5b610d7784610c5c565b9250610d8560208501610c5c565b9150604084013590509250925092565b600080600060408486031215610daa57600080fd5b833567ffffffffffffffff811115610dc157600080fd5b610dcd86828701610ca0565b9094509250506020840135610de181610c27565b809150509250925092565b60008060408385031215610dff57600080fd5b610e0883610c5c565b91506020830135610e1881610c27565b809150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610eb357610eb3610e52565b5060010190565b600060208284031215610ecc57600080fd5b815160ff81168114610c5557600080fd5b600181815b80851115610f3657817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821115610f1c57610f1c610e52565b80851615610f2957918102915b93841c9390800290610ee2565b509250929050565b600082610f4d57506001610ff9565b81610f5a57506000610ff9565b8160018114610f705760028114610f7a57610f96565b6001915050610ff9565b60ff841115610f8b57610f8b610e52565b50506001821b610ff9565b5060208310610133831016604e8410600b8410161715610fb9575081810a610ff9565b610fc38383610edd565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821115610ff557610ff5610e52565b0290505b92915050565b6000610c5560ff841683610f3e565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561104657611046610e52565b500290565b60006020828403121561105d57600080fd5b8151610c5581610c2756fea264697066735822122042ee87c362c023968f528f743b4b754d43798bad978b093bcdae6aa3c0ecb33b64736f6c634300080a0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xD4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC6C3BBE6 GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xE2A4157C GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xE2A4157C EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0xF7EB06C4 EQ PUSH2 0x1ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC6C3BBE6 EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0xCA51A903 EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0xDD26B1D3 EQ PUSH2 0x1C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0x9420D476 EQ PUSH2 0x180 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1A678CD3 EQ PUSH2 0xD9 JUMPI DUP1 PUSH4 0x222B15FB EQ PUSH2 0xEE JUMPI DUP1 PUSH4 0x506F26CC EQ PUSH2 0x13D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEC PUSH2 0xE7 CALLDATASIZE PUSH1 0x4 PUSH2 0xC38 JUMP JUMPDEST PUSH2 0x200 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x128 PUSH2 0xFC CALLDATASIZE PUSH1 0x4 PUSH2 0xC85 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEC PUSH2 0x14B CALLDATASIZE PUSH1 0x4 PUSH2 0xCEC JUMP JUMPDEST PUSH2 0x2B7 JUMP JUMPDEST PUSH2 0xEC PUSH2 0x406 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x134 JUMP JUMPDEST PUSH2 0xEC PUSH2 0x18E CALLDATASIZE PUSH1 0x4 PUSH2 0xD40 JUMP JUMPDEST PUSH2 0x4F6 JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x1A1 CALLDATASIZE PUSH1 0x4 PUSH2 0xD59 JUMP JUMPDEST PUSH2 0x57C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x134 JUMP JUMPDEST PUSH2 0xEC PUSH2 0x1C2 CALLDATASIZE PUSH1 0x4 PUSH2 0xD95 JUMP JUMPDEST PUSH2 0x858 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x1A6 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xFF AND PUSH2 0x128 JUMP JUMPDEST PUSH2 0xEC PUSH2 0x1E8 CALLDATASIZE PUSH1 0x4 PUSH2 0xC85 JUMP JUMPDEST PUSH2 0x9A1 JUMP JUMPDEST PUSH2 0xEC PUSH2 0x1FB CALLDATASIZE PUSH1 0x4 PUSH2 0xDEC JUMP JUMPDEST PUSH2 0xB52 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x286 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x338 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x27D JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x400 JUMPI DUP4 DUP4 DUP3 DUP2 DUP2 LT PUSH2 0x355 JUMPI PUSH2 0x355 PUSH2 0xE23 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x36A SWAP2 SWAP1 PUSH2 0xC85 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xF2FDE38B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0xF2FDE38B SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3E9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 DUP1 PUSH2 0x3F8 SWAP1 PUSH2 0xE81 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x33B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x487 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x27D JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x577 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x27D JUMP JUMPDEST PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ ISZERO PUSH2 0x610 JUMPI PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x610 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x27D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x6A0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4572726F723A206E6F74206D696E7461626C6500000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x27D JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6EB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x70F SWAP2 SWAP1 PUSH2 0xEBA JUMP JUMPDEST PUSH2 0x71A SWAP1 PUSH1 0xA PUSH2 0xFFF JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x727 SWAP2 SWAP1 PUSH2 0x100E JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x7B6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4572726F723A204D696E74206C696D6974207472616E73616374696F6E206578 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6365656465640000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x27D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x40C10F1900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE DUP6 AND SWAP1 PUSH4 0x40C10F19 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x82B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x84F SWAP2 SWAP1 PUSH2 0x104B JUMP JUMPDEST POP SWAP1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x8D9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x27D JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x400 JUMPI DUP4 DUP4 DUP3 DUP2 DUP2 LT PUSH2 0x8F6 JUMPI PUSH2 0x8F6 PUSH2 0xE23 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x90B SWAP2 SWAP1 PUSH2 0xC85 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1C02BC3100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 ISZERO ISZERO PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x1C02BC31 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x976 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x98A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 DUP1 PUSH2 0x999 SWAP1 PUSH2 0xE81 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x8DC JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0xA22 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x27D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0xAC5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x27D JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0xBD3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x27D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP2 ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xC35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xC55 DUP2 PUSH2 0xC27 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xC80 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC55 DUP3 PUSH2 0xC5C JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xCB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCCA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0xCE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xD01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD24 DUP7 DUP3 DUP8 ADD PUSH2 0xCA0 JUMP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP PUSH2 0xD37 SWAP1 POP PUSH1 0x20 DUP6 ADD PUSH2 0xC5C JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xD6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD77 DUP5 PUSH2 0xC5C JUMP JUMPDEST SWAP3 POP PUSH2 0xD85 PUSH1 0x20 DUP6 ADD PUSH2 0xC5C JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xDAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xDC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDCD DUP7 DUP3 DUP8 ADD PUSH2 0xCA0 JUMP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0xDE1 DUP2 PUSH2 0xC27 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE08 DUP4 PUSH2 0xC5C JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0xE18 DUP2 PUSH2 0xC27 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0xEB3 JUMPI PUSH2 0xEB3 PUSH2 0xE52 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xECC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0xC55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0xF36 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP3 GT ISZERO PUSH2 0xF1C JUMPI PUSH2 0xF1C PUSH2 0xE52 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0xF29 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0xEE2 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xF4D JUMPI POP PUSH1 0x1 PUSH2 0xFF9 JUMP JUMPDEST DUP2 PUSH2 0xF5A JUMPI POP PUSH1 0x0 PUSH2 0xFF9 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0xF70 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xF7A JUMPI PUSH2 0xF96 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xFF9 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0xF8B JUMPI PUSH2 0xF8B PUSH2 0xE52 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0xFF9 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0xFB9 JUMPI POP DUP2 DUP2 EXP PUSH2 0xFF9 JUMP JUMPDEST PUSH2 0xFC3 DUP4 DUP4 PUSH2 0xEDD JUMP JUMPDEST DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP3 GT ISZERO PUSH2 0xFF5 JUMPI PUSH2 0xFF5 PUSH2 0xE52 JUMP JUMPDEST MUL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC55 PUSH1 0xFF DUP5 AND DUP4 PUSH2 0xF3E JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1046 JUMPI PUSH2 0x1046 PUSH2 0xE52 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x105D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xC55 DUP2 PUSH2 0xC27 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TIMESTAMP 0xEE DUP8 0xC3 PUSH3 0xC02396 DUP16 MSTORE DUP16 PUSH21 0x3B4B754D43798BAD978B093BCDAE6AA3C0ECB33B64 PUSH20 0x6F6C634300080A00330000000000000000000000 ","sourceMap":"305:2714:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1631:111;;;;;;:::i;:::-;;:::i;:::-;;2044;;;;;;:::i;:::-;2131:19;;2111:4;2131:19;;;:12;:19;;;;;;;;2130:20;;2044:111;;;;940:14:12;;933:22;915:41;;903:2;888:18;2044:111:9;;;;;;;;2185:258;;;;;;:::i;:::-;;:::i;1601:135:4:-;;;:::i;1018:71::-;1056:7;1078:6;1018:71;;1078:6;;;;2001:74:12;;1989:2;1974:18;1018:71:4;1855:226:12;2748:131:9;;;;;;:::i;:::-;;:::i;1200:401::-;;;;;;:::i;:::-;;:::i;:::-;;;2750:25:12;;;2738:2;2723:18;1200:401:9;2604:177:12;2473:244:9;;;;;;:::i;:::-;;:::i;2909:108::-;2995:17;;2909:108;;1772:95;1849:13;;;;1772:95;;1875:226:4;;;;;;:::i;:::-;;:::i;1897:117:9:-;;;;;;:::i;:::-;;:::i;1631:111::-;1204:6:4;;:22;:6;678:10:1;1204:22:4;1196:67;;;;;;;3879:2:12;1196:67:4;;;3861:21:12;;;3898:18;;;3891:30;3957:34;3937:18;;;3930:62;4009:18;;1196:67:4;;;;;;;;;1709:13:9::1;:28:::0;;;::::1;::::0;::::1;;::::0;;;::::1;::::0;;1631:111::o;2185:258::-;1204:6:4;;:22;:6;678:10:1;1204:22:4;1196:67;;;;;;;3879:2:12;1196:67:4;;;3861:21:12;;;3898:18;;;3891:30;3957:34;3937:18;;;3930:62;4009:18;;1196:67:4;3677:356:12;1196:67:4;2323:9:9::1;2318:121;2338:25:::0;;::::1;2318:121;;;2386:14;;2401:1;2386:17;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;2378:54;::::0;;;;:44:::1;2019:55:12::0;;;2378:54:9::1;::::0;::::1;2001:74:12::0;2378:44:9;;;::::1;::::0;::::1;::::0;1974:18:12;;2378:54:9::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2365:3;;;;;:::i;:::-;;;;2318:121;;;;2185:258:::0;;;:::o;1601:135:4:-;1204:6;;:22;:6;678:10:1;1204:22:4;1196:67;;;;;;;3879:2:12;1196:67:4;;;3861:21:12;;;3898:18;;;3891:30;3957:34;3937:18;;;3930:62;4009:18;;1196:67:4;3677:356:12;1196:67:4;1703:1:::1;1687:6:::0;;1666:40:::1;::::0;::::1;1687:6:::0;;::::1;::::0;1666:40:::1;::::0;1703:1;;1666:40:::1;1729:1;1712:19:::0;;;::::1;::::0;;1601:135::o;2748:131:9:-;1204:6:4;;:22;:6;678:10:1;1204:22:4;1196:67;;;;;;;3879:2:12;1196:67:4;;;3861:21:12;;;3898:18;;;3891:30;3957:34;3937:18;;;3930:62;4009:18;;1196:67:4;3677:356:12;1196:67:4;2838:17:9::1;:36:::0;2748:131::o;1200:401::-;1053:13;;1324:7;;1053:13;;:21;;:13;:21;1049:110;;;1056:7:4;1078:6;1092:23:9;1078:6:4;678:10:1;1092:23:9;1084:68;;;;;;;3879:2:12;1084:68:9;;;3861:21:12;;;3898:18;;;3891:30;3957:34;3937:18;;;3930:62;4009:18;;1084:68:9;3677:356:12;1084:68:9;1348:19:::1;::::0;::::1;;::::0;;;:12:::1;:19;::::0;;;;;::::1;;1347:20;1339:52;;;::::0;::::1;::::0;;4818:2:12;1339:52:9::1;::::0;::::1;4800:21:12::0;4857:2;4837:18;;;4830:30;4896:21;4876:18;;;4869:49;4935:18;;1339:52:9::1;4616:343:12::0;1339:52:9::1;1462:5;1449:28;;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1443:36;::::0;:2:::1;:36;:::i;:::-;1422:17;;:58;;;;:::i;:::-;1412:6;:68;;1397:137;;;::::0;::::1;::::0;;7180:2:12;1397:137:9::1;::::0;::::1;7162:21:12::0;7219:2;7199:18;;;7192:30;7258:34;7238:18;;;7231:62;7329:8;7309:18;;;7302:36;7355:19;;1397:137:9::1;6978:402:12::0;1397:137:9::1;1541:36;::::0;;;;:24:::1;7577:55:12::0;;;1541:36:9::1;::::0;::::1;7559:74:12::0;7649:18;;;7642:34;;;1541:24:9;::::1;::::0;::::1;::::0;7532:18:12;;1541:36:9::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;1590:6:9;;1200:401;-1:-1:-1;;;1200:401:9:o;2473:244::-;1204:6:4;;:22;:6;678:10:1;1204:22:4;1196:67;;;;;;;3879:2:12;1196:67:4;;;3861:21:12;;;3898:18;;;3891:30;3957:34;3937:18;;;3930:62;4009:18;;1196:67:4;3677:356:12;1196:67:4;2600:9:9::1;2595:118;2615:25:::0;;::::1;2595:118;;;2668:14;;2683:1;2668:17;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;2655:51;::::0;;;;940:14:12;;933:22;2655:51:9::1;::::0;::::1;915:41:12::0;2655:44:9::1;::::0;;;::::1;::::0;::::1;::::0;888:18:12;;2655:51:9::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2642:3;;;;;:::i;:::-;;;;2595:118;;1875:226:4::0;1204:6;;:22;:6;678:10:1;1204:22:4;1196:67;;;;;;;3879:2:12;1196:67:4;;;3861:21:12;;;3898:18;;;3891:30;3957:34;3937:18;;;3930:62;4009:18;;1196:67:4;3677:356:12;1196:67:4;1959:22:::1;::::0;::::1;1951:73;;;::::0;::::1;::::0;;8139:2:12;1951:73:4::1;::::0;::::1;8121:21:12::0;8178:2;8158:18;;;8151:30;8217:34;8197:18;;;8190:62;8288:8;8268:18;;;8261:36;8314:19;;1951:73:4::1;7937:402:12::0;1951:73:4::1;2056:6;::::0;;2035:38:::1;::::0;::::1;::::0;;::::1;::::0;2056:6;::::1;::::0;2035:38:::1;::::0;::::1;2079:6;:17:::0;;;::::1;;::::0;;;::::1;::::0;;;::::1;::::0;;1875:226::o;1897:117:9:-;1204:6:4;;:22;:6;678:10:1;1204:22:4;1196:67;;;;;;;3879:2:12;1196:67:4;;;3861:21:12;;;3898:18;;;3891:30;3957:34;3937:18;;;3930:62;4009:18;;1196:67:4;3677:356:12;1196:67:4;1980:19:9::1;::::0;;::::1;;::::0;;;:12:::1;:19;::::0;;;;:29;;;::::1;2002:7:::0;::::1;1980:29:::0;;;::::1;::::0;;1897:117::o;14:118:12:-;100:5;93:13;86:21;79:5;76:32;66:60;;122:1;119;112:12;66:60;14:118;:::o;137:241::-;193:6;246:2;234:9;225:7;221:23;217:32;214:52;;;262:1;259;252:12;214:52;301:9;288:23;320:28;342:5;320:28;:::i;:::-;367:5;137:241;-1:-1:-1;;;137:241:12:o;383:196::-;451:20;;511:42;500:54;;490:65;;480:93;;569:1;566;559:12;480:93;383:196;;;:::o;584:186::-;643:6;696:2;684:9;675:7;671:23;667:32;664:52;;;712:1;709;702:12;664:52;735:29;754:9;735:29;:::i;967:367::-;1030:8;1040:6;1094:3;1087:4;1079:6;1075:17;1071:27;1061:55;;1112:1;1109;1102:12;1061:55;-1:-1:-1;1135:20:12;;1178:18;1167:30;;1164:50;;;1210:1;1207;1200:12;1164:50;1247:4;1239:6;1235:17;1223:29;;1307:3;1300:4;1290:6;1287:1;1283:14;1275:6;1271:27;1267:38;1264:47;1261:67;;;1324:1;1321;1314:12;1261:67;967:367;;;;;:::o;1339:511::-;1434:6;1442;1450;1503:2;1491:9;1482:7;1478:23;1474:32;1471:52;;;1519:1;1516;1509:12;1471:52;1559:9;1546:23;1592:18;1584:6;1581:30;1578:50;;;1624:1;1621;1614:12;1578:50;1663:70;1725:7;1716:6;1705:9;1701:22;1663:70;:::i;:::-;1752:8;;-1:-1:-1;1637:96:12;-1:-1:-1;1806:38:12;;-1:-1:-1;1840:2:12;1825:18;;1806:38;:::i;:::-;1796:48;;1339:511;;;;;:::o;2086:180::-;2145:6;2198:2;2186:9;2177:7;2173:23;2169:32;2166:52;;;2214:1;2211;2204:12;2166:52;-1:-1:-1;2237:23:12;;2086:180;-1:-1:-1;2086:180:12:o;2271:328::-;2348:6;2356;2364;2417:2;2405:9;2396:7;2392:23;2388:32;2385:52;;;2433:1;2430;2423:12;2385:52;2456:29;2475:9;2456:29;:::i;:::-;2446:39;;2504:38;2538:2;2527:9;2523:18;2504:38;:::i;:::-;2494:48;;2589:2;2578:9;2574:18;2561:32;2551:42;;2271:328;;;;;:::o;2786:566::-;2878:6;2886;2894;2947:2;2935:9;2926:7;2922:23;2918:32;2915:52;;;2963:1;2960;2953:12;2915:52;3003:9;2990:23;3036:18;3028:6;3025:30;3022:50;;;3068:1;3065;3058:12;3022:50;3107:70;3169:7;3160:6;3149:9;3145:22;3107:70;:::i;:::-;3196:8;;-1:-1:-1;3081:96:12;-1:-1:-1;;3281:2:12;3266:18;;3253:32;3294:28;3253:32;3294:28;:::i;:::-;3341:5;3331:15;;;2786:566;;;;;:::o;3357:315::-;3422:6;3430;3483:2;3471:9;3462:7;3458:23;3454:32;3451:52;;;3499:1;3496;3489:12;3451:52;3522:29;3541:9;3522:29;:::i;:::-;3512:39;;3601:2;3590:9;3586:18;3573:32;3614:28;3636:5;3614:28;:::i;:::-;3661:5;3651:15;;;3357:315;;;;;:::o;4038:184::-;4090:77;4087:1;4080:88;4187:4;4184:1;4177:15;4211:4;4208:1;4201:15;4227:184;4279:77;4276:1;4269:88;4376:4;4373:1;4366:15;4400:4;4397:1;4390:15;4416:195;4455:3;4486:66;4479:5;4476:77;4473:103;;;4556:18;;:::i;:::-;-1:-1:-1;4603:1:12;4592:13;;4416:195::o;4964:273::-;5032:6;5085:2;5073:9;5064:7;5060:23;5056:32;5053:52;;;5101:1;5098;5091:12;5053:52;5133:9;5127:16;5183:4;5176:5;5172:16;5165:5;5162:27;5152:55;;5203:1;5200;5193:12;5242:482;5331:1;5374:5;5331:1;5388:330;5409:7;5399:8;5396:21;5388:330;;;5528:4;5460:66;5456:77;5450:4;5447:87;5444:113;;;5537:18;;:::i;:::-;5587:7;5577:8;5573:22;5570:55;;;5607:16;;;;5570:55;5686:22;;;;5646:15;;;;5388:330;;;5392:3;5242:482;;;;;:::o;5729:866::-;5778:5;5808:8;5798:80;;-1:-1:-1;5849:1:12;5863:5;;5798:80;5897:4;5887:76;;-1:-1:-1;5934:1:12;5948:5;;5887:76;5979:4;5997:1;5992:59;;;;6065:1;6060:130;;;;5972:218;;5992:59;6022:1;6013:10;;6036:5;;;6060:130;6097:3;6087:8;6084:17;6081:43;;;6104:18;;:::i;:::-;-1:-1:-1;;6160:1:12;6146:16;;6175:5;;5972:218;;6274:2;6264:8;6261:16;6255:3;6249:4;6246:13;6242:36;6236:2;6226:8;6223:16;6218:2;6212:4;6209:12;6205:35;6202:77;6199:159;;;-1:-1:-1;6311:19:12;;;6343:5;;6199:159;6390:34;6415:8;6409:4;6390:34;:::i;:::-;6520:6;6452:66;6448:79;6439:7;6436:92;6433:118;;;6531:18;;:::i;:::-;6569:20;;-1:-1:-1;5729:866:12;;;;;:::o;6600:140::-;6658:5;6687:47;6728:4;6718:8;6714:19;6708:4;6687:47;:::i;6745:228::-;6785:7;6911:1;6843:66;6839:74;6836:1;6833:81;6828:1;6821:9;6814:17;6810:105;6807:131;;;6918:18;;:::i;:::-;-1:-1:-1;6958:9:12;;6745:228::o;7687:245::-;7754:6;7807:2;7795:9;7786:7;7782:23;7778:32;7775:52;;;7823:1;7820;7813:12;7775:52;7855:9;7849:16;7874:28;7896:5;7874:28;:::i"},"gasEstimates":{"creation":{"codeDepositCost":"850800","executionCost":"infinite","totalCost":"infinite"},"external":{"getMaximumMintAmount()":"2359","isMintable(address)":"2563","isPermissioned()":"2315","mint(address,address,uint256)":"infinite","owner()":"2334","renounceOwnership()":"30149","setMaximumMintAmount(uint256)":"24519","setMintable(address,bool)":"26884","setPermissioned(bool)":"26672","setProtectedOfChild(address[],bool)":"infinite","transferOwnership(address)":"30369","transferOwnershipOfChild(address[],address)":"infinite"}},"methodIdentifiers":{"getMaximumMintAmount()":"dd26b1d3","isMintable(address)":"222b15fb","isPermissioned()":"e2a4157c","mint(address,address,uint256)":"c6c3bbe6","owner()":"8da5cb5b","renounceOwnership()":"715018a6","setMaximumMintAmount(uint256)":"9420d476","setMintable(address,bool)":"f7eb06c4","setPermissioned(bool)":"1a678cd3","setProtectedOfChild(address[],bool)":"ca51a903","transferOwnership(address)":"f2fde38b","transferOwnershipOfChild(address[],address)":"506f26cc"}},"metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"permissioned\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"maxMinAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getMaximumMintAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"isMintable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPermissioned\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newMaxMintAmount\",\"type\":\"uint256\"}],\"name\":\"setMaximumMintAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"name\":\"setMintable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"permissioned\",\"type\":\"bool\"}],\"name\":\"setPermissioned\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"childContracts\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"state\",\"type\":\"bool\"}],\"name\":\"setProtectedOfChild\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"childContracts\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnershipOfChild\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Ownable Faucet Contract\",\"kind\":\"dev\",\"methods\":{\"getMaximumMintAmount()\":{\"returns\":{\"_0\":\"The maximum amount of tokens per mint allowed (whole tokens)\"}},\"isMintable(address)\":{\"params\":{\"asset\":\"The address of the asset\"},\"returns\":{\"_0\":\"True if the asset is mintable, false otherwise\"}},\"isPermissioned()\":{\"returns\":{\"_0\":\"Returns a boolean, if true the mode is enabled, if false is disabled\"}},\"mint(address,address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens to mint\",\"to\":\"The address to send the minted tokens\",\"token\":\"The address of the token to perform the mint\"},\"returns\":{\"_0\":\"The amount minted*\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setMaximumMintAmount(uint256)\":{\"params\":{\"newMaxMintAmount\":\"The new value of maximum amount of tokens per mint (whole tokens)\"}},\"setMintable(address,bool)\":{\"params\":{\"active\":\"True to enable, false to disable\",\"asset\":\"The address of the asset\"}},\"setPermissioned(bool)\":{\"params\":{\"value\":\"If true, ask for authentication at `mint` function, if false, disable the authentication\"}},\"setProtectedOfChild(address[],bool)\":{\"params\":{\"childContracts\":\"A list of child token contract addresses\",\"state\":\"True if tokens are only mintable through Faucet, false otherwise\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"transferOwnershipOfChild(address[],address)\":{\"params\":{\"childContracts\":\"A list of child contract addresses\",\"newOwner\":\"The address of the new owner\"}}},\"title\":\"Faucet\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getMaximumMintAmount()\":{\"notice\":\"Returns the maximum amount of tokens per mint allowed\"},\"isMintable(address)\":{\"notice\":\"Returns whether the asset is mintable\"},\"isPermissioned()\":{\"notice\":\"Getter to determine if permissioned mode is enabled or disabled\"},\"mint(address,address,uint256)\":{\"notice\":\"Function to mint Testnet tokens to the destination address\"},\"setMaximumMintAmount(uint256)\":{\"notice\":\"Updates the maximum amount of tokens per mint allowed\"},\"setMintable(address,bool)\":{\"notice\":\"Enable or disable the minting of the faucet asset\"},\"setPermissioned(bool)\":{\"notice\":\"Enable or disable the need of authentication to call `mint` function\"},\"setProtectedOfChild(address[],bool)\":{\"notice\":\"Updates protection of minting feature of child token contracts\"},\"transferOwnershipOfChild(address[],address)\":{\"notice\":\"Transfer the ownership of child contracts\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mocks/testnet-helpers/Faucet.sol\":\"Faucet\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":25000},\"remappings\":[]},\"sources\":{\"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Address.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n  /**\\n   * @dev Returns true if `account` is a contract.\\n   *\\n   * [IMPORTANT]\\n   * ====\\n   * It is unsafe to assume that an address for which this function returns\\n   * false is an externally-owned account (EOA) and not a contract.\\n   *\\n   * Among others, `isContract` will return false for the following\\n   * types of addresses:\\n   *\\n   *  - an externally-owned account\\n   *  - a contract in construction\\n   *  - an address where a contract will be created\\n   *  - an address where a contract lived, but was destroyed\\n   * ====\\n   */\\n  function isContract(address account) internal view returns (bool) {\\n    // This method relies on extcodesize, which returns 0 for contracts in\\n    // construction, since the code is only stored at the end of the\\n    // constructor execution.\\n\\n    uint256 size;\\n    assembly {\\n      size := extcodesize(account)\\n    }\\n    return size > 0;\\n  }\\n\\n  /**\\n   * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n   * `recipient`, forwarding all available gas and reverting on errors.\\n   *\\n   * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n   * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n   * imposed by `transfer`, making them unable to receive funds via\\n   * `transfer`. {sendValue} removes this limitation.\\n   *\\n   * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n   *\\n   * IMPORTANT: because control is transferred to `recipient`, care must be\\n   * taken to not create reentrancy vulnerabilities. Consider using\\n   * {ReentrancyGuard} or the\\n   * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n   */\\n  function sendValue(address payable recipient, uint256 amount) internal {\\n    require(address(this).balance >= amount, 'Address: insufficient balance');\\n\\n    (bool success, ) = recipient.call{value: amount}('');\\n    require(success, 'Address: unable to send value, recipient may have reverted');\\n  }\\n\\n  /**\\n   * @dev Performs a Solidity function call using a low level `call`. A\\n   * plain `call` is an unsafe replacement for a function call: use this\\n   * function instead.\\n   *\\n   * If `target` reverts with a revert reason, it is bubbled up by this\\n   * function (like regular Solidity function calls).\\n   *\\n   * Returns the raw returned data. To convert to the expected return value,\\n   * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n   *\\n   * Requirements:\\n   *\\n   * - `target` must be a contract.\\n   * - calling `target` with `data` must not revert.\\n   *\\n   * _Available since v3.1._\\n   */\\n  function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n    return functionCall(target, data, 'Address: low-level call failed');\\n  }\\n\\n  /**\\n   * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n   * `errorMessage` as a fallback revert reason when `target` reverts.\\n   *\\n   * _Available since v3.1._\\n   */\\n  function functionCall(\\n    address target,\\n    bytes memory data,\\n    string memory errorMessage\\n  ) internal returns (bytes memory) {\\n    return functionCallWithValue(target, data, 0, errorMessage);\\n  }\\n\\n  /**\\n   * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n   * but also transferring `value` wei to `target`.\\n   *\\n   * Requirements:\\n   *\\n   * - the calling contract must have an ETH balance of at least `value`.\\n   * - the called Solidity function must be `payable`.\\n   *\\n   * _Available since v3.1._\\n   */\\n  function functionCallWithValue(\\n    address target,\\n    bytes memory data,\\n    uint256 value\\n  ) internal returns (bytes memory) {\\n    return functionCallWithValue(target, data, value, 'Address: low-level call with value failed');\\n  }\\n\\n  /**\\n   * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n   * with `errorMessage` as a fallback revert reason when `target` reverts.\\n   *\\n   * _Available since v3.1._\\n   */\\n  function functionCallWithValue(\\n    address target,\\n    bytes memory data,\\n    uint256 value,\\n    string memory errorMessage\\n  ) internal returns (bytes memory) {\\n    require(address(this).balance >= value, 'Address: insufficient balance for call');\\n    require(isContract(target), 'Address: call to non-contract');\\n\\n    (bool success, bytes memory returndata) = target.call{value: value}(data);\\n    return verifyCallResult(success, returndata, errorMessage);\\n  }\\n\\n  /**\\n   * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n   * but performing a static call.\\n   *\\n   * _Available since v3.3._\\n   */\\n  function functionStaticCall(\\n    address target,\\n    bytes memory data\\n  ) internal view returns (bytes memory) {\\n    return functionStaticCall(target, data, 'Address: low-level static call failed');\\n  }\\n\\n  /**\\n   * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n   * but performing a static call.\\n   *\\n   * _Available since v3.3._\\n   */\\n  function functionStaticCall(\\n    address target,\\n    bytes memory data,\\n    string memory errorMessage\\n  ) internal view returns (bytes memory) {\\n    require(isContract(target), 'Address: static call to non-contract');\\n\\n    (bool success, bytes memory returndata) = target.staticcall(data);\\n    return verifyCallResult(success, returndata, errorMessage);\\n  }\\n\\n  /**\\n   * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n   * but performing a delegate call.\\n   *\\n   * _Available since v3.4._\\n   */\\n  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n    return functionDelegateCall(target, data, 'Address: low-level delegate call failed');\\n  }\\n\\n  /**\\n   * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n   * but performing a delegate call.\\n   *\\n   * _Available since v3.4._\\n   */\\n  function functionDelegateCall(\\n    address target,\\n    bytes memory data,\\n    string memory errorMessage\\n  ) internal returns (bytes memory) {\\n    require(isContract(target), 'Address: delegate call to non-contract');\\n\\n    (bool success, bytes memory returndata) = target.delegatecall(data);\\n    return verifyCallResult(success, returndata, errorMessage);\\n  }\\n\\n  /**\\n   * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n   * revert reason using the provided one.\\n   *\\n   * _Available since v4.3._\\n   */\\n  function verifyCallResult(\\n    bool success,\\n    bytes memory returndata,\\n    string memory errorMessage\\n  ) internal pure returns (bytes memory) {\\n    if (success) {\\n      return returndata;\\n    } else {\\n      // Look for revert reason and bubble it up if present\\n      if (returndata.length > 0) {\\n        // The easiest way to bubble the revert reason is using memory via assembly\\n\\n        assembly {\\n          let returndata_size := mload(returndata)\\n          revert(add(32, returndata), returndata_size)\\n        }\\n      } else {\\n        revert(errorMessage);\\n      }\\n    }\\n  }\\n}\\n\",\"keccak256\":\"0x4ce20476966f73ba3c0aeb85b602b6ecc4e715f5bd9524d1c6286819282c76c5\",\"license\":\"MIT\"},\"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n  function _msgSender() internal view virtual returns (address payable) {\\n    return payable(msg.sender);\\n  }\\n\\n  function _msgData() internal view virtual returns (bytes memory) {\\n    this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n    return msg.data;\\n  }\\n}\\n\",\"keccak256\":\"0xc0df5ebb2c3d8b4509464c40a88cc51e5e5f5e4a26fafc909330e9bb2658f641\",\"license\":\"MIT\"},\"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport './Context.sol';\\nimport './IERC20.sol';\\nimport './SafeMath.sol';\\nimport './Address.sol';\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin guidelines: functions revert instead\\n * of returning `false` on failure. This behavior is nonetheless conventional\\n * and does not conflict with the expectations of ERC20 applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20 {\\n  using SafeMath for uint256;\\n  using Address for address;\\n\\n  mapping(address => uint256) private _balances;\\n\\n  mapping(address => mapping(address => uint256)) private _allowances;\\n\\n  uint256 private _totalSupply;\\n\\n  string private _name;\\n  string private _symbol;\\n  uint8 private _decimals;\\n\\n  /**\\n   * @dev Sets the values for {name} and {symbol}, initializes {decimals} with\\n   * a default value of 18.\\n   *\\n   * To select a different value for {decimals}, use {_setupDecimals}.\\n   *\\n   * All three of these values are immutable: they can only be set once during\\n   * construction.\\n   */\\n  constructor(string memory name, string memory symbol) {\\n    _name = name;\\n    _symbol = symbol;\\n    _decimals = 18;\\n  }\\n\\n  /**\\n   * @dev Returns the name of the token.\\n   */\\n  function name() public view returns (string memory) {\\n    return _name;\\n  }\\n\\n  /**\\n   * @dev Returns the symbol of the token, usually a shorter version of the\\n   * name.\\n   */\\n  function symbol() public view returns (string memory) {\\n    return _symbol;\\n  }\\n\\n  /**\\n   * @dev Returns the number of decimals used to get its user representation.\\n   * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n   * be displayed to a user as `5,05` (`505 / 10 ** 2`).\\n   *\\n   * Tokens usually opt for a value of 18, imitating the relationship between\\n   * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\\n   * called.\\n   *\\n   * NOTE: This information is only used for _display_ purposes: it in\\n   * no way affects any of the arithmetic of the contract, including\\n   * {IERC20-balanceOf} and {IERC20-transfer}.\\n   */\\n  function decimals() public view returns (uint8) {\\n    return _decimals;\\n  }\\n\\n  /**\\n   * @dev See {IERC20-totalSupply}.\\n   */\\n  function totalSupply() public view override returns (uint256) {\\n    return _totalSupply;\\n  }\\n\\n  /**\\n   * @dev See {IERC20-balanceOf}.\\n   */\\n  function balanceOf(address account) public view override returns (uint256) {\\n    return _balances[account];\\n  }\\n\\n  /**\\n   * @dev See {IERC20-transfer}.\\n   *\\n   * Requirements:\\n   *\\n   * - `recipient` cannot be the zero address.\\n   * - the caller must have a balance of at least `amount`.\\n   */\\n  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\\n    _transfer(_msgSender(), recipient, amount);\\n    return true;\\n  }\\n\\n  /**\\n   * @dev See {IERC20-allowance}.\\n   */\\n  function allowance(\\n    address owner,\\n    address spender\\n  ) public view virtual override returns (uint256) {\\n    return _allowances[owner][spender];\\n  }\\n\\n  /**\\n   * @dev See {IERC20-approve}.\\n   *\\n   * Requirements:\\n   *\\n   * - `spender` cannot be the zero address.\\n   */\\n  function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n    _approve(_msgSender(), spender, amount);\\n    return true;\\n  }\\n\\n  /**\\n   * @dev See {IERC20-transferFrom}.\\n   *\\n   * Emits an {Approval} event indicating the updated allowance. This is not\\n   * required by the EIP. See the note at the beginning of {ERC20};\\n   *\\n   * Requirements:\\n   * - `sender` and `recipient` cannot be the zero address.\\n   * - `sender` must have a balance of at least `amount`.\\n   * - the caller must have allowance for ``sender``'s tokens of at least\\n   * `amount`.\\n   */\\n  function transferFrom(\\n    address sender,\\n    address recipient,\\n    uint256 amount\\n  ) public virtual override returns (bool) {\\n    _transfer(sender, recipient, amount);\\n    _approve(\\n      sender,\\n      _msgSender(),\\n      _allowances[sender][_msgSender()].sub(amount, 'ERC20: transfer amount exceeds allowance')\\n    );\\n    return true;\\n  }\\n\\n  /**\\n   * @dev Atomically increases the allowance granted to `spender` by the caller.\\n   *\\n   * This is an alternative to {approve} that can be used as a mitigation for\\n   * problems described in {IERC20-approve}.\\n   *\\n   * Emits an {Approval} event indicating the updated allowance.\\n   *\\n   * Requirements:\\n   *\\n   * - `spender` cannot be the zero address.\\n   */\\n  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\\n    return true;\\n  }\\n\\n  /**\\n   * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n   *\\n   * This is an alternative to {approve} that can be used as a mitigation for\\n   * problems described in {IERC20-approve}.\\n   *\\n   * Emits an {Approval} event indicating the updated allowance.\\n   *\\n   * Requirements:\\n   *\\n   * - `spender` cannot be the zero address.\\n   * - `spender` must have allowance for the caller of at least\\n   * `subtractedValue`.\\n   */\\n  function decreaseAllowance(\\n    address spender,\\n    uint256 subtractedValue\\n  ) public virtual returns (bool) {\\n    _approve(\\n      _msgSender(),\\n      spender,\\n      _allowances[_msgSender()][spender].sub(\\n        subtractedValue,\\n        'ERC20: decreased allowance below zero'\\n      )\\n    );\\n    return true;\\n  }\\n\\n  /**\\n   * @dev Moves tokens `amount` from `sender` to `recipient`.\\n   *\\n   * This is internal function is equivalent to {transfer}, and can be used to\\n   * e.g. implement automatic token fees, slashing mechanisms, etc.\\n   *\\n   * Emits a {Transfer} event.\\n   *\\n   * Requirements:\\n   *\\n   * - `sender` cannot be the zero address.\\n   * - `recipient` cannot be the zero address.\\n   * - `sender` must have a balance of at least `amount`.\\n   */\\n  function _transfer(address sender, address recipient, uint256 amount) internal virtual {\\n    require(sender != address(0), 'ERC20: transfer from the zero address');\\n    require(recipient != address(0), 'ERC20: transfer to the zero address');\\n\\n    _beforeTokenTransfer(sender, recipient, amount);\\n\\n    _balances[sender] = _balances[sender].sub(amount, 'ERC20: transfer amount exceeds balance');\\n    _balances[recipient] = _balances[recipient].add(amount);\\n    emit Transfer(sender, recipient, amount);\\n  }\\n\\n  /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n   * the total supply.\\n   *\\n   * Emits a {Transfer} event with `from` set to the zero address.\\n   *\\n   * Requirements\\n   *\\n   * - `to` cannot be the zero address.\\n   */\\n  function _mint(address account, uint256 amount) internal virtual {\\n    require(account != address(0), 'ERC20: mint to the zero address');\\n\\n    _beforeTokenTransfer(address(0), account, amount);\\n\\n    _totalSupply = _totalSupply.add(amount);\\n    _balances[account] = _balances[account].add(amount);\\n    emit Transfer(address(0), account, amount);\\n  }\\n\\n  /**\\n   * @dev Destroys `amount` tokens from `account`, reducing the\\n   * total supply.\\n   *\\n   * Emits a {Transfer} event with `to` set to the zero address.\\n   *\\n   * Requirements\\n   *\\n   * - `account` cannot be the zero address.\\n   * - `account` must have at least `amount` tokens.\\n   */\\n  function _burn(address account, uint256 amount) internal virtual {\\n    require(account != address(0), 'ERC20: burn from the zero address');\\n\\n    _beforeTokenTransfer(account, address(0), amount);\\n\\n    _balances[account] = _balances[account].sub(amount, 'ERC20: burn amount exceeds balance');\\n    _totalSupply = _totalSupply.sub(amount);\\n    emit Transfer(account, address(0), amount);\\n  }\\n\\n  /**\\n   * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\\n   *\\n   * This is internal function is equivalent to `approve`, and can be used to\\n   * e.g. set automatic allowances for certain subsystems, etc.\\n   *\\n   * Emits an {Approval} event.\\n   *\\n   * Requirements:\\n   *\\n   * - `owner` cannot be the zero address.\\n   * - `spender` cannot be the zero address.\\n   */\\n  function _approve(address owner, address spender, uint256 amount) internal virtual {\\n    require(owner != address(0), 'ERC20: approve from the zero address');\\n    require(spender != address(0), 'ERC20: approve to the zero address');\\n\\n    _allowances[owner][spender] = amount;\\n    emit Approval(owner, spender, amount);\\n  }\\n\\n  /**\\n   * @dev Sets {decimals} to a value other than the default one of 18.\\n   *\\n   * WARNING: This function should only be called from the constructor. Most\\n   * applications that interact with token contracts will not expect\\n   * {decimals} to ever change, and may work incorrectly if it does.\\n   */\\n  function _setupDecimals(uint8 decimals_) internal {\\n    _decimals = decimals_;\\n  }\\n\\n  /**\\n   * @dev Hook that is called before any transfer of tokens. This includes\\n   * minting and burning.\\n   *\\n   * Calling conditions:\\n   *\\n   * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n   * will be to transferred to `to`.\\n   * - when `from` is zero, `amount` tokens will be minted for `to`.\\n   * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n   * - `from` and `to` are never both zero.\\n   *\\n   * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n   */\\n  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n}\\n\",\"keccak256\":\"0x84e6a151684cce31e66c850677f7e9455d694e050e409e5ded05fb5528c6c7e4\",\"license\":\"MIT\"},\"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n  /**\\n   * @dev Returns the amount of tokens in existence.\\n   */\\n  function totalSupply() external view returns (uint256);\\n\\n  /**\\n   * @dev Returns the amount of tokens owned by `account`.\\n   */\\n  function balanceOf(address account) external view returns (uint256);\\n\\n  /**\\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * Emits a {Transfer} event.\\n   */\\n  function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n  /**\\n   * @dev Returns the remaining number of tokens that `spender` will be\\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n   * zero by default.\\n   *\\n   * This value changes when {approve} or {transferFrom} are called.\\n   */\\n  function allowance(address owner, address spender) external view returns (uint256);\\n\\n  /**\\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n   * that someone may use both the old and the new allowance by unfortunate\\n   * transaction ordering. One possible solution to mitigate this race\\n   * condition is to first reduce the spender's allowance to 0 and set the\\n   * desired value afterwards:\\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n   *\\n   * Emits an {Approval} event.\\n   */\\n  function approve(address spender, uint256 amount) external returns (bool);\\n\\n  /**\\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n   * allowance mechanism. `amount` is then deducted from the caller's\\n   * allowance.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * Emits a {Transfer} event.\\n   */\\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n  /**\\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n   * another (`to`).\\n   *\\n   * Note that `value` may be zero.\\n   */\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n  /**\\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n   * a call to {approve}. `value` is the new allowance.\\n   */\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xf57d62241e553696a1324d225663ba2e1a51db0a51ca236d0c1b009d89b6284c\",\"license\":\"AGPL-3.0\"},\"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport './Context.sol';\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\ncontract Ownable is Context {\\n  address private _owner;\\n\\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n  /**\\n   * @dev Initializes the contract setting the deployer as the initial owner.\\n   */\\n  constructor() {\\n    address msgSender = _msgSender();\\n    _owner = msgSender;\\n    emit OwnershipTransferred(address(0), msgSender);\\n  }\\n\\n  /**\\n   * @dev Returns the address of the current owner.\\n   */\\n  function owner() public view returns (address) {\\n    return _owner;\\n  }\\n\\n  /**\\n   * @dev Throws if called by any account other than the owner.\\n   */\\n  modifier onlyOwner() {\\n    require(_owner == _msgSender(), 'Ownable: caller is not the owner');\\n    _;\\n  }\\n\\n  /**\\n   * @dev Leaves the contract without owner. It will not be possible to call\\n   * `onlyOwner` functions anymore. Can only be called by the current owner.\\n   *\\n   * NOTE: Renouncing ownership will leave the contract without an owner,\\n   * thereby removing any functionality that is only available to the owner.\\n   */\\n  function renounceOwnership() public virtual onlyOwner {\\n    emit OwnershipTransferred(_owner, address(0));\\n    _owner = address(0);\\n  }\\n\\n  /**\\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n   * Can only be called by the current owner.\\n   */\\n  function transferOwnership(address newOwner) public virtual onlyOwner {\\n    require(newOwner != address(0), 'Ownable: new owner is the zero address');\\n    emit OwnershipTransferred(_owner, newOwner);\\n    _owner = newOwner;\\n  }\\n}\\n\",\"keccak256\":\"0x3ce185c4f579e32006f8893dbfdc1b5d878c0e2cafd1508f7ceb081698bc81f9\",\"license\":\"MIT\"},\"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity ^0.8.0;\\n\\n/// @title Optimized overflow and underflow safe math operations\\n/// @notice Contains methods for doing math operations that revert on overflow or underflow for minimal gas cost\\nlibrary SafeMath {\\n  /// @notice Returns x + y, reverts if sum overflows uint256\\n  /// @param x The augend\\n  /// @param y The addend\\n  /// @return z The sum of x and y\\n  function add(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n    unchecked {\\n      require((z = x + y) >= x);\\n    }\\n  }\\n\\n  /// @notice Returns x - y, reverts if underflows\\n  /// @param x The minuend\\n  /// @param y The subtrahend\\n  /// @return z The difference of x and y\\n  function sub(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n    unchecked {\\n      require((z = x - y) <= x);\\n    }\\n  }\\n\\n  /// @notice Returns x - y, reverts if underflows\\n  /// @param x The minuend\\n  /// @param y The subtrahend\\n  /// @param message The error msg\\n  /// @return z The difference of x and y\\n  function sub(uint256 x, uint256 y, string memory message) internal pure returns (uint256 z) {\\n    unchecked {\\n      require((z = x - y) <= x, message);\\n    }\\n  }\\n\\n  /// @notice Returns x * y, reverts if overflows\\n  /// @param x The multiplicand\\n  /// @param y The multiplier\\n  /// @return z The product of x and y\\n  function mul(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n    unchecked {\\n      require(x == 0 || (z = x * y) / x == y);\\n    }\\n  }\\n\\n  /// @notice Returns x / y, reverts if overflows - no specific check, solidity reverts on division by 0\\n  /// @param x The numerator\\n  /// @param y The denominator\\n  /// @return z The product of x and y\\n  function div(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n    return x / y;\\n  }\\n}\\n\",\"keccak256\":\"0xf1c5d8ba70a5fc3e20dbbc2aa2a2278d2535a57bc1e9abf1228ebc3068a045f0\",\"license\":\"AGPL-3.0\"},\"@aave/core-v3/contracts/interfaces/IERC20WithPermit.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity ^0.8.0;\\n\\nimport {IERC20} from '../dependencies/openzeppelin/contracts/IERC20.sol';\\n\\n/**\\n * @title IERC20WithPermit\\n * @author Aave\\n * @notice Interface for the permit function (EIP-2612)\\n */\\ninterface IERC20WithPermit is IERC20 {\\n  /**\\n   * @notice Allow passing a signed message to approve spending\\n   * @dev implements the permit function as for\\n   * https://github.com/ethereum/EIPs/blob/8a34d644aacf0f9f8f00815307fd7dd5da07655f/EIPS/eip-2612.md\\n   * @param owner The owner of the funds\\n   * @param spender The spender\\n   * @param value The amount\\n   * @param deadline The deadline timestamp, type(uint256).max for max deadline\\n   * @param v Signature param\\n   * @param s Signature param\\n   * @param r Signature param\\n   */\\n  function permit(\\n    address owner,\\n    address spender,\\n    uint256 value,\\n    uint256 deadline,\\n    uint8 v,\\n    bytes32 r,\\n    bytes32 s\\n  ) external;\\n}\\n\",\"keccak256\":\"0xfb041570f1804648f543be72cecc80ca9f65129232bacaa9247ebd11a7d9f83e\",\"license\":\"AGPL-3.0\"},\"contracts/mocks/testnet-helpers/Faucet.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity ^0.8.0;\\n\\nimport {Ownable} from '@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol';\\nimport {TestnetERC20} from './TestnetERC20.sol';\\nimport {IFaucet} from './IFaucet.sol';\\n\\n/**\\n * @title Faucet\\n * @dev Ownable Faucet Contract\\n */\\ncontract Faucet is IFaucet, Ownable {\\n  uint256 internal maximumMintAmount;\\n\\n  // Mapping to control mint of assets (allowed by default)\\n  mapping(address => bool) internal _nonMintable;\\n\\n  // If _permissioned is enabled, then only owner can mint Testnet ERC20 tokens\\n  // If disabled, anyone can call mint at the faucet, for PoC environments\\n  bool internal _permissioned;\\n\\n  constructor(address owner, bool permissioned, uint256 maxMinAmount) {\\n    require(owner != address(0));\\n    transferOwnership(owner);\\n    _permissioned = permissioned;\\n    maximumMintAmount = maxMinAmount;\\n  }\\n\\n  /**\\n   * @dev Function modifier, if _permissioned is enabled then msg.sender is required to be the owner\\n   */\\n  modifier onlyOwnerIfPermissioned() {\\n    if (_permissioned == true) {\\n      require(owner() == _msgSender(), 'Ownable: caller is not the owner');\\n    }\\n    _;\\n  }\\n\\n  /// @inheritdoc IFaucet\\n  function mint(\\n    address token,\\n    address to,\\n    uint256 amount\\n  ) external override onlyOwnerIfPermissioned returns (uint256) {\\n    require(!_nonMintable[token], 'Error: not mintable');\\n    require(\\n      amount <= maximumMintAmount * (10 ** TestnetERC20(token).decimals()),\\n      'Error: Mint limit transaction exceeded'\\n    );\\n\\n    TestnetERC20(token).mint(to, amount);\\n    return amount;\\n  }\\n\\n  /// @inheritdoc IFaucet\\n  function setPermissioned(bool permissioned) external override onlyOwner {\\n    _permissioned = permissioned;\\n  }\\n\\n  /// @inheritdoc IFaucet\\n  function isPermissioned() external view override returns (bool) {\\n    return _permissioned;\\n  }\\n\\n  /// @inheritdoc IFaucet\\n  function setMintable(address asset, bool active) external override onlyOwner {\\n    _nonMintable[asset] = !active;\\n  }\\n\\n  /// @inheritdoc IFaucet\\n  function isMintable(address asset) external view override returns (bool) {\\n    return !_nonMintable[asset];\\n  }\\n\\n  /// @inheritdoc IFaucet\\n  function transferOwnershipOfChild(\\n    address[] calldata childContracts,\\n    address newOwner\\n  ) external override onlyOwner {\\n    for (uint256 i = 0; i < childContracts.length; i++) {\\n      Ownable(childContracts[i]).transferOwnership(newOwner);\\n    }\\n  }\\n\\n  /// @inheritdoc IFaucet\\n  function setProtectedOfChild(\\n    address[] calldata childContracts,\\n    bool state\\n  ) external override onlyOwner {\\n    for (uint256 i = 0; i < childContracts.length; i++) {\\n      TestnetERC20(childContracts[i]).setProtected(state);\\n    }\\n  }\\n\\n\\n  /// @inheritdoc IFaucet\\n  function setMaximumMintAmount(uint256 newMaxMintAmount) external override onlyOwner {\\n    maximumMintAmount = newMaxMintAmount;\\n  }\\n\\n  /// @inheritdoc IFaucet\\n  function getMaximumMintAmount() external view override returns (uint256) {\\n    return maximumMintAmount;\\n  }\\n}\\n\",\"keccak256\":\"0xfd079f90d9edcf50501fc53d6a3723634668639850c7ab2f5015277cfd4faf6a\",\"license\":\"BUSL-1.1\"},\"contracts/mocks/testnet-helpers/IFaucet.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity ^0.8.0;\\n\\ninterface IFaucet {\\n  /**\\n   * @notice Function to mint Testnet tokens to the destination address\\n   * @param token The address of the token to perform the mint\\n   * @param to The address to send the minted tokens\\n   * @param amount The amount of tokens to mint\\n   * @return The amount minted\\n   **/\\n  function mint(address token, address to, uint256 amount) external returns (uint256);\\n\\n  /**\\n   * @notice Enable or disable the need of authentication to call `mint` function\\n   * @param value If true, ask for authentication at `mint` function, if false, disable the authentication\\n   */\\n  function setPermissioned(bool value) external;\\n\\n  /**\\n   * @notice Getter to determine if permissioned mode is enabled or disabled\\n   * @return Returns a boolean, if true the mode is enabled, if false is disabled\\n   */\\n  function isPermissioned() external view returns (bool);\\n\\n  /**\\n   * @notice Enable or disable the minting of the faucet asset\\n   * @param asset The address of the asset\\n   * @param active True to enable, false to disable\\n   */\\n  function setMintable(address asset, bool active) external;\\n\\n  /**\\n   * @notice Returns whether the asset is mintable\\n   * @param asset The address of the asset\\n   * @return True if the asset is mintable, false otherwise\\n   */\\n  function isMintable(address asset) external view returns (bool);\\n\\n  /**\\n   * @notice Transfer the ownership of child contracts\\n   * @param childContracts A list of child contract addresses\\n   * @param newOwner The address of the new owner\\n   */\\n  function transferOwnershipOfChild(address[] calldata childContracts, address newOwner) external;\\n\\n  /**\\n   * @notice Updates protection of minting feature of child token contracts\\n   * @param childContracts A list of child token contract addresses\\n   * @param state True if tokens are only mintable through Faucet, false otherwise\\n   */\\n  function setProtectedOfChild(address[] calldata childContracts, bool state) external;\\n\\n  /**\\n   * @notice Updates the maximum amount of tokens per mint allowed\\n   * @param newMaxMintAmount The new value of maximum amount of tokens per mint (whole tokens)\\n   */\\n  function setMaximumMintAmount(uint256 newMaxMintAmount) external;\\n\\n  /**\\n   * @notice Returns the maximum amount of tokens per mint allowed\\n   * @return The maximum amount of tokens per mint allowed (whole tokens)\\n   */\\n  function getMaximumMintAmount() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x1397cc647f59d82bd93722f211e375a2f971fbaa50cb824f48756031a882de37\",\"license\":\"BUSL-1.1\"},\"contracts/mocks/testnet-helpers/TestnetERC20.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity ^0.8.0;\\n\\nimport {Ownable} from '@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol';\\nimport {ERC20} from '@aave/core-v3/contracts/dependencies/openzeppelin/contracts/ERC20.sol';\\nimport {IERC20WithPermit} from '@aave/core-v3/contracts/interfaces/IERC20WithPermit.sol';\\n\\n/**\\n * @title TestnetERC20\\n * @dev ERC20 minting logic\\n */\\ncontract TestnetERC20 is IERC20WithPermit, ERC20, Ownable {\\n  bytes public constant EIP712_REVISION = bytes('1');\\n  bytes32 internal constant EIP712_DOMAIN =\\n    keccak256('EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)');\\n  bytes32 public constant PERMIT_TYPEHASH =\\n    keccak256('Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)');\\n\\n  // Map of address nonces (address => nonce)\\n  mapping(address => uint256) internal _nonces;\\n\\n  bytes32 public DOMAIN_SEPARATOR;\\n\\n  bool internal _protected;\\n\\n  /**\\n   * @dev Function modifier, if _protected is enabled then msg.sender is required to be the owner\\n   */\\n  modifier onlyOwnerIfProtected() {\\n    if (_protected == true) {\\n      require(owner() == _msgSender(), 'Ownable: caller is not the owner');\\n    }\\n    _;\\n  }\\n\\n  constructor(\\n    string memory name,\\n    string memory symbol,\\n    uint8 decimals,\\n    address owner\\n  ) ERC20(name, symbol) {\\n    uint256 chainId = block.chainid;\\n\\n    DOMAIN_SEPARATOR = keccak256(\\n      abi.encode(\\n        EIP712_DOMAIN,\\n        keccak256(bytes(name)),\\n        keccak256(EIP712_REVISION),\\n        chainId,\\n        address(this)\\n      )\\n    );\\n    _setupDecimals(decimals);\\n    require(owner != address(0));\\n    transferOwnership(owner);\\n    _protected = true;\\n  }\\n\\n  /// @inheritdoc IERC20WithPermit\\n  function permit(\\n    address owner,\\n    address spender,\\n    uint256 value,\\n    uint256 deadline,\\n    uint8 v,\\n    bytes32 r,\\n    bytes32 s\\n  ) external override {\\n    require(owner != address(0), 'INVALID_OWNER');\\n    //solium-disable-next-line\\n    require(block.timestamp <= deadline, 'INVALID_EXPIRATION');\\n    uint256 currentValidNonce = _nonces[owner];\\n    bytes32 digest = keccak256(\\n      abi.encodePacked(\\n        '\\\\x19\\\\x01',\\n        DOMAIN_SEPARATOR,\\n        keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, currentValidNonce, deadline))\\n      )\\n    );\\n    require(owner == ecrecover(digest, v, r, s), 'INVALID_SIGNATURE');\\n    _nonces[owner] = currentValidNonce + 1;\\n    _approve(owner, spender, value);\\n  }\\n\\n  /**\\n   * @dev Function to mint tokens\\n   * @param value The amount of tokens to mint.\\n   * @return A boolean that indicates if the operation was successful.\\n   */\\n  function mint(uint256 value) public virtual onlyOwnerIfProtected returns (bool) {\\n    _mint(_msgSender(), value);\\n    return true;\\n  }\\n\\n  /**\\n   * @dev Function to mint tokens to address\\n   * @param account The account to mint tokens.\\n   * @param value The amount of tokens to mint.\\n   * @return A boolean that indicates if the operation was successful.\\n   */\\n  function mint(address account, uint256 value) public virtual onlyOwnerIfProtected returns (bool) {\\n    _mint(account, value);\\n    return true;\\n  }\\n\\n  function nonces(address owner) public view returns (uint256) {\\n    return _nonces[owner];\\n  }\\n\\n  function setProtected(bool state) public onlyOwner {\\n    _protected = state;\\n  }\\n\\n  function isProtected() public view returns (bool) {\\n    return _protected;\\n  }\\n}\\n\",\"keccak256\":\"0x77cf9848a42e5c8684ef832dae92f5095ab539a4cdbd58b2d60ca6586d26384e\",\"license\":\"BUSL-1.1\"}},\"version\":1}","storageLayout":{"storage":[{"astId":915,"contract":"contracts/mocks/testnet-helpers/Faucet.sol:Faucet","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":1533,"contract":"contracts/mocks/testnet-helpers/Faucet.sol:Faucet","label":"maximumMintAmount","offset":0,"slot":"1","type":"t_uint256"},{"astId":1537,"contract":"contracts/mocks/testnet-helpers/Faucet.sol:Faucet","label":"_nonMintable","offset":0,"slot":"2","type":"t_mapping(t_address,t_bool)"},{"astId":1539,"contract":"contracts/mocks/testnet-helpers/Faucet.sol:Faucet","label":"_permissioned","offset":0,"slot":"3","type":"t_bool"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{"getMaximumMintAmount()":{"notice":"Returns the maximum amount of tokens per mint allowed"},"isMintable(address)":{"notice":"Returns whether the asset is mintable"},"isPermissioned()":{"notice":"Getter to determine if permissioned mode is enabled or disabled"},"mint(address,address,uint256)":{"notice":"Function to mint Testnet tokens to the destination address"},"setMaximumMintAmount(uint256)":{"notice":"Updates the maximum amount of tokens per mint allowed"},"setMintable(address,bool)":{"notice":"Enable or disable the minting of the faucet asset"},"setPermissioned(bool)":{"notice":"Enable or disable the need of authentication to call `mint` function"},"setProtectedOfChild(address[],bool)":{"notice":"Updates protection of minting feature of child token contracts"},"transferOwnershipOfChild(address[],address)":{"notice":"Transfer the ownership of child contracts"}},"version":1}}},"contracts/mocks/testnet-helpers/IFaucet.sol":{"IFaucet":{"abi":[{"inputs":[],"name":"getMaximumMintAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"}],"name":"isMintable","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isPermissioned","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newMaxMintAmount","type":"uint256"}],"name":"setMaximumMintAmount","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"bool","name":"active","type":"bool"}],"name":"setMintable","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"value","type":"bool"}],"name":"setPermissioned","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"childContracts","type":"address[]"},{"internalType":"bool","name":"state","type":"bool"}],"name":"setProtectedOfChild","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"childContracts","type":"address[]"},{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnershipOfChild","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"getMaximumMintAmount()":{"returns":{"_0":"The maximum amount of tokens per mint allowed (whole tokens)"}},"isMintable(address)":{"params":{"asset":"The address of the asset"},"returns":{"_0":"True if the asset is mintable, false otherwise"}},"isPermissioned()":{"returns":{"_0":"Returns a boolean, if true the mode is enabled, if false is disabled"}},"mint(address,address,uint256)":{"params":{"amount":"The amount of tokens to mint","to":"The address to send the minted tokens","token":"The address of the token to perform the mint"},"returns":{"_0":"The amount minted*"}},"setMaximumMintAmount(uint256)":{"params":{"newMaxMintAmount":"The new value of maximum amount of tokens per mint (whole tokens)"}},"setMintable(address,bool)":{"params":{"active":"True to enable, false to disable","asset":"The address of the asset"}},"setPermissioned(bool)":{"params":{"value":"If true, ask for authentication at `mint` function, if false, disable the authentication"}},"setProtectedOfChild(address[],bool)":{"params":{"childContracts":"A list of child token contract addresses","state":"True if tokens are only mintable through Faucet, false otherwise"}},"transferOwnershipOfChild(address[],address)":{"params":{"childContracts":"A list of child contract addresses","newOwner":"The address of the new owner"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"getMaximumMintAmount()":"dd26b1d3","isMintable(address)":"222b15fb","isPermissioned()":"e2a4157c","mint(address,address,uint256)":"c6c3bbe6","setMaximumMintAmount(uint256)":"9420d476","setMintable(address,bool)":"f7eb06c4","setPermissioned(bool)":"1a678cd3","setProtectedOfChild(address[],bool)":"ca51a903","transferOwnershipOfChild(address[],address)":"506f26cc"}},"metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getMaximumMintAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"isMintable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPermissioned\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newMaxMintAmount\",\"type\":\"uint256\"}],\"name\":\"setMaximumMintAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"name\":\"setMintable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"setPermissioned\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"childContracts\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"state\",\"type\":\"bool\"}],\"name\":\"setProtectedOfChild\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"childContracts\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnershipOfChild\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getMaximumMintAmount()\":{\"returns\":{\"_0\":\"The maximum amount of tokens per mint allowed (whole tokens)\"}},\"isMintable(address)\":{\"params\":{\"asset\":\"The address of the asset\"},\"returns\":{\"_0\":\"True if the asset is mintable, false otherwise\"}},\"isPermissioned()\":{\"returns\":{\"_0\":\"Returns a boolean, if true the mode is enabled, if false is disabled\"}},\"mint(address,address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens to mint\",\"to\":\"The address to send the minted tokens\",\"token\":\"The address of the token to perform the mint\"},\"returns\":{\"_0\":\"The amount minted*\"}},\"setMaximumMintAmount(uint256)\":{\"params\":{\"newMaxMintAmount\":\"The new value of maximum amount of tokens per mint (whole tokens)\"}},\"setMintable(address,bool)\":{\"params\":{\"active\":\"True to enable, false to disable\",\"asset\":\"The address of the asset\"}},\"setPermissioned(bool)\":{\"params\":{\"value\":\"If true, ask for authentication at `mint` function, if false, disable the authentication\"}},\"setProtectedOfChild(address[],bool)\":{\"params\":{\"childContracts\":\"A list of child token contract addresses\",\"state\":\"True if tokens are only mintable through Faucet, false otherwise\"}},\"transferOwnershipOfChild(address[],address)\":{\"params\":{\"childContracts\":\"A list of child contract addresses\",\"newOwner\":\"The address of the new owner\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getMaximumMintAmount()\":{\"notice\":\"Returns the maximum amount of tokens per mint allowed\"},\"isMintable(address)\":{\"notice\":\"Returns whether the asset is mintable\"},\"isPermissioned()\":{\"notice\":\"Getter to determine if permissioned mode is enabled or disabled\"},\"mint(address,address,uint256)\":{\"notice\":\"Function to mint Testnet tokens to the destination address\"},\"setMaximumMintAmount(uint256)\":{\"notice\":\"Updates the maximum amount of tokens per mint allowed\"},\"setMintable(address,bool)\":{\"notice\":\"Enable or disable the minting of the faucet asset\"},\"setPermissioned(bool)\":{\"notice\":\"Enable or disable the need of authentication to call `mint` function\"},\"setProtectedOfChild(address[],bool)\":{\"notice\":\"Updates protection of minting feature of child token contracts\"},\"transferOwnershipOfChild(address[],address)\":{\"notice\":\"Transfer the ownership of child contracts\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mocks/testnet-helpers/IFaucet.sol\":\"IFaucet\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":25000},\"remappings\":[]},\"sources\":{\"contracts/mocks/testnet-helpers/IFaucet.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity ^0.8.0;\\n\\ninterface IFaucet {\\n  /**\\n   * @notice Function to mint Testnet tokens to the destination address\\n   * @param token The address of the token to perform the mint\\n   * @param to The address to send the minted tokens\\n   * @param amount The amount of tokens to mint\\n   * @return The amount minted\\n   **/\\n  function mint(address token, address to, uint256 amount) external returns (uint256);\\n\\n  /**\\n   * @notice Enable or disable the need of authentication to call `mint` function\\n   * @param value If true, ask for authentication at `mint` function, if false, disable the authentication\\n   */\\n  function setPermissioned(bool value) external;\\n\\n  /**\\n   * @notice Getter to determine if permissioned mode is enabled or disabled\\n   * @return Returns a boolean, if true the mode is enabled, if false is disabled\\n   */\\n  function isPermissioned() external view returns (bool);\\n\\n  /**\\n   * @notice Enable or disable the minting of the faucet asset\\n   * @param asset The address of the asset\\n   * @param active True to enable, false to disable\\n   */\\n  function setMintable(address asset, bool active) external;\\n\\n  /**\\n   * @notice Returns whether the asset is mintable\\n   * @param asset The address of the asset\\n   * @return True if the asset is mintable, false otherwise\\n   */\\n  function isMintable(address asset) external view returns (bool);\\n\\n  /**\\n   * @notice Transfer the ownership of child contracts\\n   * @param childContracts A list of child contract addresses\\n   * @param newOwner The address of the new owner\\n   */\\n  function transferOwnershipOfChild(address[] calldata childContracts, address newOwner) external;\\n\\n  /**\\n   * @notice Updates protection of minting feature of child token contracts\\n   * @param childContracts A list of child token contract addresses\\n   * @param state True if tokens are only mintable through Faucet, false otherwise\\n   */\\n  function setProtectedOfChild(address[] calldata childContracts, bool state) external;\\n\\n  /**\\n   * @notice Updates the maximum amount of tokens per mint allowed\\n   * @param newMaxMintAmount The new value of maximum amount of tokens per mint (whole tokens)\\n   */\\n  function setMaximumMintAmount(uint256 newMaxMintAmount) external;\\n\\n  /**\\n   * @notice Returns the maximum amount of tokens per mint allowed\\n   * @return The maximum amount of tokens per mint allowed (whole tokens)\\n   */\\n  function getMaximumMintAmount() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x1397cc647f59d82bd93722f211e375a2f971fbaa50cb824f48756031a882de37\",\"license\":\"BUSL-1.1\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"getMaximumMintAmount()":{"notice":"Returns the maximum amount of tokens per mint allowed"},"isMintable(address)":{"notice":"Returns whether the asset is mintable"},"isPermissioned()":{"notice":"Getter to determine if permissioned mode is enabled or disabled"},"mint(address,address,uint256)":{"notice":"Function to mint Testnet tokens to the destination address"},"setMaximumMintAmount(uint256)":{"notice":"Updates the maximum amount of tokens per mint allowed"},"setMintable(address,bool)":{"notice":"Enable or disable the minting of the faucet asset"},"setPermissioned(bool)":{"notice":"Enable or disable the need of authentication to call `mint` function"},"setProtectedOfChild(address[],bool)":{"notice":"Updates protection of minting feature of child token contracts"},"transferOwnershipOfChild(address[],address)":{"notice":"Transfer the ownership of child contracts"}},"version":1}}},"contracts/mocks/testnet-helpers/TestnetERC20.sol":{"TestnetERC20":{"abi":[{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"uint8","name":"decimals","type":"uint8"},{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"EIP712_REVISION","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PERMIT_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"isProtected","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"mint","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"mint","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"state","type":"bool"}],"name":"setProtected","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"ERC20 minting logic","kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"mint(address,uint256)":{"details":"Function to mint tokens to address","params":{"account":"The account to mint tokens.","value":"The amount of tokens to mint."},"returns":{"_0":"A boolean that indicates if the operation was successful."}},"mint(uint256)":{"details":"Function to mint tokens","params":{"value":"The amount of tokens to mint."},"returns":{"_0":"A boolean that indicates if the operation was successful."}},"name()":{"details":"Returns the name of the token."},"owner()":{"details":"Returns the address of the current owner."},"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":{"details":"implements the permit function as for https://github.com/ethereum/EIPs/blob/8a34d644aacf0f9f8f00815307fd7dd5da07655f/EIPS/eip-2612.md","params":{"deadline":"The deadline timestamp, type(uint256).max for max deadline","owner":"The owner of the funds","r":"Signature param","s":"Signature param","spender":"The spender","v":"Signature param","value":"The amount"}},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"title":"TestnetERC20","version":1},"evm":{"bytecode":{"functionDebugData":{"@_1988":{"entryPoint":null,"id":1988,"parameterSlots":4,"returnSlots":0},"@_378":{"entryPoint":null,"id":378,"parameterSlots":2,"returnSlots":0},"@_943":{"entryPoint":null,"id":943,"parameterSlots":0,"returnSlots":0},"@_msgSender_310":{"entryPoint":null,"id":310,"parameterSlots":0,"returnSlots":1},"@_setupDecimals_817":{"entryPoint":null,"id":817,"parameterSlots":1,"returnSlots":0},"@transferOwnership_1015":{"entryPoint":428,"id":1015,"parameterSlots":1,"returnSlots":0},"abi_decode_string_fromMemory":{"entryPoint":907,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint8t_address_fromMemory":{"entryPoint":1090,"id":null,"parameterSlots":2,"returnSlots":4},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":1254,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x41":{"entryPoint":885,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3573:12","statements":[{"nodeType":"YulBlock","src":"6:3:12","statements":[]},{"body":{"nodeType":"YulBlock","src":"46:95:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"63:1:12","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"70:3:12","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"75:10:12","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"66:3:12"},"nodeType":"YulFunctionCall","src":"66:20:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56:6:12"},"nodeType":"YulFunctionCall","src":"56:31:12"},"nodeType":"YulExpressionStatement","src":"56:31:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:1:12","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"106:4:12","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"96:6:12"},"nodeType":"YulFunctionCall","src":"96:15:12"},"nodeType":"YulExpressionStatement","src":"96:15:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"127:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"130:4:12","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"120:6:12"},"nodeType":"YulFunctionCall","src":"120:15:12"},"nodeType":"YulExpressionStatement","src":"120:15:12"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"14:127:12"},{"body":{"nodeType":"YulBlock","src":"210:821:12","statements":[{"body":{"nodeType":"YulBlock","src":"259:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"268:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"271:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"261:6:12"},"nodeType":"YulFunctionCall","src":"261:12:12"},"nodeType":"YulExpressionStatement","src":"261:12:12"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"238:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"246:4:12","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"234:3:12"},"nodeType":"YulFunctionCall","src":"234:17:12"},{"name":"end","nodeType":"YulIdentifier","src":"253:3:12"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"230:3:12"},"nodeType":"YulFunctionCall","src":"230:27:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"223:6:12"},"nodeType":"YulFunctionCall","src":"223:35:12"},"nodeType":"YulIf","src":"220:55:12"},{"nodeType":"YulVariableDeclaration","src":"284:23:12","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"300:6:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"294:5:12"},"nodeType":"YulFunctionCall","src":"294:13:12"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"288:2:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"316:28:12","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"334:2:12","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"338:1:12","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"330:3:12"},"nodeType":"YulFunctionCall","src":"330:10:12"},{"kind":"number","nodeType":"YulLiteral","src":"342:1:12","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"326:3:12"},"nodeType":"YulFunctionCall","src":"326:18:12"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"320:2:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"367:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"369:16:12"},"nodeType":"YulFunctionCall","src":"369:18:12"},"nodeType":"YulExpressionStatement","src":"369:18:12"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"359:2:12"},{"name":"_2","nodeType":"YulIdentifier","src":"363:2:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"356:2:12"},"nodeType":"YulFunctionCall","src":"356:10:12"},"nodeType":"YulIf","src":"353:36:12"},{"nodeType":"YulVariableDeclaration","src":"398:17:12","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"412:2:12","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"408:3:12"},"nodeType":"YulFunctionCall","src":"408:7:12"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"402:2:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"424:23:12","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"444:2:12","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"438:5:12"},"nodeType":"YulFunctionCall","src":"438:9:12"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"428:6:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"456:71:12","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"478:6:12"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"502:2:12"},{"kind":"number","nodeType":"YulLiteral","src":"506:4:12","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"498:3:12"},"nodeType":"YulFunctionCall","src":"498:13:12"},{"name":"_3","nodeType":"YulIdentifier","src":"513:2:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"494:3:12"},"nodeType":"YulFunctionCall","src":"494:22:12"},{"kind":"number","nodeType":"YulLiteral","src":"518:2:12","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"490:3:12"},"nodeType":"YulFunctionCall","src":"490:31:12"},{"name":"_3","nodeType":"YulIdentifier","src":"523:2:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"486:3:12"},"nodeType":"YulFunctionCall","src":"486:40:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"474:3:12"},"nodeType":"YulFunctionCall","src":"474:53:12"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"460:10:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"586:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"588:16:12"},"nodeType":"YulFunctionCall","src":"588:18:12"},"nodeType":"YulExpressionStatement","src":"588:18:12"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"545:10:12"},{"name":"_2","nodeType":"YulIdentifier","src":"557:2:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"542:2:12"},"nodeType":"YulFunctionCall","src":"542:18:12"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"565:10:12"},{"name":"memPtr","nodeType":"YulIdentifier","src":"577:6:12"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"562:2:12"},"nodeType":"YulFunctionCall","src":"562:22:12"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"539:2:12"},"nodeType":"YulFunctionCall","src":"539:46:12"},"nodeType":"YulIf","src":"536:72:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"624:2:12","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"628:10:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"617:6:12"},"nodeType":"YulFunctionCall","src":"617:22:12"},"nodeType":"YulExpressionStatement","src":"617:22:12"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"655:6:12"},{"name":"_1","nodeType":"YulIdentifier","src":"663:2:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"648:6:12"},"nodeType":"YulFunctionCall","src":"648:18:12"},"nodeType":"YulExpressionStatement","src":"648:18:12"},{"nodeType":"YulVariableDeclaration","src":"675:14:12","value":{"kind":"number","nodeType":"YulLiteral","src":"685:4:12","type":"","value":"0x20"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"679:2:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"735:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"744:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"747:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"737:6:12"},"nodeType":"YulFunctionCall","src":"737:12:12"},"nodeType":"YulExpressionStatement","src":"737:12:12"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"712:6:12"},{"name":"_1","nodeType":"YulIdentifier","src":"720:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"708:3:12"},"nodeType":"YulFunctionCall","src":"708:15:12"},{"name":"_4","nodeType":"YulIdentifier","src":"725:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"704:3:12"},"nodeType":"YulFunctionCall","src":"704:24:12"},{"name":"end","nodeType":"YulIdentifier","src":"730:3:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"701:2:12"},"nodeType":"YulFunctionCall","src":"701:33:12"},"nodeType":"YulIf","src":"698:53:12"},{"nodeType":"YulVariableDeclaration","src":"760:10:12","value":{"kind":"number","nodeType":"YulLiteral","src":"769:1:12","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"764:1:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"825:87:12","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"854:6:12"},{"name":"i","nodeType":"YulIdentifier","src":"862:1:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"850:3:12"},"nodeType":"YulFunctionCall","src":"850:14:12"},{"name":"_4","nodeType":"YulIdentifier","src":"866:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"846:3:12"},"nodeType":"YulFunctionCall","src":"846:23:12"},{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"885:6:12"},{"name":"i","nodeType":"YulIdentifier","src":"893:1:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"881:3:12"},"nodeType":"YulFunctionCall","src":"881:14:12"},{"name":"_4","nodeType":"YulIdentifier","src":"897:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"877:3:12"},"nodeType":"YulFunctionCall","src":"877:23:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"871:5:12"},"nodeType":"YulFunctionCall","src":"871:30:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"839:6:12"},"nodeType":"YulFunctionCall","src":"839:63:12"},"nodeType":"YulExpressionStatement","src":"839:63:12"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"790:1:12"},{"name":"_1","nodeType":"YulIdentifier","src":"793:2:12"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"787:2:12"},"nodeType":"YulFunctionCall","src":"787:9:12"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"797:19:12","statements":[{"nodeType":"YulAssignment","src":"799:15:12","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"808:1:12"},{"name":"_4","nodeType":"YulIdentifier","src":"811:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"804:3:12"},"nodeType":"YulFunctionCall","src":"804:10:12"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"799:1:12"}]}]},"pre":{"nodeType":"YulBlock","src":"783:3:12","statements":[]},"src":"779:133:12"},{"body":{"nodeType":"YulBlock","src":"942:59:12","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"971:6:12"},{"name":"_1","nodeType":"YulIdentifier","src":"979:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"967:3:12"},"nodeType":"YulFunctionCall","src":"967:15:12"},{"name":"_4","nodeType":"YulIdentifier","src":"984:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"963:3:12"},"nodeType":"YulFunctionCall","src":"963:24:12"},{"kind":"number","nodeType":"YulLiteral","src":"989:1:12","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"956:6:12"},"nodeType":"YulFunctionCall","src":"956:35:12"},"nodeType":"YulExpressionStatement","src":"956:35:12"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"927:1:12"},{"name":"_1","nodeType":"YulIdentifier","src":"930:2:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"924:2:12"},"nodeType":"YulFunctionCall","src":"924:9:12"},"nodeType":"YulIf","src":"921:80:12"},{"nodeType":"YulAssignment","src":"1010:15:12","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"1019:6:12"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1010:5:12"}]}]},"name":"abi_decode_string_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"184:6:12","type":""},{"name":"end","nodeType":"YulTypedName","src":"192:3:12","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"200:5:12","type":""}],"src":"146:885:12"},{"body":{"nodeType":"YulBlock","src":"1186:738:12","statements":[{"body":{"nodeType":"YulBlock","src":"1233:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1242:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1245:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1235:6:12"},"nodeType":"YulFunctionCall","src":"1235:12:12"},"nodeType":"YulExpressionStatement","src":"1235:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1207:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"1216:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1203:3:12"},"nodeType":"YulFunctionCall","src":"1203:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"1228:3:12","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1199:3:12"},"nodeType":"YulFunctionCall","src":"1199:33:12"},"nodeType":"YulIf","src":"1196:53:12"},{"nodeType":"YulVariableDeclaration","src":"1258:30:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1278:9:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1272:5:12"},"nodeType":"YulFunctionCall","src":"1272:16:12"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1262:6:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1297:28:12","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1315:2:12","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1319:1:12","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1311:3:12"},"nodeType":"YulFunctionCall","src":"1311:10:12"},{"kind":"number","nodeType":"YulLiteral","src":"1323:1:12","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1307:3:12"},"nodeType":"YulFunctionCall","src":"1307:18:12"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1301:2:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"1352:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1361:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1364:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1354:6:12"},"nodeType":"YulFunctionCall","src":"1354:12:12"},"nodeType":"YulExpressionStatement","src":"1354:12:12"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1340:6:12"},{"name":"_1","nodeType":"YulIdentifier","src":"1348:2:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1337:2:12"},"nodeType":"YulFunctionCall","src":"1337:14:12"},"nodeType":"YulIf","src":"1334:34:12"},{"nodeType":"YulAssignment","src":"1377:71:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1420:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"1431:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1416:3:12"},"nodeType":"YulFunctionCall","src":"1416:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1440:7:12"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1387:28:12"},"nodeType":"YulFunctionCall","src":"1387:61:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1377:6:12"}]},{"nodeType":"YulVariableDeclaration","src":"1457:41:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1483:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"1494:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1479:3:12"},"nodeType":"YulFunctionCall","src":"1479:18:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1473:5:12"},"nodeType":"YulFunctionCall","src":"1473:25:12"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"1461:8:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"1527:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1536:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1539:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1529:6:12"},"nodeType":"YulFunctionCall","src":"1529:12:12"},"nodeType":"YulExpressionStatement","src":"1529:12:12"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"1513:8:12"},{"name":"_1","nodeType":"YulIdentifier","src":"1523:2:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1510:2:12"},"nodeType":"YulFunctionCall","src":"1510:16:12"},"nodeType":"YulIf","src":"1507:36:12"},{"nodeType":"YulAssignment","src":"1552:73:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1595:9:12"},{"name":"offset_1","nodeType":"YulIdentifier","src":"1606:8:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1591:3:12"},"nodeType":"YulFunctionCall","src":"1591:24:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1617:7:12"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1562:28:12"},"nodeType":"YulFunctionCall","src":"1562:63:12"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1552:6:12"}]},{"nodeType":"YulVariableDeclaration","src":"1634:38:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1657:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"1668:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1653:3:12"},"nodeType":"YulFunctionCall","src":"1653:18:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1647:5:12"},"nodeType":"YulFunctionCall","src":"1647:25:12"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1638:5:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"1720:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1729:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1732:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1722:6:12"},"nodeType":"YulFunctionCall","src":"1722:12:12"},"nodeType":"YulExpressionStatement","src":"1722:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1694:5:12"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1705:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"1712:4:12","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1701:3:12"},"nodeType":"YulFunctionCall","src":"1701:16:12"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1691:2:12"},"nodeType":"YulFunctionCall","src":"1691:27:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1684:6:12"},"nodeType":"YulFunctionCall","src":"1684:35:12"},"nodeType":"YulIf","src":"1681:55:12"},{"nodeType":"YulAssignment","src":"1745:15:12","value":{"name":"value","nodeType":"YulIdentifier","src":"1755:5:12"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1745:6:12"}]},{"nodeType":"YulVariableDeclaration","src":"1769:40:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1794:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"1805:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1790:3:12"},"nodeType":"YulFunctionCall","src":"1790:18:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1784:5:12"},"nodeType":"YulFunctionCall","src":"1784:25:12"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"1773:7:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"1876:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1885:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1888:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1878:6:12"},"nodeType":"YulFunctionCall","src":"1878:12:12"},"nodeType":"YulExpressionStatement","src":"1878:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"1831:7:12"},{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"1844:7:12"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1861:3:12","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1866:1:12","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1857:3:12"},"nodeType":"YulFunctionCall","src":"1857:11:12"},{"kind":"number","nodeType":"YulLiteral","src":"1870:1:12","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1853:3:12"},"nodeType":"YulFunctionCall","src":"1853:19:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1840:3:12"},"nodeType":"YulFunctionCall","src":"1840:33:12"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1828:2:12"},"nodeType":"YulFunctionCall","src":"1828:46:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1821:6:12"},"nodeType":"YulFunctionCall","src":"1821:54:12"},"nodeType":"YulIf","src":"1818:74:12"},{"nodeType":"YulAssignment","src":"1901:17:12","value":{"name":"value_1","nodeType":"YulIdentifier","src":"1911:7:12"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"1901:6:12"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint8t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1128:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1139:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1151:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1159:6:12","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1167:6:12","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1175:6:12","type":""}],"src":"1036:888:12"},{"body":{"nodeType":"YulBlock","src":"2142:276:12","statements":[{"nodeType":"YulAssignment","src":"2152:27:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2164:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"2175:3:12","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2160:3:12"},"nodeType":"YulFunctionCall","src":"2160:19:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2152:4:12"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2195:9:12"},{"name":"value0","nodeType":"YulIdentifier","src":"2206:6:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2188:6:12"},"nodeType":"YulFunctionCall","src":"2188:25:12"},"nodeType":"YulExpressionStatement","src":"2188:25:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2233:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"2244:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2229:3:12"},"nodeType":"YulFunctionCall","src":"2229:18:12"},{"name":"value1","nodeType":"YulIdentifier","src":"2249:6:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2222:6:12"},"nodeType":"YulFunctionCall","src":"2222:34:12"},"nodeType":"YulExpressionStatement","src":"2222:34:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2276:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"2287:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2272:3:12"},"nodeType":"YulFunctionCall","src":"2272:18:12"},{"name":"value2","nodeType":"YulIdentifier","src":"2292:6:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2265:6:12"},"nodeType":"YulFunctionCall","src":"2265:34:12"},"nodeType":"YulExpressionStatement","src":"2265:34:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2319:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"2330:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2315:3:12"},"nodeType":"YulFunctionCall","src":"2315:18:12"},{"name":"value3","nodeType":"YulIdentifier","src":"2335:6:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2308:6:12"},"nodeType":"YulFunctionCall","src":"2308:34:12"},"nodeType":"YulExpressionStatement","src":"2308:34:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2362:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"2373:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2358:3:12"},"nodeType":"YulFunctionCall","src":"2358:19:12"},{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"2383:6:12"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2399:3:12","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2404:1:12","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2395:3:12"},"nodeType":"YulFunctionCall","src":"2395:11:12"},{"kind":"number","nodeType":"YulLiteral","src":"2408:1:12","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2391:3:12"},"nodeType":"YulFunctionCall","src":"2391:19:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2379:3:12"},"nodeType":"YulFunctionCall","src":"2379:32:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2351:6:12"},"nodeType":"YulFunctionCall","src":"2351:61:12"},"nodeType":"YulExpressionStatement","src":"2351:61:12"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2079:9:12","type":""},{"name":"value4","nodeType":"YulTypedName","src":"2090:6:12","type":""},{"name":"value3","nodeType":"YulTypedName","src":"2098:6:12","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2106:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2114:6:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2122:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2133:4:12","type":""}],"src":"1929:489:12"},{"body":{"nodeType":"YulBlock","src":"2597:182:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2614:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"2625:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2607:6:12"},"nodeType":"YulFunctionCall","src":"2607:21:12"},"nodeType":"YulExpressionStatement","src":"2607:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2648:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"2659:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2644:3:12"},"nodeType":"YulFunctionCall","src":"2644:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"2664:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2637:6:12"},"nodeType":"YulFunctionCall","src":"2637:30:12"},"nodeType":"YulExpressionStatement","src":"2637:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2687:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"2698:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2683:3:12"},"nodeType":"YulFunctionCall","src":"2683:18:12"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"2703:34:12","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2676:6:12"},"nodeType":"YulFunctionCall","src":"2676:62:12"},"nodeType":"YulExpressionStatement","src":"2676:62:12"},{"nodeType":"YulAssignment","src":"2747:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2759:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"2770:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2755:3:12"},"nodeType":"YulFunctionCall","src":"2755:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2747:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2574:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2588:4:12","type":""}],"src":"2423:356:12"},{"body":{"nodeType":"YulBlock","src":"2958:228:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2975:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"2986:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2968:6:12"},"nodeType":"YulFunctionCall","src":"2968:21:12"},"nodeType":"YulExpressionStatement","src":"2968:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3009:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"3020:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3005:3:12"},"nodeType":"YulFunctionCall","src":"3005:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"3025:2:12","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2998:6:12"},"nodeType":"YulFunctionCall","src":"2998:30:12"},"nodeType":"YulExpressionStatement","src":"2998:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3048:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"3059:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3044:3:12"},"nodeType":"YulFunctionCall","src":"3044:18:12"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"3064:34:12","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3037:6:12"},"nodeType":"YulFunctionCall","src":"3037:62:12"},"nodeType":"YulExpressionStatement","src":"3037:62:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3119:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"3130:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3115:3:12"},"nodeType":"YulFunctionCall","src":"3115:18:12"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"3135:8:12","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3108:6:12"},"nodeType":"YulFunctionCall","src":"3108:36:12"},"nodeType":"YulExpressionStatement","src":"3108:36:12"},{"nodeType":"YulAssignment","src":"3153:27:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3165:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"3176:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3161:3:12"},"nodeType":"YulFunctionCall","src":"3161:19:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3153:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2935:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2949:4:12","type":""}],"src":"2784:402:12"},{"body":{"nodeType":"YulBlock","src":"3246:325:12","statements":[{"nodeType":"YulAssignment","src":"3256:22:12","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3270:1:12","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"3273:4:12"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3266:3:12"},"nodeType":"YulFunctionCall","src":"3266:12:12"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3256:6:12"}]},{"nodeType":"YulVariableDeclaration","src":"3287:38:12","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3317:4:12"},{"kind":"number","nodeType":"YulLiteral","src":"3323:1:12","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3313:3:12"},"nodeType":"YulFunctionCall","src":"3313:12:12"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"3291:18:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"3364:31:12","statements":[{"nodeType":"YulAssignment","src":"3366:27:12","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3380:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"3388:4:12","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3376:3:12"},"nodeType":"YulFunctionCall","src":"3376:17:12"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3366:6:12"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3344:18:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3337:6:12"},"nodeType":"YulFunctionCall","src":"3337:26:12"},"nodeType":"YulIf","src":"3334:61:12"},{"body":{"nodeType":"YulBlock","src":"3454:111:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3475:1:12","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3482:3:12","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3487:10:12","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3478:3:12"},"nodeType":"YulFunctionCall","src":"3478:20:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3468:6:12"},"nodeType":"YulFunctionCall","src":"3468:31:12"},"nodeType":"YulExpressionStatement","src":"3468:31:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3519:1:12","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3522:4:12","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3512:6:12"},"nodeType":"YulFunctionCall","src":"3512:15:12"},"nodeType":"YulExpressionStatement","src":"3512:15:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3547:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3550:4:12","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3540:6:12"},"nodeType":"YulFunctionCall","src":"3540:15:12"},"nodeType":"YulExpressionStatement","src":"3540:15:12"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3410:18:12"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3433:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"3441:2:12","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3430:2:12"},"nodeType":"YulFunctionCall","src":"3430:14:12"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3407:2:12"},"nodeType":"YulFunctionCall","src":"3407:38:12"},"nodeType":"YulIf","src":"3404:161:12"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3226:4:12","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3235:6:12","type":""}],"src":"3191:380:12"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), 0)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint8t_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n        let value := mload(add(headStart, 64))\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value2 := value\n        let value_1 := mload(add(headStart, 96))\n        if iszero(eq(value_1, and(value_1, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value3 := value_1\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}","id":12,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162001bd738038062001bd7833981016040819052620000349162000442565b8351849084906200004d906003906020850190620002cf565b50805162000063906004906020840190620002cf565b50506005805460ff191660121790555060006200007d3390565b60058054610100600160a81b0319166101006001600160a01b038416908102919091179091556040519192509060009060008051602062001bb7833981519152908290a350835160208086019190912060408051808201825260018152603160f81b9084015280517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f938101939093528201527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6606082015246608082018190523060a08301529060c00160408051808303601f1901815291905280516020909101206007556005805460ff851660ff199091161790556001600160a01b0382166200018857600080fd5b6200019382620001ac565b50506008805460ff191660011790555062000523915050565b6005546001600160a01b03610100909104163314620002125760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6001600160a01b038116620002795760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840162000209565b6005546040516001600160a01b03808416926101009004169060008051602062001bb783398151915290600090a3600580546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b828054620002dd90620004e6565b90600052602060002090601f0160209004810192826200030157600085556200034c565b82601f106200031c57805160ff19168380011785556200034c565b828001600101855582156200034c579182015b828111156200034c5782518255916020019190600101906200032f565b506200035a9291506200035e565b5090565b5b808211156200035a57600081556001016200035f565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200039d57600080fd5b81516001600160401b0380821115620003ba57620003ba62000375565b604051601f8301601f19908116603f01168101908282118183101715620003e557620003e562000375565b816040528381526020925086838588010111156200040257600080fd5b600091505b8382101562000426578582018301518183018401529082019062000407565b83821115620004385760008385830101525b9695505050505050565b600080600080608085870312156200045957600080fd5b84516001600160401b03808211156200047157600080fd5b6200047f888389016200038b565b955060208701519150808211156200049657600080fd5b50620004a5878288016200038b565b935050604085015160ff81168114620004bd57600080fd5b60608601519092506001600160a01b0381168114620004db57600080fd5b939692955090935050565b600181811c90821680620004fb57607f821691505b602082108114156200051d57634e487b7160e01b600052602260045260246000fd5b50919050565b61168480620005336000396000f3fe608060405234801561001057600080fd5b506004361061018d5760003560e01c806370a08231116100e3578063a0712d681161008c578063d505accf11610066578063d505accf146103b7578063dd62ed3e146103ca578063f2fde38b1461041057600080fd5b8063a0712d681461037e578063a457c2d714610391578063a9059cbb146103a457600080fd5b80637ecebe00116100bd5780637ecebe00146102fd5780638da5cb5b1461033357806395d89b411461037657600080fd5b806370a0823114610283578063715018a6146102b957806378160376146102c157600080fd5b806330adf81f11610145578063395093511161011f578063395093511461025257806340c10f19146102655780635300f82b1461027857600080fd5b806330adf81f1461020d578063313ce567146102345780633644e5151461024957600080fd5b806318160ddd1161017657806318160ddd146101d35780631c02bc31146101e557806323b872dd146101fa57600080fd5b806306fdde0314610192578063095ea7b3146101b0575b600080fd5b61019a610423565b6040516101a791906113a8565b60405180910390f35b6101c36101be3660046113e6565b6104b5565b60405190151581526020016101a7565b6002545b6040519081526020016101a7565b6101f86101f3366004611410565b6104cc565b005b6101c3610208366004611432565b610589565b6101d77f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b60055460405160ff90911681526020016101a7565b6101d760075481565b6101c36102603660046113e6565b6105ff565b6101c36102733660046113e6565b610642565b60085460ff166101c3565b6101d761029136600461146e565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b6101f86106e6565b61019a6040518060400160405280600181526020017f310000000000000000000000000000000000000000000000000000000000000081525081565b6101d761030b36600461146e565b73ffffffffffffffffffffffffffffffffffffffff1660009081526006602052604090205490565b600554610100900473ffffffffffffffffffffffffffffffffffffffff1660405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101a7565b61019a6107e1565b6101c361038c366004611489565b6107f0565b6101c361039f3660046113e6565b61089d565b6101c36103b23660046113e6565b6108f9565b6101f86103c53660046114a2565b610906565b6101d76103d8366004611515565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b6101f861041e36600461146e565b610c27565b60606003805461043290611548565b80601f016020809104026020016040519081016040528092919081815260200182805461045e90611548565b80156104ab5780601f10610480576101008083540402835291602001916104ab565b820191906000526020600020905b81548152906001019060200180831161048e57829003601f168201915b5050505050905090565b60006104c2338484610de9565b5060015b92915050565b60055473ffffffffffffffffffffffffffffffffffffffff610100909104163314610558576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b600880547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055565b6000610596848484610f9d565b6105f584336105f0856040518060600160405280602881526020016116026028913973ffffffffffffffffffffffffffffffffffffffff8a16600090815260016020908152604080832033845290915290205491906111c7565b610de9565b5060019392505050565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490916104c29185906105f0908661120e565b60085460009060ff161515600114156106dc5760055473ffffffffffffffffffffffffffffffffffffffff6101009091041633146106dc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161054f565b6104c2838361121e565b60055473ffffffffffffffffffffffffffffffffffffffff61010090910416331461076d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161054f565b600554604051600091610100900473ffffffffffffffffffffffffffffffffffffffff16907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600580547fffffffffffffffffffffff0000000000000000000000000000000000000000ff169055565b60606004805461043290611548565b60085460009060ff1615156001141561088a5760055473ffffffffffffffffffffffffffffffffffffffff61010090910416331461088a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161054f565b610894338361121e565b5060015b919050565b60006104c233846105f08560405180606001604052806025815260200161162a6025913933600090815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8d16845290915290205491906111c7565b60006104c2338484610f9d565b73ffffffffffffffffffffffffffffffffffffffff8716610983576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f494e56414c49445f4f574e455200000000000000000000000000000000000000604482015260640161054f565b834211156109ed576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f494e56414c49445f45585049524154494f4e0000000000000000000000000000604482015260640161054f565b73ffffffffffffffffffffffffffffffffffffffff87811660008181526006602090815260408083205460075482517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98186015280840196909652958c166060860152608085018b905260a0850181905260c08086018b90528251808703909101815260e08601909252815191909201207f19010000000000000000000000000000000000000000000000000000000000006101008501526101028401949094526101228301939093529061014201604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815282825280516020918201206000845290830180835281905260ff8816918301919091526060820186905260808201859052915060019060a0016020604051602081039080840390855afa158015610b42573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff1614610be0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f494e56414c49445f5349474e4154555245000000000000000000000000000000604482015260640161054f565b610beb82600161159c565b73ffffffffffffffffffffffffffffffffffffffff8a16600090815260066020526040902055610c1c898989610de9565b505050505050505050565b60055473ffffffffffffffffffffffffffffffffffffffff610100909104163314610cae576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161054f565b73ffffffffffffffffffffffffffffffffffffffff8116610d51576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161054f565b60055460405173ffffffffffffffffffffffffffffffffffffffff80841692610100900416907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a36005805473ffffffffffffffffffffffffffffffffffffffff909216610100027fffffffffffffffffffffff0000000000000000000000000000000000000000ff909216919091179055565b73ffffffffffffffffffffffffffffffffffffffff8316610e8b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f7265737300000000000000000000000000000000000000000000000000000000606482015260840161054f565b73ffffffffffffffffffffffffffffffffffffffff8216610f2e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f7373000000000000000000000000000000000000000000000000000000000000606482015260840161054f565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff8316611040576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f6472657373000000000000000000000000000000000000000000000000000000606482015260840161054f565b73ffffffffffffffffffffffffffffffffffffffff82166110e3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f6573730000000000000000000000000000000000000000000000000000000000606482015260840161054f565b61112d816040518060600160405280602681526020016115dc6026913973ffffffffffffffffffffffffffffffffffffffff861660009081526020819052604090205491906111c7565b73ffffffffffffffffffffffffffffffffffffffff8085166000908152602081905260408082209390935590841681522054611169908261120e565b73ffffffffffffffffffffffffffffffffffffffff8381166000818152602081815260409182902094909455518481529092918616917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9101610f90565b8183038184821115611206576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054f91906113a8565b509392505050565b808201828110156104c657600080fd5b73ffffffffffffffffffffffffffffffffffffffff821661129b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161054f565b6002546112a8908261120e565b60025573ffffffffffffffffffffffffffffffffffffffff82166000908152602081905260409020546112db908261120e565b73ffffffffffffffffffffffffffffffffffffffff8316600081815260208181526040808320949094559251848152919290917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6000815180845260005b8181101561136357602081850181015186830182015201611347565b81811115611375576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006113bb602083018461133d565b9392505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461089857600080fd5b600080604083850312156113f957600080fd5b611402836113c2565b946020939093013593505050565b60006020828403121561142257600080fd5b813580151581146113bb57600080fd5b60008060006060848603121561144757600080fd5b611450846113c2565b925061145e602085016113c2565b9150604084013590509250925092565b60006020828403121561148057600080fd5b6113bb826113c2565b60006020828403121561149b57600080fd5b5035919050565b600080600080600080600060e0888a0312156114bd57600080fd5b6114c6886113c2565b96506114d4602089016113c2565b95506040880135945060608801359350608088013560ff811681146114f857600080fd5b9699959850939692959460a0840135945060c09093013592915050565b6000806040838503121561152857600080fd5b611531836113c2565b915061153f602084016113c2565b90509250929050565b600181811c9082168061155c57607f821691505b60208210811415611596577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b600082198211156115d6577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b50019056fe45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220169abeea256a742a5e4c40a8e2f1fcc3699fe4f4e71502e92a3f852e99efe02664736f6c634300080a00338be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1BD7 CODESIZE SUB DUP1 PUSH3 0x1BD7 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x442 JUMP JUMPDEST DUP4 MLOAD DUP5 SWAP1 DUP5 SWAP1 PUSH3 0x4D SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x2CF JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x63 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x2CF JUMP JUMPDEST POP POP PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x12 OR SWAP1 SSTORE POP PUSH1 0x0 PUSH3 0x7D CALLER SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND PUSH2 0x100 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP3 POP SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x1BB7 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP3 SWAP1 LOG3 POP DUP4 MLOAD PUSH1 0x20 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x31 PUSH1 0xF8 SHL SWAP1 DUP5 ADD MSTORE DUP1 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP3 ADD MSTORE PUSH32 0xC89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE ADDRESS PUSH1 0xA0 DUP4 ADD MSTORE SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB PUSH1 0x1F NOT ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 PUSH1 0x7 SSTORE PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF DUP6 AND PUSH1 0xFF NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x188 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x193 DUP3 PUSH3 0x1AC JUMP JUMPDEST POP POP PUSH1 0x8 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE POP PUSH3 0x523 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH3 0x212 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0x279 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x209 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 PUSH2 0x100 SWAP1 DIV AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x1BB7 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH2 0x100 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x2DD SWAP1 PUSH3 0x4E6 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x301 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x34C JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x31C JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x34C JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x34C JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x34C JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x32F JUMP JUMPDEST POP PUSH3 0x35A SWAP3 SWAP2 POP PUSH3 0x35E JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x35A JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x35F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x39D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x3BA JUMPI PUSH3 0x3BA PUSH3 0x375 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x3E5 JUMPI PUSH3 0x3E5 PUSH3 0x375 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x402 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x426 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x407 JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x438 JUMPI PUSH1 0x0 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x459 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x471 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x47F DUP9 DUP4 DUP10 ADD PUSH3 0x38B JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x496 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x4A5 DUP8 DUP3 DUP9 ADD PUSH3 0x38B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH3 0x4BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x60 DUP7 ADD MLOAD SWAP1 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x4DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x4FB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x51D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1684 DUP1 PUSH3 0x533 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x18D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xE3 JUMPI DUP1 PUSH4 0xA0712D68 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xD505ACCF GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x3B7 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3CA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x410 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x37E JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x391 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7ECEBE00 GT PUSH2 0xBD JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x2FD JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x333 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x376 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2B9 JUMPI DUP1 PUSH4 0x78160376 EQ PUSH2 0x2C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x30ADF81F GT PUSH2 0x145 JUMPI DUP1 PUSH4 0x39509351 GT PUSH2 0x11F JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0x5300F82B EQ PUSH2 0x278 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x249 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x176 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x1C02BC31 EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1B0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19A PUSH2 0x423 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A7 SWAP2 SWAP1 PUSH2 0x13A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C3 PUSH2 0x1BE CALLDATASIZE PUSH1 0x4 PUSH2 0x13E6 JUMP JUMPDEST PUSH2 0x4B5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A7 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A7 JUMP JUMPDEST PUSH2 0x1F8 PUSH2 0x1F3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1410 JUMP JUMPDEST PUSH2 0x4CC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C3 PUSH2 0x208 CALLDATASIZE PUSH1 0x4 PUSH2 0x1432 JUMP JUMPDEST PUSH2 0x589 JUMP JUMPDEST PUSH2 0x1D7 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A7 JUMP JUMPDEST PUSH2 0x1D7 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1C3 PUSH2 0x260 CALLDATASIZE PUSH1 0x4 PUSH2 0x13E6 JUMP JUMPDEST PUSH2 0x5FF JUMP JUMPDEST PUSH2 0x1C3 PUSH2 0x273 CALLDATASIZE PUSH1 0x4 PUSH2 0x13E6 JUMP JUMPDEST PUSH2 0x642 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xFF AND PUSH2 0x1C3 JUMP JUMPDEST PUSH2 0x1D7 PUSH2 0x291 CALLDATASIZE PUSH1 0x4 PUSH2 0x146E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1F8 PUSH2 0x6E6 JUMP JUMPDEST PUSH2 0x19A PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x1D7 PUSH2 0x30B CALLDATASIZE PUSH1 0x4 PUSH2 0x146E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x100 SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A7 JUMP JUMPDEST PUSH2 0x19A PUSH2 0x7E1 JUMP JUMPDEST PUSH2 0x1C3 PUSH2 0x38C CALLDATASIZE PUSH1 0x4 PUSH2 0x1489 JUMP JUMPDEST PUSH2 0x7F0 JUMP JUMPDEST PUSH2 0x1C3 PUSH2 0x39F CALLDATASIZE PUSH1 0x4 PUSH2 0x13E6 JUMP JUMPDEST PUSH2 0x89D JUMP JUMPDEST PUSH2 0x1C3 PUSH2 0x3B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x13E6 JUMP JUMPDEST PUSH2 0x8F9 JUMP JUMPDEST PUSH2 0x1F8 PUSH2 0x3C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x14A2 JUMP JUMPDEST PUSH2 0x906 JUMP JUMPDEST PUSH2 0x1D7 PUSH2 0x3D8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1515 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1F8 PUSH2 0x41E CALLDATASIZE PUSH1 0x4 PUSH2 0x146E JUMP JUMPDEST PUSH2 0xC27 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x432 SWAP1 PUSH2 0x1548 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x45E SWAP1 PUSH2 0x1548 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4AB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x480 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4AB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x48E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C2 CALLER DUP5 DUP5 PUSH2 0xDE9 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x558 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x596 DUP5 DUP5 DUP5 PUSH2 0xF9D JUMP JUMPDEST PUSH2 0x5F5 DUP5 CALLER PUSH2 0x5F0 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1602 PUSH1 0x28 SWAP2 CODECOPY PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x11C7 JUMP JUMPDEST PUSH2 0xDE9 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x4C2 SWAP2 DUP6 SWAP1 PUSH2 0x5F0 SWAP1 DUP7 PUSH2 0x120E JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ ISZERO PUSH2 0x6DC JUMPI PUSH1 0x5 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x6DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x54F JUMP JUMPDEST PUSH2 0x4C2 DUP4 DUP4 PUSH2 0x121E JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x76D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x54F JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH2 0x100 SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x5 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000FF AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x432 SWAP1 PUSH2 0x1548 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ ISZERO PUSH2 0x88A JUMPI PUSH1 0x5 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x88A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x54F JUMP JUMPDEST PUSH2 0x894 CALLER DUP4 PUSH2 0x121E JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C2 CALLER DUP5 PUSH2 0x5F0 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x162A PUSH1 0x25 SWAP2 CODECOPY CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x11C7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C2 CALLER DUP5 DUP5 PUSH2 0xF9D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND PUSH2 0x983 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F4F574E455200000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x54F JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x9ED JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F45585049524154494F4E0000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x54F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x7 SLOAD DUP3 MLOAD PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 DUP7 ADD MSTORE DUP1 DUP5 ADD SWAP7 SWAP1 SWAP7 MSTORE SWAP6 DUP13 AND PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD DUP12 SWAP1 MSTORE PUSH1 0xA0 DUP6 ADD DUP2 SWAP1 MSTORE PUSH1 0xC0 DUP1 DUP7 ADD DUP12 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP8 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xE0 DUP7 ADD SWAP1 SWAP3 MSTORE DUP2 MLOAD SWAP2 SWAP1 SWAP3 ADD KECCAK256 PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 PUSH2 0x100 DUP6 ADD MSTORE PUSH2 0x102 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH2 0x122 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP1 PUSH2 0x142 ADD PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0x0 DUP5 MSTORE SWAP1 DUP4 ADD DUP1 DUP4 MSTORE DUP2 SWAP1 MSTORE PUSH1 0xFF DUP9 AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP3 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 POP PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB42 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBE0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F5349474E4154555245000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x54F JUMP JUMPDEST PUSH2 0xBEB DUP3 PUSH1 0x1 PUSH2 0x159C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0xC1C DUP10 DUP10 DUP10 PUSH2 0xDE9 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0xCAE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x54F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0xD51 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x54F JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND SWAP3 PUSH2 0x100 SWAP1 DIV AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x5 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND PUSH2 0x100 MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000FF SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0xE8B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x54F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0xF2E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x54F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x1040 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x54F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x10E3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x54F JUMP JUMPDEST PUSH2 0x112D DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x15DC PUSH1 0x26 SWAP2 CODECOPY PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x11C7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x1169 SWAP1 DUP3 PUSH2 0x120E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE MLOAD DUP5 DUP2 MSTORE SWAP1 SWAP3 SWAP2 DUP7 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH2 0xF90 JUMP JUMPDEST DUP2 DUP4 SUB DUP2 DUP5 DUP3 GT ISZERO PUSH2 0x1206 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54F SWAP2 SWAP1 PUSH2 0x13A8 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP3 DUP2 LT ISZERO PUSH2 0x4C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x129B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x54F JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x12A8 SWAP1 DUP3 PUSH2 0x120E JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x12DB SWAP1 DUP3 PUSH2 0x120E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE SWAP3 MLOAD DUP5 DUP2 MSTORE SWAP2 SWAP3 SWAP1 SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1363 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1347 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1375 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x13BB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x133D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x898 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1402 DUP4 PUSH2 0x13C2 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1422 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x13BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1447 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1450 DUP5 PUSH2 0x13C2 JUMP JUMPDEST SWAP3 POP PUSH2 0x145E PUSH1 0x20 DUP6 ADD PUSH2 0x13C2 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1480 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13BB DUP3 PUSH2 0x13C2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x149B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x14BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14C6 DUP9 PUSH2 0x13C2 JUMP JUMPDEST SWAP7 POP PUSH2 0x14D4 PUSH1 0x20 DUP10 ADD PUSH2 0x13C2 JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x14F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 PUSH1 0xA0 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0xC0 SWAP1 SWAP4 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1528 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1531 DUP4 PUSH2 0x13C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x153F PUSH1 0x20 DUP5 ADD PUSH2 0x13C2 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x155C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1596 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x15D6 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x2062616C616E636545524332303A207472616E73 PUSH7 0x657220616D6F75 PUSH15 0x74206578636565647320616C6C6F77 PUSH2 0x6E63 PUSH6 0x45524332303A KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x7358221220169A 0xBE 0xEA 0x25 PUSH11 0x742A5E4C40A8E2F1FCC369 SWAP16 0xE4 DELEGATECALL 0xE7 ISZERO MUL 0xE9 0x2A EXTCODEHASH DUP6 0x2E SWAP10 0xEF 0xE0 0x26 PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER DUP12 0xE0 SMOD SWAP13 MSTORE8 AND MSIZE EQ SGT DIFFICULTY 0xCD 0x1F 0xD0 LOG4 CALLCODE DUP5 NOT 0x49 PUSH32 0x9722A3DAAFE3B4186F6B6457E000000000000000000000000000000000000000 ","sourceMap":"402:3029:11:-:0;;;1239:482;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2007:12:2;;1350:4:11;;1356:6;;2007:12:2;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;2025:16:2;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;;2047:9:2;:14;;-1:-1:-1;;2047:14:2;2059:2;2047:14;;;-1:-1:-1;2047:9:2;855:12:4;678:10:1;;587:107;855:12:4;873:6;:18;;-1:-1:-1;;;;;;873:18:4;;-1:-1:-1;;;;;873:18:4;;;;;;;;;;;;902:43;;873:18;;-1:-1:-1;873:18:4;-1:-1:-1;;;;;;;;;;;;;902:43:4;-1:-1:-1;;902:43:4;-1:-1:-1;1487:22:11;;::::1;::::0;;::::1;::::0;;;;504:10:::1;::::0;;;;::::1;::::0;;::::1;::::0;;-1:-1:-1;;;504:10:11;;::::1;::::0;1444:149;;564:95:::1;1444:149:::0;;::::1;2188:25:12::0;;;;2229:18;;2222:34;1519:26:11;2272:18:12;;;2265:34;1388:13:11::1;2315:18:12::0;;;2308:34;;;1580:4:11::1;2358:19:12::0;;;2351:61;1388:13:11;2160:19:12;;1444:149:11::1;::::0;;;;::::1;-1:-1:-1::0;;1444:149:11;;;;;;1427:172;;1444:149:::1;1427:172:::0;;::::1;::::0;1408:16:::1;:191:::0;9620:9:2;:21;;;;;-1:-1:-1;;9620:21:2;;;;;;-1:-1:-1;;;;;1643:19:11;::::1;1635:28;;;::::0;::::1;;1669:24;1687:5:::0;1669:17:::1;:24::i;:::-;-1:-1:-1::0;;1699:10:11::1;:17:::0;;-1:-1:-1;;1699:17:11::1;1712:4;1699:17;::::0;;-1:-1:-1;402:3029:11;;-1:-1:-1;;402:3029:11;1875:226:4;1204:6;;-1:-1:-1;;;;;1204:6:4;;;;;678:10:1;1204:22:4;1196:67;;;;-1:-1:-1;;;1196:67:4;;2625:2:12;1196:67:4;;;2607:21:12;;;2644:18;;;2637:30;2703:34;2683:18;;;2676:62;2755:18;;1196:67:4;;;;;;;;;-1:-1:-1;;;;;1959:22:4;::::1;1951:73;;;::::0;-1:-1:-1;;;1951:73:4;;2986:2:12;1951:73:4::1;::::0;::::1;2968:21:12::0;3025:2;3005:18;;;2998:30;3064:34;3044:18;;;3037:62;-1:-1:-1;;;3115:18:12;;;3108:36;3161:19;;1951:73:4::1;2784:402:12::0;1951:73:4::1;2056:6;::::0;2035:38:::1;::::0;-1:-1:-1;;;;;2035:38:4;;::::1;::::0;2056:6:::1;::::0;::::1;;::::0;-1:-1:-1;;;;;;;;;;;2035:38:4;;;::::1;2079:6;:17:::0;;-1:-1:-1;;;;;2079:17:4;;::::1;;;-1:-1:-1::0;;;;;;2079:17:4;;::::1;::::0;;;::::1;::::0;;1875:226::o;402:3029:11:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;402:3029:11;;;-1:-1:-1;402:3029:11;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:12;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:12;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:12;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:12:o;1036:888::-;1151:6;1159;1167;1175;1228:3;1216:9;1207:7;1203:23;1199:33;1196:53;;;1245:1;1242;1235:12;1196:53;1272:16;;-1:-1:-1;;;;;1337:14:12;;;1334:34;;;1364:1;1361;1354:12;1334:34;1387:61;1440:7;1431:6;1420:9;1416:22;1387:61;:::i;:::-;1377:71;;1494:2;1483:9;1479:18;1473:25;1457:41;;1523:2;1513:8;1510:16;1507:36;;;1539:1;1536;1529:12;1507:36;;1562:63;1617:7;1606:8;1595:9;1591:24;1562:63;:::i;:::-;1552:73;;;1668:2;1657:9;1653:18;1647:25;1712:4;1705:5;1701:16;1694:5;1691:27;1681:55;;1732:1;1729;1722:12;1681:55;1805:2;1790:18;;1784:25;1755:5;;-1:-1:-1;;;;;;1840:33:12;;1828:46;;1818:74;;1888:1;1885;1878:12;1818:74;1036:888;;;;-1:-1:-1;1036:888:12;;-1:-1:-1;;1036:888:12:o;3191:380::-;3270:1;3266:12;;;;3313;;;3334:61;;3388:4;3380:6;3376:17;3366:27;;3334:61;3441:2;3433:6;3430:14;3410:18;3407:38;3404:161;;;3487:10;3482:3;3478:20;3475:1;3468:31;3522:4;3519:1;3512:15;3550:4;3547:1;3540:15;3404:161;;3191:380;;;:::o;:::-;402:3029:11;;;;;;"},"deployedBytecode":{"functionDebugData":{"@DOMAIN_SEPARATOR_1902":{"entryPoint":null,"id":1902,"parameterSlots":0,"returnSlots":0},"@EIP712_REVISION_1886":{"entryPoint":null,"id":1886,"parameterSlots":0,"returnSlots":0},"@PERMIT_TYPEHASH_1896":{"entryPoint":null,"id":1896,"parameterSlots":0,"returnSlots":0},"@_approve_806":{"entryPoint":3561,"id":806,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_828":{"entryPoint":null,"id":828,"parameterSlots":3,"returnSlots":0},"@_mint_705":{"entryPoint":4638,"id":705,"parameterSlots":2,"returnSlots":0},"@_msgSender_310":{"entryPoint":null,"id":310,"parameterSlots":0,"returnSlots":1},"@_transfer_650":{"entryPoint":3997,"id":650,"parameterSlots":3,"returnSlots":0},"@add_1042":{"entryPoint":4622,"id":1042,"parameterSlots":2,"returnSlots":1},"@allowance_468":{"entryPoint":null,"id":468,"parameterSlots":2,"returnSlots":1},"@approve_489":{"entryPoint":1205,"id":489,"parameterSlots":2,"returnSlots":1},"@balanceOf_429":{"entryPoint":null,"id":429,"parameterSlots":1,"returnSlots":1},"@decimals_405":{"entryPoint":null,"id":405,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_584":{"entryPoint":2205,"id":584,"parameterSlots":2,"returnSlots":1},"@increaseAllowance_555":{"entryPoint":1535,"id":555,"parameterSlots":2,"returnSlots":1},"@isProtected_2150":{"entryPoint":null,"id":2150,"parameterSlots":0,"returnSlots":1},"@mint_2098":{"entryPoint":2032,"id":2098,"parameterSlots":1,"returnSlots":1},"@mint_2118":{"entryPoint":1602,"id":2118,"parameterSlots":2,"returnSlots":1},"@name_387":{"entryPoint":1059,"id":387,"parameterSlots":0,"returnSlots":1},"@nonces_2130":{"entryPoint":null,"id":2130,"parameterSlots":1,"returnSlots":1},"@owner_952":{"entryPoint":null,"id":952,"parameterSlots":0,"returnSlots":1},"@permit_2079":{"entryPoint":2310,"id":2079,"parameterSlots":7,"returnSlots":0},"@renounceOwnership_987":{"entryPoint":1766,"id":987,"parameterSlots":0,"returnSlots":0},"@setProtected_2142":{"entryPoint":1228,"id":2142,"parameterSlots":1,"returnSlots":0},"@sub_1091":{"entryPoint":4551,"id":1091,"parameterSlots":3,"returnSlots":1},"@symbol_396":{"entryPoint":2017,"id":396,"parameterSlots":0,"returnSlots":1},"@totalSupply_415":{"entryPoint":null,"id":415,"parameterSlots":0,"returnSlots":1},"@transferFrom_527":{"entryPoint":1417,"id":527,"parameterSlots":3,"returnSlots":1},"@transferOwnership_1015":{"entryPoint":3111,"id":1015,"parameterSlots":1,"returnSlots":0},"@transfer_450":{"entryPoint":2297,"id":450,"parameterSlots":2,"returnSlots":1},"abi_decode_address":{"entryPoint":5058,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":5230,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":5397,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":5170,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32":{"entryPoint":5282,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":5094,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bool":{"entryPoint":5136,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":5257,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":4925,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5032,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5e2e9eaa2d734966dea0900deacd15b20129fbce05255d633a3ce5ebca181b88__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9fe3e5cf49f72bf8a6a8455c3e990f8479f5dfa09ac808886f330a39b0029c2d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a30e2b4f22d955e30086ae3aef0adfd87eec9d0d3f055d6aa9af61f522dda886__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":5532,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":5448,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:10362:12","statements":[{"nodeType":"YulBlock","src":"6:3:12","statements":[]},{"body":{"nodeType":"YulBlock","src":"64:481:12","statements":[{"nodeType":"YulVariableDeclaration","src":"74:26:12","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"94:5:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"88:5:12"},"nodeType":"YulFunctionCall","src":"88:12:12"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"78:6:12","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"116:3:12"},{"name":"length","nodeType":"YulIdentifier","src":"121:6:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"109:6:12"},"nodeType":"YulFunctionCall","src":"109:19:12"},"nodeType":"YulExpressionStatement","src":"109:19:12"},{"nodeType":"YulVariableDeclaration","src":"137:10:12","value":{"kind":"number","nodeType":"YulLiteral","src":"146:1:12","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"141:1:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"208:110:12","statements":[{"nodeType":"YulVariableDeclaration","src":"222:14:12","value":{"kind":"number","nodeType":"YulLiteral","src":"232:4:12","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"226:2:12","type":""}]},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"264:3:12"},{"name":"i","nodeType":"YulIdentifier","src":"269:1:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"260:3:12"},"nodeType":"YulFunctionCall","src":"260:11:12"},{"name":"_1","nodeType":"YulIdentifier","src":"273:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"256:3:12"},"nodeType":"YulFunctionCall","src":"256:20:12"},{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"292:5:12"},{"name":"i","nodeType":"YulIdentifier","src":"299:1:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"288:3:12"},"nodeType":"YulFunctionCall","src":"288:13:12"},{"name":"_1","nodeType":"YulIdentifier","src":"303:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"284:3:12"},"nodeType":"YulFunctionCall","src":"284:22:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"278:5:12"},"nodeType":"YulFunctionCall","src":"278:29:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"249:6:12"},"nodeType":"YulFunctionCall","src":"249:59:12"},"nodeType":"YulExpressionStatement","src":"249:59:12"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"167:1:12"},{"name":"length","nodeType":"YulIdentifier","src":"170:6:12"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"164:2:12"},"nodeType":"YulFunctionCall","src":"164:13:12"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"178:21:12","statements":[{"nodeType":"YulAssignment","src":"180:17:12","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"189:1:12"},{"kind":"number","nodeType":"YulLiteral","src":"192:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"185:3:12"},"nodeType":"YulFunctionCall","src":"185:12:12"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"180:1:12"}]}]},"pre":{"nodeType":"YulBlock","src":"160:3:12","statements":[]},"src":"156:162:12"},{"body":{"nodeType":"YulBlock","src":"352:62:12","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"381:3:12"},{"name":"length","nodeType":"YulIdentifier","src":"386:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"377:3:12"},"nodeType":"YulFunctionCall","src":"377:16:12"},{"kind":"number","nodeType":"YulLiteral","src":"395:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"373:3:12"},"nodeType":"YulFunctionCall","src":"373:27:12"},{"kind":"number","nodeType":"YulLiteral","src":"402:1:12","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"366:6:12"},"nodeType":"YulFunctionCall","src":"366:38:12"},"nodeType":"YulExpressionStatement","src":"366:38:12"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"333:1:12"},{"name":"length","nodeType":"YulIdentifier","src":"336:6:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"330:2:12"},"nodeType":"YulFunctionCall","src":"330:13:12"},"nodeType":"YulIf","src":"327:87:12"},{"nodeType":"YulAssignment","src":"423:116:12","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"438:3:12"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"451:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"459:2:12","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"447:3:12"},"nodeType":"YulFunctionCall","src":"447:15:12"},{"kind":"number","nodeType":"YulLiteral","src":"464:66:12","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"443:3:12"},"nodeType":"YulFunctionCall","src":"443:88:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"434:3:12"},"nodeType":"YulFunctionCall","src":"434:98:12"},{"kind":"number","nodeType":"YulLiteral","src":"534:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"430:3:12"},"nodeType":"YulFunctionCall","src":"430:109:12"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"423:3:12"}]}]},"name":"abi_encode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"41:5:12","type":""},{"name":"pos","nodeType":"YulTypedName","src":"48:3:12","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"56:3:12","type":""}],"src":"14:531:12"},{"body":{"nodeType":"YulBlock","src":"671:99:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"688:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"699:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"681:6:12"},"nodeType":"YulFunctionCall","src":"681:21:12"},"nodeType":"YulExpressionStatement","src":"681:21:12"},{"nodeType":"YulAssignment","src":"711:53:12","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"737:6:12"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"749:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"760:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"745:3:12"},"nodeType":"YulFunctionCall","src":"745:18:12"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"719:17:12"},"nodeType":"YulFunctionCall","src":"719:45:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"711:4:12"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"640:9:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"651:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"662:4:12","type":""}],"src":"550:220:12"},{"body":{"nodeType":"YulBlock","src":"824:147:12","statements":[{"nodeType":"YulAssignment","src":"834:29:12","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"856:6:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"843:12:12"},"nodeType":"YulFunctionCall","src":"843:20:12"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"834:5:12"}]},{"body":{"nodeType":"YulBlock","src":"949:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"958:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"961:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"951:6:12"},"nodeType":"YulFunctionCall","src":"951:12:12"},"nodeType":"YulExpressionStatement","src":"951:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"885:5:12"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"896:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"903:42:12","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"892:3:12"},"nodeType":"YulFunctionCall","src":"892:54:12"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"882:2:12"},"nodeType":"YulFunctionCall","src":"882:65:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"875:6:12"},"nodeType":"YulFunctionCall","src":"875:73:12"},"nodeType":"YulIf","src":"872:93:12"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"803:6:12","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"814:5:12","type":""}],"src":"775:196:12"},{"body":{"nodeType":"YulBlock","src":"1063:167:12","statements":[{"body":{"nodeType":"YulBlock","src":"1109:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1118:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1121:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1111:6:12"},"nodeType":"YulFunctionCall","src":"1111:12:12"},"nodeType":"YulExpressionStatement","src":"1111:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1084:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"1093:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1080:3:12"},"nodeType":"YulFunctionCall","src":"1080:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"1105:2:12","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1076:3:12"},"nodeType":"YulFunctionCall","src":"1076:32:12"},"nodeType":"YulIf","src":"1073:52:12"},{"nodeType":"YulAssignment","src":"1134:39:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1163:9:12"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1144:18:12"},"nodeType":"YulFunctionCall","src":"1144:29:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1134:6:12"}]},{"nodeType":"YulAssignment","src":"1182:42:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1209:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"1220:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1205:3:12"},"nodeType":"YulFunctionCall","src":"1205:18:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1192:12:12"},"nodeType":"YulFunctionCall","src":"1192:32:12"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1182:6:12"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1021:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1032:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1044:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1052:6:12","type":""}],"src":"976:254:12"},{"body":{"nodeType":"YulBlock","src":"1330:92:12","statements":[{"nodeType":"YulAssignment","src":"1340:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1352:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"1363:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1348:3:12"},"nodeType":"YulFunctionCall","src":"1348:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1340:4:12"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1382:9:12"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1407:6:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1400:6:12"},"nodeType":"YulFunctionCall","src":"1400:14:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1393:6:12"},"nodeType":"YulFunctionCall","src":"1393:22:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1375:6:12"},"nodeType":"YulFunctionCall","src":"1375:41:12"},"nodeType":"YulExpressionStatement","src":"1375:41:12"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1299:9:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1310:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1321:4:12","type":""}],"src":"1235:187:12"},{"body":{"nodeType":"YulBlock","src":"1528:76:12","statements":[{"nodeType":"YulAssignment","src":"1538:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1550:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"1561:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1546:3:12"},"nodeType":"YulFunctionCall","src":"1546:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1538:4:12"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1580:9:12"},{"name":"value0","nodeType":"YulIdentifier","src":"1591:6:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1573:6:12"},"nodeType":"YulFunctionCall","src":"1573:25:12"},"nodeType":"YulExpressionStatement","src":"1573:25:12"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1497:9:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1508:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1519:4:12","type":""}],"src":"1427:177:12"},{"body":{"nodeType":"YulBlock","src":"1676:206:12","statements":[{"body":{"nodeType":"YulBlock","src":"1722:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1731:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1734:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1724:6:12"},"nodeType":"YulFunctionCall","src":"1724:12:12"},"nodeType":"YulExpressionStatement","src":"1724:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1697:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"1706:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1693:3:12"},"nodeType":"YulFunctionCall","src":"1693:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"1718:2:12","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1689:3:12"},"nodeType":"YulFunctionCall","src":"1689:32:12"},"nodeType":"YulIf","src":"1686:52:12"},{"nodeType":"YulVariableDeclaration","src":"1747:36:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1773:9:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1760:12:12"},"nodeType":"YulFunctionCall","src":"1760:23:12"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1751:5:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"1836:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1845:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1848:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1838:6:12"},"nodeType":"YulFunctionCall","src":"1838:12:12"},"nodeType":"YulExpressionStatement","src":"1838:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1805:5:12"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1826:5:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1819:6:12"},"nodeType":"YulFunctionCall","src":"1819:13:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1812:6:12"},"nodeType":"YulFunctionCall","src":"1812:21:12"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1802:2:12"},"nodeType":"YulFunctionCall","src":"1802:32:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1795:6:12"},"nodeType":"YulFunctionCall","src":"1795:40:12"},"nodeType":"YulIf","src":"1792:60:12"},{"nodeType":"YulAssignment","src":"1861:15:12","value":{"name":"value","nodeType":"YulIdentifier","src":"1871:5:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1861:6:12"}]}]},"name":"abi_decode_tuple_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1642:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1653:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1665:6:12","type":""}],"src":"1609:273:12"},{"body":{"nodeType":"YulBlock","src":"1991:224:12","statements":[{"body":{"nodeType":"YulBlock","src":"2037:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2046:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2049:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2039:6:12"},"nodeType":"YulFunctionCall","src":"2039:12:12"},"nodeType":"YulExpressionStatement","src":"2039:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2012:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"2021:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2008:3:12"},"nodeType":"YulFunctionCall","src":"2008:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"2033:2:12","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2004:3:12"},"nodeType":"YulFunctionCall","src":"2004:32:12"},"nodeType":"YulIf","src":"2001:52:12"},{"nodeType":"YulAssignment","src":"2062:39:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2091:9:12"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2072:18:12"},"nodeType":"YulFunctionCall","src":"2072:29:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2062:6:12"}]},{"nodeType":"YulAssignment","src":"2110:48:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2143:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"2154:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2139:3:12"},"nodeType":"YulFunctionCall","src":"2139:18:12"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2120:18:12"},"nodeType":"YulFunctionCall","src":"2120:38:12"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2110:6:12"}]},{"nodeType":"YulAssignment","src":"2167:42:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2194:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"2205:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2190:3:12"},"nodeType":"YulFunctionCall","src":"2190:18:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2177:12:12"},"nodeType":"YulFunctionCall","src":"2177:32:12"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2167:6:12"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1941:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1952:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1964:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1972:6:12","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1980:6:12","type":""}],"src":"1887:328:12"},{"body":{"nodeType":"YulBlock","src":"2321:76:12","statements":[{"nodeType":"YulAssignment","src":"2331:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2343:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"2354:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2339:3:12"},"nodeType":"YulFunctionCall","src":"2339:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2331:4:12"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2373:9:12"},{"name":"value0","nodeType":"YulIdentifier","src":"2384:6:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2366:6:12"},"nodeType":"YulFunctionCall","src":"2366:25:12"},"nodeType":"YulExpressionStatement","src":"2366:25:12"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2290:9:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2301:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2312:4:12","type":""}],"src":"2220:177:12"},{"body":{"nodeType":"YulBlock","src":"2499:87:12","statements":[{"nodeType":"YulAssignment","src":"2509:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2521:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"2532:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2517:3:12"},"nodeType":"YulFunctionCall","src":"2517:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2509:4:12"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2551:9:12"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2566:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"2574:4:12","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2562:3:12"},"nodeType":"YulFunctionCall","src":"2562:17:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2544:6:12"},"nodeType":"YulFunctionCall","src":"2544:36:12"},"nodeType":"YulExpressionStatement","src":"2544:36:12"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2468:9:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2479:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2490:4:12","type":""}],"src":"2402:184:12"},{"body":{"nodeType":"YulBlock","src":"2661:116:12","statements":[{"body":{"nodeType":"YulBlock","src":"2707:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2716:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2719:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2709:6:12"},"nodeType":"YulFunctionCall","src":"2709:12:12"},"nodeType":"YulExpressionStatement","src":"2709:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2682:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"2691:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2678:3:12"},"nodeType":"YulFunctionCall","src":"2678:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"2703:2:12","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2674:3:12"},"nodeType":"YulFunctionCall","src":"2674:32:12"},"nodeType":"YulIf","src":"2671:52:12"},{"nodeType":"YulAssignment","src":"2732:39:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2761:9:12"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2742:18:12"},"nodeType":"YulFunctionCall","src":"2742:29:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2732:6:12"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2627:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2638:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2650:6:12","type":""}],"src":"2591:186:12"},{"body":{"nodeType":"YulBlock","src":"2901:99:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2918:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"2929:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2911:6:12"},"nodeType":"YulFunctionCall","src":"2911:21:12"},"nodeType":"YulExpressionStatement","src":"2911:21:12"},{"nodeType":"YulAssignment","src":"2941:53:12","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2967:6:12"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2979:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"2990:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2975:3:12"},"nodeType":"YulFunctionCall","src":"2975:18:12"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"2949:17:12"},"nodeType":"YulFunctionCall","src":"2949:45:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2941:4:12"}]}]},"name":"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2870:9:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2881:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2892:4:12","type":""}],"src":"2782:218:12"},{"body":{"nodeType":"YulBlock","src":"3106:125:12","statements":[{"nodeType":"YulAssignment","src":"3116:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3128:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"3139:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3124:3:12"},"nodeType":"YulFunctionCall","src":"3124:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3116:4:12"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3158:9:12"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3173:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"3181:42:12","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3169:3:12"},"nodeType":"YulFunctionCall","src":"3169:55:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3151:6:12"},"nodeType":"YulFunctionCall","src":"3151:74:12"},"nodeType":"YulExpressionStatement","src":"3151:74:12"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3075:9:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3086:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3097:4:12","type":""}],"src":"3005:226:12"},{"body":{"nodeType":"YulBlock","src":"3306:110:12","statements":[{"body":{"nodeType":"YulBlock","src":"3352:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3361:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3364:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3354:6:12"},"nodeType":"YulFunctionCall","src":"3354:12:12"},"nodeType":"YulExpressionStatement","src":"3354:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3327:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"3336:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3323:3:12"},"nodeType":"YulFunctionCall","src":"3323:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"3348:2:12","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3319:3:12"},"nodeType":"YulFunctionCall","src":"3319:32:12"},"nodeType":"YulIf","src":"3316:52:12"},{"nodeType":"YulAssignment","src":"3377:33:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3400:9:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3387:12:12"},"nodeType":"YulFunctionCall","src":"3387:23:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3377:6:12"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3272:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3283:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3295:6:12","type":""}],"src":"3236:180:12"},{"body":{"nodeType":"YulBlock","src":"3591:523:12","statements":[{"body":{"nodeType":"YulBlock","src":"3638:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3647:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3650:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3640:6:12"},"nodeType":"YulFunctionCall","src":"3640:12:12"},"nodeType":"YulExpressionStatement","src":"3640:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3612:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"3621:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3608:3:12"},"nodeType":"YulFunctionCall","src":"3608:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"3633:3:12","type":"","value":"224"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3604:3:12"},"nodeType":"YulFunctionCall","src":"3604:33:12"},"nodeType":"YulIf","src":"3601:53:12"},{"nodeType":"YulAssignment","src":"3663:39:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3692:9:12"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"3673:18:12"},"nodeType":"YulFunctionCall","src":"3673:29:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3663:6:12"}]},{"nodeType":"YulAssignment","src":"3711:48:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3744:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"3755:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3740:3:12"},"nodeType":"YulFunctionCall","src":"3740:18:12"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"3721:18:12"},"nodeType":"YulFunctionCall","src":"3721:38:12"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3711:6:12"}]},{"nodeType":"YulAssignment","src":"3768:42:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3795:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"3806:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3791:3:12"},"nodeType":"YulFunctionCall","src":"3791:18:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3778:12:12"},"nodeType":"YulFunctionCall","src":"3778:32:12"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3768:6:12"}]},{"nodeType":"YulAssignment","src":"3819:42:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3846:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"3857:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3842:3:12"},"nodeType":"YulFunctionCall","src":"3842:18:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3829:12:12"},"nodeType":"YulFunctionCall","src":"3829:32:12"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"3819:6:12"}]},{"nodeType":"YulVariableDeclaration","src":"3870:46:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3900:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"3911:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3896:3:12"},"nodeType":"YulFunctionCall","src":"3896:19:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3883:12:12"},"nodeType":"YulFunctionCall","src":"3883:33:12"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3874:5:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"3964:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3973:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3976:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3966:6:12"},"nodeType":"YulFunctionCall","src":"3966:12:12"},"nodeType":"YulExpressionStatement","src":"3966:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3938:5:12"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3949:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"3956:4:12","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3945:3:12"},"nodeType":"YulFunctionCall","src":"3945:16:12"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3935:2:12"},"nodeType":"YulFunctionCall","src":"3935:27:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3928:6:12"},"nodeType":"YulFunctionCall","src":"3928:35:12"},"nodeType":"YulIf","src":"3925:55:12"},{"nodeType":"YulAssignment","src":"3989:15:12","value":{"name":"value","nodeType":"YulIdentifier","src":"3999:5:12"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"3989:6:12"}]},{"nodeType":"YulAssignment","src":"4013:43:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4040:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"4051:3:12","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4036:3:12"},"nodeType":"YulFunctionCall","src":"4036:19:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4023:12:12"},"nodeType":"YulFunctionCall","src":"4023:33:12"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"4013:6:12"}]},{"nodeType":"YulAssignment","src":"4065:43:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4092:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"4103:3:12","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4088:3:12"},"nodeType":"YulFunctionCall","src":"4088:19:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4075:12:12"},"nodeType":"YulFunctionCall","src":"4075:33:12"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"4065:6:12"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3509:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3520:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3532:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3540:6:12","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3548:6:12","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3556:6:12","type":""},{"name":"value4","nodeType":"YulTypedName","src":"3564:6:12","type":""},{"name":"value5","nodeType":"YulTypedName","src":"3572:6:12","type":""},{"name":"value6","nodeType":"YulTypedName","src":"3580:6:12","type":""}],"src":"3421:693:12"},{"body":{"nodeType":"YulBlock","src":"4206:173:12","statements":[{"body":{"nodeType":"YulBlock","src":"4252:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4261:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4264:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4254:6:12"},"nodeType":"YulFunctionCall","src":"4254:12:12"},"nodeType":"YulExpressionStatement","src":"4254:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4227:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"4236:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4223:3:12"},"nodeType":"YulFunctionCall","src":"4223:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"4248:2:12","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4219:3:12"},"nodeType":"YulFunctionCall","src":"4219:32:12"},"nodeType":"YulIf","src":"4216:52:12"},{"nodeType":"YulAssignment","src":"4277:39:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4306:9:12"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"4287:18:12"},"nodeType":"YulFunctionCall","src":"4287:29:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4277:6:12"}]},{"nodeType":"YulAssignment","src":"4325:48:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4358:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"4369:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4354:3:12"},"nodeType":"YulFunctionCall","src":"4354:18:12"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"4335:18:12"},"nodeType":"YulFunctionCall","src":"4335:38:12"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4325:6:12"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4164:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4175:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4187:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4195:6:12","type":""}],"src":"4119:260:12"},{"body":{"nodeType":"YulBlock","src":"4439:382:12","statements":[{"nodeType":"YulAssignment","src":"4449:22:12","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4463:1:12","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"4466:4:12"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"4459:3:12"},"nodeType":"YulFunctionCall","src":"4459:12:12"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4449:6:12"}]},{"nodeType":"YulVariableDeclaration","src":"4480:38:12","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4510:4:12"},{"kind":"number","nodeType":"YulLiteral","src":"4516:1:12","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4506:3:12"},"nodeType":"YulFunctionCall","src":"4506:12:12"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"4484:18:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"4557:31:12","statements":[{"nodeType":"YulAssignment","src":"4559:27:12","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4573:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"4581:4:12","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4569:3:12"},"nodeType":"YulFunctionCall","src":"4569:17:12"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4559:6:12"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4537:18:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4530:6:12"},"nodeType":"YulFunctionCall","src":"4530:26:12"},"nodeType":"YulIf","src":"4527:61:12"},{"body":{"nodeType":"YulBlock","src":"4647:168:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4668:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4671:77:12","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4661:6:12"},"nodeType":"YulFunctionCall","src":"4661:88:12"},"nodeType":"YulExpressionStatement","src":"4661:88:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4769:1:12","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4772:4:12","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4762:6:12"},"nodeType":"YulFunctionCall","src":"4762:15:12"},"nodeType":"YulExpressionStatement","src":"4762:15:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4797:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4800:4:12","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4790:6:12"},"nodeType":"YulFunctionCall","src":"4790:15:12"},"nodeType":"YulExpressionStatement","src":"4790:15:12"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4603:18:12"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4626:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"4634:2:12","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4623:2:12"},"nodeType":"YulFunctionCall","src":"4623:14:12"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4600:2:12"},"nodeType":"YulFunctionCall","src":"4600:38:12"},"nodeType":"YulIf","src":"4597:218:12"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"4419:4:12","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"4428:6:12","type":""}],"src":"4384:437:12"},{"body":{"nodeType":"YulBlock","src":"5000:182:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5017:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"5028:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5010:6:12"},"nodeType":"YulFunctionCall","src":"5010:21:12"},"nodeType":"YulExpressionStatement","src":"5010:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5051:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"5062:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5047:3:12"},"nodeType":"YulFunctionCall","src":"5047:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"5067:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5040:6:12"},"nodeType":"YulFunctionCall","src":"5040:30:12"},"nodeType":"YulExpressionStatement","src":"5040:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5090:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"5101:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5086:3:12"},"nodeType":"YulFunctionCall","src":"5086:18:12"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"5106:34:12","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5079:6:12"},"nodeType":"YulFunctionCall","src":"5079:62:12"},"nodeType":"YulExpressionStatement","src":"5079:62:12"},{"nodeType":"YulAssignment","src":"5150:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5162:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"5173:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5158:3:12"},"nodeType":"YulFunctionCall","src":"5158:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5150:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4977:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4991:4:12","type":""}],"src":"4826:356:12"},{"body":{"nodeType":"YulBlock","src":"5361:163:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5378:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"5389:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5371:6:12"},"nodeType":"YulFunctionCall","src":"5371:21:12"},"nodeType":"YulExpressionStatement","src":"5371:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5412:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"5423:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5408:3:12"},"nodeType":"YulFunctionCall","src":"5408:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"5428:2:12","type":"","value":"13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5401:6:12"},"nodeType":"YulFunctionCall","src":"5401:30:12"},"nodeType":"YulExpressionStatement","src":"5401:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5451:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"5462:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5447:3:12"},"nodeType":"YulFunctionCall","src":"5447:18:12"},{"hexValue":"494e56414c49445f4f574e4552","kind":"string","nodeType":"YulLiteral","src":"5467:15:12","type":"","value":"INVALID_OWNER"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5440:6:12"},"nodeType":"YulFunctionCall","src":"5440:43:12"},"nodeType":"YulExpressionStatement","src":"5440:43:12"},{"nodeType":"YulAssignment","src":"5492:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5504:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"5515:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5500:3:12"},"nodeType":"YulFunctionCall","src":"5500:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5492:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_a30e2b4f22d955e30086ae3aef0adfd87eec9d0d3f055d6aa9af61f522dda886__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5338:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5352:4:12","type":""}],"src":"5187:337:12"},{"body":{"nodeType":"YulBlock","src":"5703:168:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5720:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"5731:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5713:6:12"},"nodeType":"YulFunctionCall","src":"5713:21:12"},"nodeType":"YulExpressionStatement","src":"5713:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5754:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"5765:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5750:3:12"},"nodeType":"YulFunctionCall","src":"5750:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"5770:2:12","type":"","value":"18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5743:6:12"},"nodeType":"YulFunctionCall","src":"5743:30:12"},"nodeType":"YulExpressionStatement","src":"5743:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5793:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"5804:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5789:3:12"},"nodeType":"YulFunctionCall","src":"5789:18:12"},{"hexValue":"494e56414c49445f45585049524154494f4e","kind":"string","nodeType":"YulLiteral","src":"5809:20:12","type":"","value":"INVALID_EXPIRATION"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5782:6:12"},"nodeType":"YulFunctionCall","src":"5782:48:12"},"nodeType":"YulExpressionStatement","src":"5782:48:12"},{"nodeType":"YulAssignment","src":"5839:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5851:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"5862:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5847:3:12"},"nodeType":"YulFunctionCall","src":"5847:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5839:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_9fe3e5cf49f72bf8a6a8455c3e990f8479f5dfa09ac808886f330a39b0029c2d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5680:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5694:4:12","type":""}],"src":"5529:342:12"},{"body":{"nodeType":"YulBlock","src":"6117:373:12","statements":[{"nodeType":"YulAssignment","src":"6127:27:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6139:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"6150:3:12","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6135:3:12"},"nodeType":"YulFunctionCall","src":"6135:19:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6127:4:12"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6170:9:12"},{"name":"value0","nodeType":"YulIdentifier","src":"6181:6:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6163:6:12"},"nodeType":"YulFunctionCall","src":"6163:25:12"},"nodeType":"YulExpressionStatement","src":"6163:25:12"},{"nodeType":"YulVariableDeclaration","src":"6197:52:12","value":{"kind":"number","nodeType":"YulLiteral","src":"6207:42:12","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"6201:2:12","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6269:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"6280:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6265:3:12"},"nodeType":"YulFunctionCall","src":"6265:18:12"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"6289:6:12"},{"name":"_1","nodeType":"YulIdentifier","src":"6297:2:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6285:3:12"},"nodeType":"YulFunctionCall","src":"6285:15:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6258:6:12"},"nodeType":"YulFunctionCall","src":"6258:43:12"},"nodeType":"YulExpressionStatement","src":"6258:43:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6321:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"6332:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6317:3:12"},"nodeType":"YulFunctionCall","src":"6317:18:12"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"6341:6:12"},{"name":"_1","nodeType":"YulIdentifier","src":"6349:2:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6337:3:12"},"nodeType":"YulFunctionCall","src":"6337:15:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6310:6:12"},"nodeType":"YulFunctionCall","src":"6310:43:12"},"nodeType":"YulExpressionStatement","src":"6310:43:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6373:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"6384:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6369:3:12"},"nodeType":"YulFunctionCall","src":"6369:18:12"},{"name":"value3","nodeType":"YulIdentifier","src":"6389:6:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6362:6:12"},"nodeType":"YulFunctionCall","src":"6362:34:12"},"nodeType":"YulExpressionStatement","src":"6362:34:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6416:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"6427:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6412:3:12"},"nodeType":"YulFunctionCall","src":"6412:19:12"},{"name":"value4","nodeType":"YulIdentifier","src":"6433:6:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6405:6:12"},"nodeType":"YulFunctionCall","src":"6405:35:12"},"nodeType":"YulExpressionStatement","src":"6405:35:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6460:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"6471:3:12","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6456:3:12"},"nodeType":"YulFunctionCall","src":"6456:19:12"},{"name":"value5","nodeType":"YulIdentifier","src":"6477:6:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6449:6:12"},"nodeType":"YulFunctionCall","src":"6449:35:12"},"nodeType":"YulExpressionStatement","src":"6449:35:12"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6046:9:12","type":""},{"name":"value5","nodeType":"YulTypedName","src":"6057:6:12","type":""},{"name":"value4","nodeType":"YulTypedName","src":"6065:6:12","type":""},{"name":"value3","nodeType":"YulTypedName","src":"6073:6:12","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6081:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6089:6:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6097:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6108:4:12","type":""}],"src":"5876:614:12"},{"body":{"nodeType":"YulBlock","src":"6743:196:12","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6760:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"6765:66:12","type":"","value":"0x1901000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6753:6:12"},"nodeType":"YulFunctionCall","src":"6753:79:12"},"nodeType":"YulExpressionStatement","src":"6753:79:12"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6852:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"6857:1:12","type":"","value":"2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6848:3:12"},"nodeType":"YulFunctionCall","src":"6848:11:12"},{"name":"value0","nodeType":"YulIdentifier","src":"6861:6:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6841:6:12"},"nodeType":"YulFunctionCall","src":"6841:27:12"},"nodeType":"YulExpressionStatement","src":"6841:27:12"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6888:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"6893:2:12","type":"","value":"34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6884:3:12"},"nodeType":"YulFunctionCall","src":"6884:12:12"},{"name":"value1","nodeType":"YulIdentifier","src":"6898:6:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6877:6:12"},"nodeType":"YulFunctionCall","src":"6877:28:12"},"nodeType":"YulExpressionStatement","src":"6877:28:12"},{"nodeType":"YulAssignment","src":"6914:19:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6925:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"6930:2:12","type":"","value":"66"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6921:3:12"},"nodeType":"YulFunctionCall","src":"6921:12:12"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6914:3:12"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6711:3:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6716:6:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6724:6:12","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6735:3:12","type":""}],"src":"6495:444:12"},{"body":{"nodeType":"YulBlock","src":"7125:217:12","statements":[{"nodeType":"YulAssignment","src":"7135:27:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7147:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"7158:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7143:3:12"},"nodeType":"YulFunctionCall","src":"7143:19:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7135:4:12"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7178:9:12"},{"name":"value0","nodeType":"YulIdentifier","src":"7189:6:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7171:6:12"},"nodeType":"YulFunctionCall","src":"7171:25:12"},"nodeType":"YulExpressionStatement","src":"7171:25:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7216:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"7227:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7212:3:12"},"nodeType":"YulFunctionCall","src":"7212:18:12"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"7236:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"7244:4:12","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7232:3:12"},"nodeType":"YulFunctionCall","src":"7232:17:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7205:6:12"},"nodeType":"YulFunctionCall","src":"7205:45:12"},"nodeType":"YulExpressionStatement","src":"7205:45:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7270:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"7281:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7266:3:12"},"nodeType":"YulFunctionCall","src":"7266:18:12"},{"name":"value2","nodeType":"YulIdentifier","src":"7286:6:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7259:6:12"},"nodeType":"YulFunctionCall","src":"7259:34:12"},"nodeType":"YulExpressionStatement","src":"7259:34:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7313:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"7324:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7309:3:12"},"nodeType":"YulFunctionCall","src":"7309:18:12"},{"name":"value3","nodeType":"YulIdentifier","src":"7329:6:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7302:6:12"},"nodeType":"YulFunctionCall","src":"7302:34:12"},"nodeType":"YulExpressionStatement","src":"7302:34:12"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7070:9:12","type":""},{"name":"value3","nodeType":"YulTypedName","src":"7081:6:12","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7089:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7097:6:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7105:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7116:4:12","type":""}],"src":"6944:398:12"},{"body":{"nodeType":"YulBlock","src":"7521:167:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7538:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"7549:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7531:6:12"},"nodeType":"YulFunctionCall","src":"7531:21:12"},"nodeType":"YulExpressionStatement","src":"7531:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7572:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"7583:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7568:3:12"},"nodeType":"YulFunctionCall","src":"7568:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"7588:2:12","type":"","value":"17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7561:6:12"},"nodeType":"YulFunctionCall","src":"7561:30:12"},"nodeType":"YulExpressionStatement","src":"7561:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7611:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"7622:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7607:3:12"},"nodeType":"YulFunctionCall","src":"7607:18:12"},{"hexValue":"494e56414c49445f5349474e4154555245","kind":"string","nodeType":"YulLiteral","src":"7627:19:12","type":"","value":"INVALID_SIGNATURE"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7600:6:12"},"nodeType":"YulFunctionCall","src":"7600:47:12"},"nodeType":"YulExpressionStatement","src":"7600:47:12"},{"nodeType":"YulAssignment","src":"7656:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7668:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"7679:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7664:3:12"},"nodeType":"YulFunctionCall","src":"7664:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7656:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_5e2e9eaa2d734966dea0900deacd15b20129fbce05255d633a3ce5ebca181b88__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7498:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7512:4:12","type":""}],"src":"7347:341:12"},{"body":{"nodeType":"YulBlock","src":"7741:234:12","statements":[{"body":{"nodeType":"YulBlock","src":"7776:168:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7797:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7800:77:12","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7790:6:12"},"nodeType":"YulFunctionCall","src":"7790:88:12"},"nodeType":"YulExpressionStatement","src":"7790:88:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7898:1:12","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7901:4:12","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7891:6:12"},"nodeType":"YulFunctionCall","src":"7891:15:12"},"nodeType":"YulExpressionStatement","src":"7891:15:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7926:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7929:4:12","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7919:6:12"},"nodeType":"YulFunctionCall","src":"7919:15:12"},"nodeType":"YulExpressionStatement","src":"7919:15:12"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7757:1:12"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"7764:1:12"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7760:3:12"},"nodeType":"YulFunctionCall","src":"7760:6:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7754:2:12"},"nodeType":"YulFunctionCall","src":"7754:13:12"},"nodeType":"YulIf","src":"7751:193:12"},{"nodeType":"YulAssignment","src":"7953:16:12","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7964:1:12"},{"name":"y","nodeType":"YulIdentifier","src":"7967:1:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7960:3:12"},"nodeType":"YulFunctionCall","src":"7960:9:12"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"7953:3:12"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"7724:1:12","type":""},{"name":"y","nodeType":"YulTypedName","src":"7727:1:12","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"7733:3:12","type":""}],"src":"7693:282:12"},{"body":{"nodeType":"YulBlock","src":"8154:228:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8171:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"8182:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8164:6:12"},"nodeType":"YulFunctionCall","src":"8164:21:12"},"nodeType":"YulExpressionStatement","src":"8164:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8205:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"8216:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8201:3:12"},"nodeType":"YulFunctionCall","src":"8201:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"8221:2:12","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8194:6:12"},"nodeType":"YulFunctionCall","src":"8194:30:12"},"nodeType":"YulExpressionStatement","src":"8194:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8244:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"8255:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8240:3:12"},"nodeType":"YulFunctionCall","src":"8240:18:12"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"8260:34:12","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8233:6:12"},"nodeType":"YulFunctionCall","src":"8233:62:12"},"nodeType":"YulExpressionStatement","src":"8233:62:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8315:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"8326:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8311:3:12"},"nodeType":"YulFunctionCall","src":"8311:18:12"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"8331:8:12","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8304:6:12"},"nodeType":"YulFunctionCall","src":"8304:36:12"},"nodeType":"YulExpressionStatement","src":"8304:36:12"},{"nodeType":"YulAssignment","src":"8349:27:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8361:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"8372:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8357:3:12"},"nodeType":"YulFunctionCall","src":"8357:19:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8349:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8131:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8145:4:12","type":""}],"src":"7980:402:12"},{"body":{"nodeType":"YulBlock","src":"8561:226:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8578:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"8589:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8571:6:12"},"nodeType":"YulFunctionCall","src":"8571:21:12"},"nodeType":"YulExpressionStatement","src":"8571:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8612:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"8623:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8608:3:12"},"nodeType":"YulFunctionCall","src":"8608:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"8628:2:12","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8601:6:12"},"nodeType":"YulFunctionCall","src":"8601:30:12"},"nodeType":"YulExpressionStatement","src":"8601:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8651:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"8662:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8647:3:12"},"nodeType":"YulFunctionCall","src":"8647:18:12"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"8667:34:12","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8640:6:12"},"nodeType":"YulFunctionCall","src":"8640:62:12"},"nodeType":"YulExpressionStatement","src":"8640:62:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8722:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"8733:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8718:3:12"},"nodeType":"YulFunctionCall","src":"8718:18:12"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"8738:6:12","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8711:6:12"},"nodeType":"YulFunctionCall","src":"8711:34:12"},"nodeType":"YulExpressionStatement","src":"8711:34:12"},{"nodeType":"YulAssignment","src":"8754:27:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8766:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"8777:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8762:3:12"},"nodeType":"YulFunctionCall","src":"8762:19:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8754:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8538:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8552:4:12","type":""}],"src":"8387:400:12"},{"body":{"nodeType":"YulBlock","src":"8966:224:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8983:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"8994:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8976:6:12"},"nodeType":"YulFunctionCall","src":"8976:21:12"},"nodeType":"YulExpressionStatement","src":"8976:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9017:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"9028:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9013:3:12"},"nodeType":"YulFunctionCall","src":"9013:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"9033:2:12","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9006:6:12"},"nodeType":"YulFunctionCall","src":"9006:30:12"},"nodeType":"YulExpressionStatement","src":"9006:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9056:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"9067:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9052:3:12"},"nodeType":"YulFunctionCall","src":"9052:18:12"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"9072:34:12","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9045:6:12"},"nodeType":"YulFunctionCall","src":"9045:62:12"},"nodeType":"YulExpressionStatement","src":"9045:62:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9127:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"9138:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9123:3:12"},"nodeType":"YulFunctionCall","src":"9123:18:12"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"9143:4:12","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9116:6:12"},"nodeType":"YulFunctionCall","src":"9116:32:12"},"nodeType":"YulExpressionStatement","src":"9116:32:12"},{"nodeType":"YulAssignment","src":"9157:27:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9169:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"9180:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9165:3:12"},"nodeType":"YulFunctionCall","src":"9165:19:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9157:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8943:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8957:4:12","type":""}],"src":"8792:398:12"},{"body":{"nodeType":"YulBlock","src":"9369:227:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9386:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"9397:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9379:6:12"},"nodeType":"YulFunctionCall","src":"9379:21:12"},"nodeType":"YulExpressionStatement","src":"9379:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9420:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"9431:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9416:3:12"},"nodeType":"YulFunctionCall","src":"9416:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"9436:2:12","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9409:6:12"},"nodeType":"YulFunctionCall","src":"9409:30:12"},"nodeType":"YulExpressionStatement","src":"9409:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9459:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"9470:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9455:3:12"},"nodeType":"YulFunctionCall","src":"9455:18:12"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"9475:34:12","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9448:6:12"},"nodeType":"YulFunctionCall","src":"9448:62:12"},"nodeType":"YulExpressionStatement","src":"9448:62:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9530:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"9541:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9526:3:12"},"nodeType":"YulFunctionCall","src":"9526:18:12"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"9546:7:12","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9519:6:12"},"nodeType":"YulFunctionCall","src":"9519:35:12"},"nodeType":"YulExpressionStatement","src":"9519:35:12"},{"nodeType":"YulAssignment","src":"9563:27:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9575:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"9586:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9571:3:12"},"nodeType":"YulFunctionCall","src":"9571:19:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9563:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9346:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9360:4:12","type":""}],"src":"9195:401:12"},{"body":{"nodeType":"YulBlock","src":"9775:225:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9792:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"9803:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9785:6:12"},"nodeType":"YulFunctionCall","src":"9785:21:12"},"nodeType":"YulExpressionStatement","src":"9785:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9826:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"9837:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9822:3:12"},"nodeType":"YulFunctionCall","src":"9822:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"9842:2:12","type":"","value":"35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9815:6:12"},"nodeType":"YulFunctionCall","src":"9815:30:12"},"nodeType":"YulExpressionStatement","src":"9815:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9865:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"9876:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9861:3:12"},"nodeType":"YulFunctionCall","src":"9861:18:12"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"9881:34:12","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9854:6:12"},"nodeType":"YulFunctionCall","src":"9854:62:12"},"nodeType":"YulExpressionStatement","src":"9854:62:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9936:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"9947:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9932:3:12"},"nodeType":"YulFunctionCall","src":"9932:18:12"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"9952:5:12","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9925:6:12"},"nodeType":"YulFunctionCall","src":"9925:33:12"},"nodeType":"YulExpressionStatement","src":"9925:33:12"},{"nodeType":"YulAssignment","src":"9967:27:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9979:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"9990:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9975:3:12"},"nodeType":"YulFunctionCall","src":"9975:19:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9967:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9752:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9766:4:12","type":""}],"src":"9601:399:12"},{"body":{"nodeType":"YulBlock","src":"10179:181:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10196:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"10207:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10189:6:12"},"nodeType":"YulFunctionCall","src":"10189:21:12"},"nodeType":"YulExpressionStatement","src":"10189:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10230:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"10241:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10226:3:12"},"nodeType":"YulFunctionCall","src":"10226:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"10246:2:12","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10219:6:12"},"nodeType":"YulFunctionCall","src":"10219:30:12"},"nodeType":"YulExpressionStatement","src":"10219:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10269:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"10280:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10265:3:12"},"nodeType":"YulFunctionCall","src":"10265:18:12"},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"10285:33:12","type":"","value":"ERC20: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10258:6:12"},"nodeType":"YulFunctionCall","src":"10258:61:12"},"nodeType":"YulExpressionStatement","src":"10258:61:12"},{"nodeType":"YulAssignment","src":"10328:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10340:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"10351:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10336:3:12"},"nodeType":"YulFunctionCall","src":"10336:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10328:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10156:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10170:4:12","type":""}],"src":"10005:355:12"}]},"contents":"{\n    { }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(pos, length), 0x20), 0)\n        }\n        end := add(add(pos, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let value := calldataload(add(headStart, 128))\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value4 := value\n        value5 := calldataload(add(headStart, 160))\n        value6 := calldataload(add(headStart, 192))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a30e2b4f22d955e30086ae3aef0adfd87eec9d0d3f055d6aa9af61f522dda886__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"INVALID_OWNER\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9fe3e5cf49f72bf8a6a8455c3e990f8479f5dfa09ac808886f330a39b0029c2d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"INVALID_EXPIRATION\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, value0)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, 0x1901000000000000000000000000000000000000000000000000000000000000)\n        mstore(add(pos, 2), value0)\n        mstore(add(pos, 34), value1)\n        end := add(pos, 66)\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_stringliteral_5e2e9eaa2d734966dea0900deacd15b20129fbce05255d633a3ce5ebca181b88__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"INVALID_SIGNATURE\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n}","id":12,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061018d5760003560e01c806370a08231116100e3578063a0712d681161008c578063d505accf11610066578063d505accf146103b7578063dd62ed3e146103ca578063f2fde38b1461041057600080fd5b8063a0712d681461037e578063a457c2d714610391578063a9059cbb146103a457600080fd5b80637ecebe00116100bd5780637ecebe00146102fd5780638da5cb5b1461033357806395d89b411461037657600080fd5b806370a0823114610283578063715018a6146102b957806378160376146102c157600080fd5b806330adf81f11610145578063395093511161011f578063395093511461025257806340c10f19146102655780635300f82b1461027857600080fd5b806330adf81f1461020d578063313ce567146102345780633644e5151461024957600080fd5b806318160ddd1161017657806318160ddd146101d35780631c02bc31146101e557806323b872dd146101fa57600080fd5b806306fdde0314610192578063095ea7b3146101b0575b600080fd5b61019a610423565b6040516101a791906113a8565b60405180910390f35b6101c36101be3660046113e6565b6104b5565b60405190151581526020016101a7565b6002545b6040519081526020016101a7565b6101f86101f3366004611410565b6104cc565b005b6101c3610208366004611432565b610589565b6101d77f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b60055460405160ff90911681526020016101a7565b6101d760075481565b6101c36102603660046113e6565b6105ff565b6101c36102733660046113e6565b610642565b60085460ff166101c3565b6101d761029136600461146e565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b6101f86106e6565b61019a6040518060400160405280600181526020017f310000000000000000000000000000000000000000000000000000000000000081525081565b6101d761030b36600461146e565b73ffffffffffffffffffffffffffffffffffffffff1660009081526006602052604090205490565b600554610100900473ffffffffffffffffffffffffffffffffffffffff1660405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101a7565b61019a6107e1565b6101c361038c366004611489565b6107f0565b6101c361039f3660046113e6565b61089d565b6101c36103b23660046113e6565b6108f9565b6101f86103c53660046114a2565b610906565b6101d76103d8366004611515565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b6101f861041e36600461146e565b610c27565b60606003805461043290611548565b80601f016020809104026020016040519081016040528092919081815260200182805461045e90611548565b80156104ab5780601f10610480576101008083540402835291602001916104ab565b820191906000526020600020905b81548152906001019060200180831161048e57829003601f168201915b5050505050905090565b60006104c2338484610de9565b5060015b92915050565b60055473ffffffffffffffffffffffffffffffffffffffff610100909104163314610558576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b600880547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055565b6000610596848484610f9d565b6105f584336105f0856040518060600160405280602881526020016116026028913973ffffffffffffffffffffffffffffffffffffffff8a16600090815260016020908152604080832033845290915290205491906111c7565b610de9565b5060019392505050565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490916104c29185906105f0908661120e565b60085460009060ff161515600114156106dc5760055473ffffffffffffffffffffffffffffffffffffffff6101009091041633146106dc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161054f565b6104c2838361121e565b60055473ffffffffffffffffffffffffffffffffffffffff61010090910416331461076d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161054f565b600554604051600091610100900473ffffffffffffffffffffffffffffffffffffffff16907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600580547fffffffffffffffffffffff0000000000000000000000000000000000000000ff169055565b60606004805461043290611548565b60085460009060ff1615156001141561088a5760055473ffffffffffffffffffffffffffffffffffffffff61010090910416331461088a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161054f565b610894338361121e565b5060015b919050565b60006104c233846105f08560405180606001604052806025815260200161162a6025913933600090815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8d16845290915290205491906111c7565b60006104c2338484610f9d565b73ffffffffffffffffffffffffffffffffffffffff8716610983576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f494e56414c49445f4f574e455200000000000000000000000000000000000000604482015260640161054f565b834211156109ed576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f494e56414c49445f45585049524154494f4e0000000000000000000000000000604482015260640161054f565b73ffffffffffffffffffffffffffffffffffffffff87811660008181526006602090815260408083205460075482517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98186015280840196909652958c166060860152608085018b905260a0850181905260c08086018b90528251808703909101815260e08601909252815191909201207f19010000000000000000000000000000000000000000000000000000000000006101008501526101028401949094526101228301939093529061014201604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815282825280516020918201206000845290830180835281905260ff8816918301919091526060820186905260808201859052915060019060a0016020604051602081039080840390855afa158015610b42573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff1614610be0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f494e56414c49445f5349474e4154555245000000000000000000000000000000604482015260640161054f565b610beb82600161159c565b73ffffffffffffffffffffffffffffffffffffffff8a16600090815260066020526040902055610c1c898989610de9565b505050505050505050565b60055473ffffffffffffffffffffffffffffffffffffffff610100909104163314610cae576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161054f565b73ffffffffffffffffffffffffffffffffffffffff8116610d51576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161054f565b60055460405173ffffffffffffffffffffffffffffffffffffffff80841692610100900416907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a36005805473ffffffffffffffffffffffffffffffffffffffff909216610100027fffffffffffffffffffffff0000000000000000000000000000000000000000ff909216919091179055565b73ffffffffffffffffffffffffffffffffffffffff8316610e8b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f7265737300000000000000000000000000000000000000000000000000000000606482015260840161054f565b73ffffffffffffffffffffffffffffffffffffffff8216610f2e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f7373000000000000000000000000000000000000000000000000000000000000606482015260840161054f565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff8316611040576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f6472657373000000000000000000000000000000000000000000000000000000606482015260840161054f565b73ffffffffffffffffffffffffffffffffffffffff82166110e3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f6573730000000000000000000000000000000000000000000000000000000000606482015260840161054f565b61112d816040518060600160405280602681526020016115dc6026913973ffffffffffffffffffffffffffffffffffffffff861660009081526020819052604090205491906111c7565b73ffffffffffffffffffffffffffffffffffffffff8085166000908152602081905260408082209390935590841681522054611169908261120e565b73ffffffffffffffffffffffffffffffffffffffff8381166000818152602081815260409182902094909455518481529092918616917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9101610f90565b8183038184821115611206576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054f91906113a8565b509392505050565b808201828110156104c657600080fd5b73ffffffffffffffffffffffffffffffffffffffff821661129b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161054f565b6002546112a8908261120e565b60025573ffffffffffffffffffffffffffffffffffffffff82166000908152602081905260409020546112db908261120e565b73ffffffffffffffffffffffffffffffffffffffff8316600081815260208181526040808320949094559251848152919290917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6000815180845260005b8181101561136357602081850181015186830182015201611347565b81811115611375576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006113bb602083018461133d565b9392505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461089857600080fd5b600080604083850312156113f957600080fd5b611402836113c2565b946020939093013593505050565b60006020828403121561142257600080fd5b813580151581146113bb57600080fd5b60008060006060848603121561144757600080fd5b611450846113c2565b925061145e602085016113c2565b9150604084013590509250925092565b60006020828403121561148057600080fd5b6113bb826113c2565b60006020828403121561149b57600080fd5b5035919050565b600080600080600080600060e0888a0312156114bd57600080fd5b6114c6886113c2565b96506114d4602089016113c2565b95506040880135945060608801359350608088013560ff811681146114f857600080fd5b9699959850939692959460a0840135945060c09093013592915050565b6000806040838503121561152857600080fd5b611531836113c2565b915061153f602084016113c2565b90509250929050565b600181811c9082168061155c57607f821691505b60208210811415611596577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b600082198211156115d6577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b50019056fe45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220169abeea256a742a5e4c40a8e2f1fcc3699fe4f4e71502e92a3f852e99efe02664736f6c634300080a0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x18D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xE3 JUMPI DUP1 PUSH4 0xA0712D68 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xD505ACCF GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x3B7 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3CA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x410 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x37E JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x391 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7ECEBE00 GT PUSH2 0xBD JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x2FD JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x333 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x376 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2B9 JUMPI DUP1 PUSH4 0x78160376 EQ PUSH2 0x2C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x30ADF81F GT PUSH2 0x145 JUMPI DUP1 PUSH4 0x39509351 GT PUSH2 0x11F JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0x5300F82B EQ PUSH2 0x278 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x249 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x176 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x1C02BC31 EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1B0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19A PUSH2 0x423 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A7 SWAP2 SWAP1 PUSH2 0x13A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C3 PUSH2 0x1BE CALLDATASIZE PUSH1 0x4 PUSH2 0x13E6 JUMP JUMPDEST PUSH2 0x4B5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A7 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A7 JUMP JUMPDEST PUSH2 0x1F8 PUSH2 0x1F3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1410 JUMP JUMPDEST PUSH2 0x4CC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C3 PUSH2 0x208 CALLDATASIZE PUSH1 0x4 PUSH2 0x1432 JUMP JUMPDEST PUSH2 0x589 JUMP JUMPDEST PUSH2 0x1D7 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A7 JUMP JUMPDEST PUSH2 0x1D7 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1C3 PUSH2 0x260 CALLDATASIZE PUSH1 0x4 PUSH2 0x13E6 JUMP JUMPDEST PUSH2 0x5FF JUMP JUMPDEST PUSH2 0x1C3 PUSH2 0x273 CALLDATASIZE PUSH1 0x4 PUSH2 0x13E6 JUMP JUMPDEST PUSH2 0x642 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xFF AND PUSH2 0x1C3 JUMP JUMPDEST PUSH2 0x1D7 PUSH2 0x291 CALLDATASIZE PUSH1 0x4 PUSH2 0x146E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1F8 PUSH2 0x6E6 JUMP JUMPDEST PUSH2 0x19A PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x1D7 PUSH2 0x30B CALLDATASIZE PUSH1 0x4 PUSH2 0x146E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x100 SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A7 JUMP JUMPDEST PUSH2 0x19A PUSH2 0x7E1 JUMP JUMPDEST PUSH2 0x1C3 PUSH2 0x38C CALLDATASIZE PUSH1 0x4 PUSH2 0x1489 JUMP JUMPDEST PUSH2 0x7F0 JUMP JUMPDEST PUSH2 0x1C3 PUSH2 0x39F CALLDATASIZE PUSH1 0x4 PUSH2 0x13E6 JUMP JUMPDEST PUSH2 0x89D JUMP JUMPDEST PUSH2 0x1C3 PUSH2 0x3B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x13E6 JUMP JUMPDEST PUSH2 0x8F9 JUMP JUMPDEST PUSH2 0x1F8 PUSH2 0x3C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x14A2 JUMP JUMPDEST PUSH2 0x906 JUMP JUMPDEST PUSH2 0x1D7 PUSH2 0x3D8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1515 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1F8 PUSH2 0x41E CALLDATASIZE PUSH1 0x4 PUSH2 0x146E JUMP JUMPDEST PUSH2 0xC27 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x432 SWAP1 PUSH2 0x1548 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x45E SWAP1 PUSH2 0x1548 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4AB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x480 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4AB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x48E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C2 CALLER DUP5 DUP5 PUSH2 0xDE9 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x558 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x596 DUP5 DUP5 DUP5 PUSH2 0xF9D JUMP JUMPDEST PUSH2 0x5F5 DUP5 CALLER PUSH2 0x5F0 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1602 PUSH1 0x28 SWAP2 CODECOPY PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x11C7 JUMP JUMPDEST PUSH2 0xDE9 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x4C2 SWAP2 DUP6 SWAP1 PUSH2 0x5F0 SWAP1 DUP7 PUSH2 0x120E JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ ISZERO PUSH2 0x6DC JUMPI PUSH1 0x5 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x6DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x54F JUMP JUMPDEST PUSH2 0x4C2 DUP4 DUP4 PUSH2 0x121E JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x76D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x54F JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH2 0x100 SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x5 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000FF AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x432 SWAP1 PUSH2 0x1548 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ ISZERO PUSH2 0x88A JUMPI PUSH1 0x5 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x88A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x54F JUMP JUMPDEST PUSH2 0x894 CALLER DUP4 PUSH2 0x121E JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C2 CALLER DUP5 PUSH2 0x5F0 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x162A PUSH1 0x25 SWAP2 CODECOPY CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x11C7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C2 CALLER DUP5 DUP5 PUSH2 0xF9D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND PUSH2 0x983 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F4F574E455200000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x54F JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x9ED JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F45585049524154494F4E0000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x54F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x7 SLOAD DUP3 MLOAD PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 DUP7 ADD MSTORE DUP1 DUP5 ADD SWAP7 SWAP1 SWAP7 MSTORE SWAP6 DUP13 AND PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD DUP12 SWAP1 MSTORE PUSH1 0xA0 DUP6 ADD DUP2 SWAP1 MSTORE PUSH1 0xC0 DUP1 DUP7 ADD DUP12 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP8 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xE0 DUP7 ADD SWAP1 SWAP3 MSTORE DUP2 MLOAD SWAP2 SWAP1 SWAP3 ADD KECCAK256 PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 PUSH2 0x100 DUP6 ADD MSTORE PUSH2 0x102 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH2 0x122 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP1 PUSH2 0x142 ADD PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0x0 DUP5 MSTORE SWAP1 DUP4 ADD DUP1 DUP4 MSTORE DUP2 SWAP1 MSTORE PUSH1 0xFF DUP9 AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP3 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 POP PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB42 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBE0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F5349474E4154555245000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x54F JUMP JUMPDEST PUSH2 0xBEB DUP3 PUSH1 0x1 PUSH2 0x159C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0xC1C DUP10 DUP10 DUP10 PUSH2 0xDE9 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0xCAE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x54F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0xD51 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x54F JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND SWAP3 PUSH2 0x100 SWAP1 DIV AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x5 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND PUSH2 0x100 MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000FF SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0xE8B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x54F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0xF2E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x54F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x1040 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x54F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x10E3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x54F JUMP JUMPDEST PUSH2 0x112D DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x15DC PUSH1 0x26 SWAP2 CODECOPY PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x11C7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x1169 SWAP1 DUP3 PUSH2 0x120E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE MLOAD DUP5 DUP2 MSTORE SWAP1 SWAP3 SWAP2 DUP7 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH2 0xF90 JUMP JUMPDEST DUP2 DUP4 SUB DUP2 DUP5 DUP3 GT ISZERO PUSH2 0x1206 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54F SWAP2 SWAP1 PUSH2 0x13A8 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP3 DUP2 LT ISZERO PUSH2 0x4C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x129B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x54F JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x12A8 SWAP1 DUP3 PUSH2 0x120E JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x12DB SWAP1 DUP3 PUSH2 0x120E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE SWAP3 MLOAD DUP5 DUP2 MSTORE SWAP2 SWAP3 SWAP1 SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1363 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1347 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1375 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x13BB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x133D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x898 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1402 DUP4 PUSH2 0x13C2 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1422 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x13BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1447 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1450 DUP5 PUSH2 0x13C2 JUMP JUMPDEST SWAP3 POP PUSH2 0x145E PUSH1 0x20 DUP6 ADD PUSH2 0x13C2 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1480 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13BB DUP3 PUSH2 0x13C2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x149B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x14BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14C6 DUP9 PUSH2 0x13C2 JUMP JUMPDEST SWAP7 POP PUSH2 0x14D4 PUSH1 0x20 DUP10 ADD PUSH2 0x13C2 JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x14F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 PUSH1 0xA0 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0xC0 SWAP1 SWAP4 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1528 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1531 DUP4 PUSH2 0x13C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x153F PUSH1 0x20 DUP5 ADD PUSH2 0x13C2 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x155C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1596 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x15D6 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x2062616C616E636545524332303A207472616E73 PUSH7 0x657220616D6F75 PUSH15 0x74206578636565647320616C6C6F77 PUSH2 0x6E63 PUSH6 0x45524332303A KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x7358221220169A 0xBE 0xEA 0x25 PUSH11 0x742A5E4C40A8E2F1FCC369 SWAP16 0xE4 DELEGATECALL 0xE7 ISZERO MUL 0xE9 0x2A EXTCODEHASH DUP6 0x2E SWAP10 0xEF 0xE0 0x26 PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ","sourceMap":"402:3029:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2123:75:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4029:156;;;;;;:::i;:::-;;:::i;:::-;;;1400:14:12;;1393:22;1375:41;;1363:2;1348:18;4029:156:2;1235:187:12;3102:92:2;3177:12;;3102:92;;;1573:25:12;;;1561:2;1546:18;3102:92:2;1427:177:12;3267:80:11;;;;;;:::i;:::-;;:::i;:::-;;4619:343:2;;;;;;:::i;:::-;;:::i;663:141:11:-;;709:95;663:141;;2975:75:2;3036:9;;2975:75;;3036:9;;;;2544:36:12;;2532:2;2517:18;2975:75:2;2402:184:12;904:31:11;;;;;;5331:205:2;;;;;;:::i;:::-;;:::i;3020:146:11:-;;;;;;:::i;:::-;;:::i;3351:78::-;3414:10;;;;3351:78;;3244:111:2;;;;;;:::i;:::-;3332:18;;3310:7;3332:18;;;;;;;;;;;;3244:111;1601:135:4;;;:::i;464:50:11:-;;504:10;;;;;;;;;;;;;;;;;464:50;;3170:93;;;;;;:::i;:::-;3244:14;;3222:7;3244:14;;;:7;:14;;;;;;;3170:93;1018:71:4;1078:6;;;;;;;1018:71;;3181:42:12;3169:55;;;3151:74;;3139:2;3124:18;1018:71:4;3005:226:12;2301:79:2;;;:::i;2658:134:11:-;;;;;;:::i;:::-;;:::i;5993:316:2:-;;;;;;:::i;:::-;;:::i;3540:162::-;;;;;;:::i;:::-;;:::i;1760:729:11:-;;;;;;:::i;:::-;;:::i;3752:155:2:-;;;;;;:::i;:::-;3875:18;;;;3853:7;3875:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3752:155;1875:226:4;;;;;;:::i;:::-;;:::i;2123:75:2:-;2160:13;2188:5;2181:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2123:75;:::o;4029:156::-;4112:4;4124:39;678:10:1;4147:7:2;4156:6;4124:8;:39::i;:::-;-1:-1:-1;4176:4:2;4029:156;;;;;:::o;3267:80:11:-;1204:6:4;;:22;:6;;;;;678:10:1;1204:22:4;1196:67;;;;;;;5028:2:12;1196:67:4;;;5010:21:12;;;5047:18;;;5040:30;5106:34;5086:18;;;5079:62;5158:18;;1196:67:4;;;;;;;;;3324:10:11::1;:18:::0;;;::::1;::::0;::::1;;::::0;;;::::1;::::0;;3267:80::o;4619:343:2:-;4741:4;4753:36;4763:6;4771:9;4782:6;4753:9;:36::i;:::-;4795:145;4811:6;678:10:1;4845:89:2;4883:6;4845:89;;;;;;;;;;;;;;;;;:19;;;;;;;:11;:19;;;;;;;;678:10:1;4845:33:2;;;;;;;;;;:37;:89::i;:::-;4795:8;:145::i;:::-;-1:-1:-1;4953:4:2;4619:343;;;;;:::o;5331:205::-;678:10:1;5419:4:2;5463:25;;;:11;:25;;;;;;;;;:34;;;;;;;;;;5419:4;;5431:83;;5454:7;;5463:50;;5502:10;5463:38;:50::i;3020:146:11:-;1121:10;;3111:4;;1121:10;;:18;;:10;:18;1117:107;;;1078:6:4;;1157:23:11;1078:6:4;;;;;678:10:1;1157:23:11;1149:68;;;;;;;5028:2:12;1149:68:11;;;5010:21:12;;;5047:18;;;5040:30;5106:34;5086:18;;;5079:62;5158:18;;1149:68:11;4826:356:12;1149:68:11;3123:21:::1;3129:7;3138:5;3123;:21::i;1601:135:4:-:0;1204:6;;:22;:6;;;;;678:10:1;1204:22:4;1196:67;;;;;;;5028:2:12;1196:67:4;;;5010:21:12;;;5047:18;;;5040:30;5106:34;5086:18;;;5079:62;5158:18;;1196:67:4;4826:356:12;1196:67:4;1687:6:::1;::::0;1666:40:::1;::::0;1703:1:::1;::::0;1687:6:::1;::::0;::::1;1666:40;1687:6;::::0;1666:40:::1;::::0;1703:1;;1666:40:::1;1712:6;:19:::0;;;::::1;::::0;;1601:135::o;2301:79:2:-;2340:13;2368:7;2361:14;;;;;:::i;2658:134:11:-;1121:10;;2732:4;;1121:10;;:18;;:10;:18;1117:107;;;1078:6:4;;1157:23:11;1078:6:4;;;;;678:10:1;1157:23:11;1149:68;;;;;;;5028:2:12;1149:68:11;;;5010:21:12;;;5047:18;;;5040:30;5106:34;5086:18;;;5079:62;5158:18;;1149:68:11;4826:356:12;1149:68:11;2744:26:::1;678:10:1::0;2764:5:11::1;2744;:26::i;:::-;-1:-1:-1::0;2783:4:11::1;1229:1;2658:134:::0;;;:::o;5993:316:2:-;6098:4;6110:177;678:10:1;6146:7:2;6161:120;6209:15;6161:120;;;;;;;;;;;;;;;;;678:10:1;6161:25:2;;;;:11;:25;;;;;;;;;:34;;;;;;;;;;;;:38;:120::i;3540:162::-;3626:4;3638:42;678:10:1;3662:9:2;3673:6;3638:9;:42::i;1760:729:11:-;1936:19;;;1928:45;;;;;;;5389:2:12;1928:45:11;;;5371:21:12;5428:2;5408:18;;;5401:30;5467:15;5447:18;;;5440:43;5500:18;;1928:45:11;5187:337:12;1928:45:11;2037:8;2018:15;:27;;2010:58;;;;;;;5731:2:12;2010:58:11;;;5713:21:12;5770:2;5750:18;;;5743:30;5809:20;5789:18;;;5782:48;5847:18;;2010:58:11;5529:342:12;2010:58:11;2102:14;;;;2074:25;2102:14;;;:7;:14;;;;;;;;;2202:16;;2238:79;;709:95;2238:79;;;6163:25:12;6265:18;;;6258:43;;;;6337:15;;;6317:18;;;6310:43;6369:18;;;6362:34;;;6412:19;;;6405:35;;;6456:19;;;;6449:35;;;2238:79:11;;;;;;;;;;6135:19:12;;;2238:79:11;;;2228:90;;;;;;;6765:66:12;2156:170:11;;;6753:79:12;6848:11;;;6841:27;;;;6884:12;;;6877:28;;;;2074:25:11;6921:12:12;;2156:170:11;;;;;;;;;;;;;2139:193;;2156:170;2139:193;;;;2355:26;;;;;;;;;7171:25:12;;;7244:4;7232:17;;7212:18;;;7205:45;;;;7266:18;;;7259:34;;;7309:18;;;7302:34;;;2139:193:11;-1:-1:-1;2355:26:11;;7143:19:12;;2355:26:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2346:35;;:5;:35;;;2338:65;;;;;;;7549:2:12;2338:65:11;;;7531:21:12;7588:2;7568:18;;;7561:30;7627:19;7607:18;;;7600:47;7664:18;;2338:65:11;7347:341:12;2338:65:11;2426:21;:17;2446:1;2426:21;:::i;:::-;2409:14;;;;;;;:7;:14;;;;;:38;2453:31;2417:5;2469:7;2478:5;2453:8;:31::i;:::-;1922:567;;1760:729;;;;;;;:::o;1875:226:4:-;1204:6;;:22;:6;;;;;678:10:1;1204:22:4;1196:67;;;;;;;5028:2:12;1196:67:4;;;5010:21:12;;;5047:18;;;5040:30;5106:34;5086:18;;;5079:62;5158:18;;1196:67:4;4826:356:12;1196:67:4;1959:22:::1;::::0;::::1;1951:73;;;::::0;::::1;::::0;;8182:2:12;1951:73:4::1;::::0;::::1;8164:21:12::0;8221:2;8201:18;;;8194:30;8260:34;8240:18;;;8233:62;8331:8;8311:18;;;8304:36;8357:19;;1951:73:4::1;7980:402:12::0;1951:73:4::1;2056:6;::::0;2035:38:::1;::::0;::::1;::::0;;::::1;::::0;2056:6:::1;::::0;::::1;;::::0;2035:38:::1;::::0;;;::::1;2079:6;:17:::0;;::::1;::::0;;::::1;;;::::0;;;::::1;::::0;;;::::1;::::0;;1875:226::o;8935:322:2:-;9032:19;;;9024:68;;;;;;;8589:2:12;9024:68:2;;;8571:21:12;8628:2;8608:18;;;8601:30;8667:34;8647:18;;;8640:62;8738:6;8718:18;;;8711:34;8762:19;;9024:68:2;8387:400:12;9024:68:2;9106:21;;;9098:68;;;;;;;8994:2:12;9098:68:2;;;8976:21:12;9033:2;9013:18;;;9006:30;9072:34;9052:18;;;9045:62;9143:4;9123:18;;;9116:32;9165:19;;9098:68:2;8792:398:12;9098:68:2;9173:18;;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;9220:32;;1573:25:12;;;9220:32:2;;1546:18:12;9220:32:2;;;;;;;;8935:322;;;:::o;6753:504::-;6854:20;;;6846:70;;;;;;;9397:2:12;6846:70:2;;;9379:21:12;9436:2;9416:18;;;9409:30;9475:34;9455:18;;;9448:62;9546:7;9526:18;;;9519:35;9571:19;;6846:70:2;9195:401:12;6846:70:2;6930:23;;;6922:71;;;;;;;9803:2:12;6922:71:2;;;9785:21:12;9842:2;9822:18;;;9815:30;9881:34;9861:18;;;9854:62;9952:5;9932:18;;;9925:33;9975:19;;6922:71:2;9601:399:12;6922:71:2;7074;7096:6;7074:71;;;;;;;;;;;;;;;;;:17;;;:9;:17;;;;;;;;;;;;:71;:21;:71::i;:::-;7054:17;;;;:9;:17;;;;;;;;;;;:91;;;;7174:20;;;;;;;:32;;7199:6;7174:24;:32::i;:::-;7151:20;;;;:9;:20;;;;;;;;;;;;:55;;;;7217:35;1573:25:12;;;7151:20:2;;7217:35;;;;;;1546:18:12;7217:35:2;1427:177:12;1011:161:5;1140:5;;;1153:7;1135:16;;;;1127:34;;;;;;;;;;;;;:::i;:::-;;1011:161;;;;;:::o;410:129::-;516:5;;;511:16;;;;503:25;;;;;7507:348:2;7586:21;;;7578:65;;;;;;;10207:2:12;7578:65:2;;;10189:21:12;10246:2;10226:18;;;10219:30;10285:33;10265:18;;;10258:61;10336:18;;7578:65:2;10005:355:12;7578:65:2;7721:12;;:24;;7738:6;7721:16;:24::i;:::-;7706:12;:39;7772:18;;;:9;:18;;;;;;;;;;;:30;;7795:6;7772:22;:30::i;:::-;7751:18;;;:9;:18;;;;;;;;;;;:51;;;;7813:37;;1573:25:12;;;7751:18:2;;:9;;7813:37;;1546:18:12;7813:37:2;;;;;;;7507:348;;:::o;14:531:12:-;56:3;94:5;88:12;121:6;116:3;109:19;146:1;156:162;170:6;167:1;164:13;156:162;;;232:4;288:13;;;284:22;;278:29;260:11;;;256:20;;249:59;185:12;156:162;;;336:6;333:1;330:13;327:87;;;402:1;395:4;386:6;381:3;377:16;373:27;366:38;327:87;-1:-1:-1;459:2:12;447:15;464:66;443:88;434:98;;;;534:4;430:109;;14:531;-1:-1:-1;;14:531:12:o;550:220::-;699:2;688:9;681:21;662:4;719:45;760:2;749:9;745:18;737:6;719:45;:::i;:::-;711:53;550:220;-1:-1:-1;;;550:220:12:o;775:196::-;843:20;;903:42;892:54;;882:65;;872:93;;961:1;958;951:12;976:254;1044:6;1052;1105:2;1093:9;1084:7;1080:23;1076:32;1073:52;;;1121:1;1118;1111:12;1073:52;1144:29;1163:9;1144:29;:::i;:::-;1134:39;1220:2;1205:18;;;;1192:32;;-1:-1:-1;;;976:254:12:o;1609:273::-;1665:6;1718:2;1706:9;1697:7;1693:23;1689:32;1686:52;;;1734:1;1731;1724:12;1686:52;1773:9;1760:23;1826:5;1819:13;1812:21;1805:5;1802:32;1792:60;;1848:1;1845;1838:12;1887:328;1964:6;1972;1980;2033:2;2021:9;2012:7;2008:23;2004:32;2001:52;;;2049:1;2046;2039:12;2001:52;2072:29;2091:9;2072:29;:::i;:::-;2062:39;;2120:38;2154:2;2143:9;2139:18;2120:38;:::i;:::-;2110:48;;2205:2;2194:9;2190:18;2177:32;2167:42;;1887:328;;;;;:::o;2591:186::-;2650:6;2703:2;2691:9;2682:7;2678:23;2674:32;2671:52;;;2719:1;2716;2709:12;2671:52;2742:29;2761:9;2742:29;:::i;3236:180::-;3295:6;3348:2;3336:9;3327:7;3323:23;3319:32;3316:52;;;3364:1;3361;3354:12;3316:52;-1:-1:-1;3387:23:12;;3236:180;-1:-1:-1;3236:180:12:o;3421:693::-;3532:6;3540;3548;3556;3564;3572;3580;3633:3;3621:9;3612:7;3608:23;3604:33;3601:53;;;3650:1;3647;3640:12;3601:53;3673:29;3692:9;3673:29;:::i;:::-;3663:39;;3721:38;3755:2;3744:9;3740:18;3721:38;:::i;:::-;3711:48;;3806:2;3795:9;3791:18;3778:32;3768:42;;3857:2;3846:9;3842:18;3829:32;3819:42;;3911:3;3900:9;3896:19;3883:33;3956:4;3949:5;3945:16;3938:5;3935:27;3925:55;;3976:1;3973;3966:12;3925:55;3421:693;;;;-1:-1:-1;3421:693:12;;;;3999:5;4051:3;4036:19;;4023:33;;-1:-1:-1;4103:3:12;4088:19;;;4075:33;;3421:693;-1:-1:-1;;3421:693:12:o;4119:260::-;4187:6;4195;4248:2;4236:9;4227:7;4223:23;4219:32;4216:52;;;4264:1;4261;4254:12;4216:52;4287:29;4306:9;4287:29;:::i;:::-;4277:39;;4335:38;4369:2;4358:9;4354:18;4335:38;:::i;:::-;4325:48;;4119:260;;;;;:::o;4384:437::-;4463:1;4459:12;;;;4506;;;4527:61;;4581:4;4573:6;4569:17;4559:27;;4527:61;4634:2;4626:6;4623:14;4603:18;4600:38;4597:218;;;4671:77;4668:1;4661:88;4772:4;4769:1;4762:15;4800:4;4797:1;4790:15;4597:218;;4384:437;;;:::o;7693:282::-;7733:3;7764:1;7760:6;7757:1;7754:13;7751:193;;;7800:77;7797:1;7790:88;7901:4;7898:1;7891:15;7929:4;7926:1;7919:15;7751:193;-1:-1:-1;7960:9:12;;7693:282::o"},"gasEstimates":{"creation":{"codeDepositCost":"1152800","executionCost":"infinite","totalCost":"infinite"},"external":{"DOMAIN_SEPARATOR()":"2385","EIP712_REVISION()":"infinite","PERMIT_TYPEHASH()":"241","allowance(address,address)":"infinite","approve(address,uint256)":"24619","balanceOf(address)":"2562","decimals()":"2357","decreaseAllowance(address,uint256)":"infinite","increaseAllowance(address,uint256)":"infinite","isProtected()":"2393","mint(address,uint256)":"infinite","mint(uint256)":"infinite","name()":"infinite","nonces(address)":"2558","owner()":"2373","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"infinite","renounceOwnership()":"30216","setProtected(bool)":"26701","symbol()":"infinite","totalSupply()":"2327","transfer(address,uint256)":"infinite","transferFrom(address,address,uint256)":"infinite","transferOwnership(address)":"30449"}},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","EIP712_REVISION()":"78160376","PERMIT_TYPEHASH()":"30adf81f","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","isProtected()":"5300f82b","mint(address,uint256)":"40c10f19","mint(uint256)":"a0712d68","name()":"06fdde03","nonces(address)":"7ecebe00","owner()":"8da5cb5b","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","renounceOwnership()":"715018a6","setProtected(bool)":"1c02bc31","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EIP712_REVISION\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isProtected\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"state\",\"type\":\"bool\"}],\"name\":\"setProtected\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC20 minting logic\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"mint(address,uint256)\":{\"details\":\"Function to mint tokens to address\",\"params\":{\"account\":\"The account to mint tokens.\",\"value\":\"The amount of tokens to mint.\"},\"returns\":{\"_0\":\"A boolean that indicates if the operation was successful.\"}},\"mint(uint256)\":{\"details\":\"Function to mint tokens\",\"params\":{\"value\":\"The amount of tokens to mint.\"},\"returns\":{\"_0\":\"A boolean that indicates if the operation was successful.\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"implements the permit function as for https://github.com/ethereum/EIPs/blob/8a34d644aacf0f9f8f00815307fd7dd5da07655f/EIPS/eip-2612.md\",\"params\":{\"deadline\":\"The deadline timestamp, type(uint256).max for max deadline\",\"owner\":\"The owner of the funds\",\"r\":\"Signature param\",\"s\":\"Signature param\",\"spender\":\"The spender\",\"v\":\"Signature param\",\"value\":\"The amount\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"TestnetERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Allow passing a signed message to approve spending\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mocks/testnet-helpers/TestnetERC20.sol\":\"TestnetERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":25000},\"remappings\":[]},\"sources\":{\"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Address.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n  /**\\n   * @dev Returns true if `account` is a contract.\\n   *\\n   * [IMPORTANT]\\n   * ====\\n   * It is unsafe to assume that an address for which this function returns\\n   * false is an externally-owned account (EOA) and not a contract.\\n   *\\n   * Among others, `isContract` will return false for the following\\n   * types of addresses:\\n   *\\n   *  - an externally-owned account\\n   *  - a contract in construction\\n   *  - an address where a contract will be created\\n   *  - an address where a contract lived, but was destroyed\\n   * ====\\n   */\\n  function isContract(address account) internal view returns (bool) {\\n    // This method relies on extcodesize, which returns 0 for contracts in\\n    // construction, since the code is only stored at the end of the\\n    // constructor execution.\\n\\n    uint256 size;\\n    assembly {\\n      size := extcodesize(account)\\n    }\\n    return size > 0;\\n  }\\n\\n  /**\\n   * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n   * `recipient`, forwarding all available gas and reverting on errors.\\n   *\\n   * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n   * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n   * imposed by `transfer`, making them unable to receive funds via\\n   * `transfer`. {sendValue} removes this limitation.\\n   *\\n   * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n   *\\n   * IMPORTANT: because control is transferred to `recipient`, care must be\\n   * taken to not create reentrancy vulnerabilities. Consider using\\n   * {ReentrancyGuard} or the\\n   * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n   */\\n  function sendValue(address payable recipient, uint256 amount) internal {\\n    require(address(this).balance >= amount, 'Address: insufficient balance');\\n\\n    (bool success, ) = recipient.call{value: amount}('');\\n    require(success, 'Address: unable to send value, recipient may have reverted');\\n  }\\n\\n  /**\\n   * @dev Performs a Solidity function call using a low level `call`. A\\n   * plain `call` is an unsafe replacement for a function call: use this\\n   * function instead.\\n   *\\n   * If `target` reverts with a revert reason, it is bubbled up by this\\n   * function (like regular Solidity function calls).\\n   *\\n   * Returns the raw returned data. To convert to the expected return value,\\n   * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n   *\\n   * Requirements:\\n   *\\n   * - `target` must be a contract.\\n   * - calling `target` with `data` must not revert.\\n   *\\n   * _Available since v3.1._\\n   */\\n  function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n    return functionCall(target, data, 'Address: low-level call failed');\\n  }\\n\\n  /**\\n   * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n   * `errorMessage` as a fallback revert reason when `target` reverts.\\n   *\\n   * _Available since v3.1._\\n   */\\n  function functionCall(\\n    address target,\\n    bytes memory data,\\n    string memory errorMessage\\n  ) internal returns (bytes memory) {\\n    return functionCallWithValue(target, data, 0, errorMessage);\\n  }\\n\\n  /**\\n   * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n   * but also transferring `value` wei to `target`.\\n   *\\n   * Requirements:\\n   *\\n   * - the calling contract must have an ETH balance of at least `value`.\\n   * - the called Solidity function must be `payable`.\\n   *\\n   * _Available since v3.1._\\n   */\\n  function functionCallWithValue(\\n    address target,\\n    bytes memory data,\\n    uint256 value\\n  ) internal returns (bytes memory) {\\n    return functionCallWithValue(target, data, value, 'Address: low-level call with value failed');\\n  }\\n\\n  /**\\n   * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n   * with `errorMessage` as a fallback revert reason when `target` reverts.\\n   *\\n   * _Available since v3.1._\\n   */\\n  function functionCallWithValue(\\n    address target,\\n    bytes memory data,\\n    uint256 value,\\n    string memory errorMessage\\n  ) internal returns (bytes memory) {\\n    require(address(this).balance >= value, 'Address: insufficient balance for call');\\n    require(isContract(target), 'Address: call to non-contract');\\n\\n    (bool success, bytes memory returndata) = target.call{value: value}(data);\\n    return verifyCallResult(success, returndata, errorMessage);\\n  }\\n\\n  /**\\n   * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n   * but performing a static call.\\n   *\\n   * _Available since v3.3._\\n   */\\n  function functionStaticCall(\\n    address target,\\n    bytes memory data\\n  ) internal view returns (bytes memory) {\\n    return functionStaticCall(target, data, 'Address: low-level static call failed');\\n  }\\n\\n  /**\\n   * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n   * but performing a static call.\\n   *\\n   * _Available since v3.3._\\n   */\\n  function functionStaticCall(\\n    address target,\\n    bytes memory data,\\n    string memory errorMessage\\n  ) internal view returns (bytes memory) {\\n    require(isContract(target), 'Address: static call to non-contract');\\n\\n    (bool success, bytes memory returndata) = target.staticcall(data);\\n    return verifyCallResult(success, returndata, errorMessage);\\n  }\\n\\n  /**\\n   * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n   * but performing a delegate call.\\n   *\\n   * _Available since v3.4._\\n   */\\n  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n    return functionDelegateCall(target, data, 'Address: low-level delegate call failed');\\n  }\\n\\n  /**\\n   * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n   * but performing a delegate call.\\n   *\\n   * _Available since v3.4._\\n   */\\n  function functionDelegateCall(\\n    address target,\\n    bytes memory data,\\n    string memory errorMessage\\n  ) internal returns (bytes memory) {\\n    require(isContract(target), 'Address: delegate call to non-contract');\\n\\n    (bool success, bytes memory returndata) = target.delegatecall(data);\\n    return verifyCallResult(success, returndata, errorMessage);\\n  }\\n\\n  /**\\n   * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n   * revert reason using the provided one.\\n   *\\n   * _Available since v4.3._\\n   */\\n  function verifyCallResult(\\n    bool success,\\n    bytes memory returndata,\\n    string memory errorMessage\\n  ) internal pure returns (bytes memory) {\\n    if (success) {\\n      return returndata;\\n    } else {\\n      // Look for revert reason and bubble it up if present\\n      if (returndata.length > 0) {\\n        // The easiest way to bubble the revert reason is using memory via assembly\\n\\n        assembly {\\n          let returndata_size := mload(returndata)\\n          revert(add(32, returndata), returndata_size)\\n        }\\n      } else {\\n        revert(errorMessage);\\n      }\\n    }\\n  }\\n}\\n\",\"keccak256\":\"0x4ce20476966f73ba3c0aeb85b602b6ecc4e715f5bd9524d1c6286819282c76c5\",\"license\":\"MIT\"},\"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n  function _msgSender() internal view virtual returns (address payable) {\\n    return payable(msg.sender);\\n  }\\n\\n  function _msgData() internal view virtual returns (bytes memory) {\\n    this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n    return msg.data;\\n  }\\n}\\n\",\"keccak256\":\"0xc0df5ebb2c3d8b4509464c40a88cc51e5e5f5e4a26fafc909330e9bb2658f641\",\"license\":\"MIT\"},\"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport './Context.sol';\\nimport './IERC20.sol';\\nimport './SafeMath.sol';\\nimport './Address.sol';\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin guidelines: functions revert instead\\n * of returning `false` on failure. This behavior is nonetheless conventional\\n * and does not conflict with the expectations of ERC20 applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20 {\\n  using SafeMath for uint256;\\n  using Address for address;\\n\\n  mapping(address => uint256) private _balances;\\n\\n  mapping(address => mapping(address => uint256)) private _allowances;\\n\\n  uint256 private _totalSupply;\\n\\n  string private _name;\\n  string private _symbol;\\n  uint8 private _decimals;\\n\\n  /**\\n   * @dev Sets the values for {name} and {symbol}, initializes {decimals} with\\n   * a default value of 18.\\n   *\\n   * To select a different value for {decimals}, use {_setupDecimals}.\\n   *\\n   * All three of these values are immutable: they can only be set once during\\n   * construction.\\n   */\\n  constructor(string memory name, string memory symbol) {\\n    _name = name;\\n    _symbol = symbol;\\n    _decimals = 18;\\n  }\\n\\n  /**\\n   * @dev Returns the name of the token.\\n   */\\n  function name() public view returns (string memory) {\\n    return _name;\\n  }\\n\\n  /**\\n   * @dev Returns the symbol of the token, usually a shorter version of the\\n   * name.\\n   */\\n  function symbol() public view returns (string memory) {\\n    return _symbol;\\n  }\\n\\n  /**\\n   * @dev Returns the number of decimals used to get its user representation.\\n   * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n   * be displayed to a user as `5,05` (`505 / 10 ** 2`).\\n   *\\n   * Tokens usually opt for a value of 18, imitating the relationship between\\n   * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\\n   * called.\\n   *\\n   * NOTE: This information is only used for _display_ purposes: it in\\n   * no way affects any of the arithmetic of the contract, including\\n   * {IERC20-balanceOf} and {IERC20-transfer}.\\n   */\\n  function decimals() public view returns (uint8) {\\n    return _decimals;\\n  }\\n\\n  /**\\n   * @dev See {IERC20-totalSupply}.\\n   */\\n  function totalSupply() public view override returns (uint256) {\\n    return _totalSupply;\\n  }\\n\\n  /**\\n   * @dev See {IERC20-balanceOf}.\\n   */\\n  function balanceOf(address account) public view override returns (uint256) {\\n    return _balances[account];\\n  }\\n\\n  /**\\n   * @dev See {IERC20-transfer}.\\n   *\\n   * Requirements:\\n   *\\n   * - `recipient` cannot be the zero address.\\n   * - the caller must have a balance of at least `amount`.\\n   */\\n  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\\n    _transfer(_msgSender(), recipient, amount);\\n    return true;\\n  }\\n\\n  /**\\n   * @dev See {IERC20-allowance}.\\n   */\\n  function allowance(\\n    address owner,\\n    address spender\\n  ) public view virtual override returns (uint256) {\\n    return _allowances[owner][spender];\\n  }\\n\\n  /**\\n   * @dev See {IERC20-approve}.\\n   *\\n   * Requirements:\\n   *\\n   * - `spender` cannot be the zero address.\\n   */\\n  function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n    _approve(_msgSender(), spender, amount);\\n    return true;\\n  }\\n\\n  /**\\n   * @dev See {IERC20-transferFrom}.\\n   *\\n   * Emits an {Approval} event indicating the updated allowance. This is not\\n   * required by the EIP. See the note at the beginning of {ERC20};\\n   *\\n   * Requirements:\\n   * - `sender` and `recipient` cannot be the zero address.\\n   * - `sender` must have a balance of at least `amount`.\\n   * - the caller must have allowance for ``sender``'s tokens of at least\\n   * `amount`.\\n   */\\n  function transferFrom(\\n    address sender,\\n    address recipient,\\n    uint256 amount\\n  ) public virtual override returns (bool) {\\n    _transfer(sender, recipient, amount);\\n    _approve(\\n      sender,\\n      _msgSender(),\\n      _allowances[sender][_msgSender()].sub(amount, 'ERC20: transfer amount exceeds allowance')\\n    );\\n    return true;\\n  }\\n\\n  /**\\n   * @dev Atomically increases the allowance granted to `spender` by the caller.\\n   *\\n   * This is an alternative to {approve} that can be used as a mitigation for\\n   * problems described in {IERC20-approve}.\\n   *\\n   * Emits an {Approval} event indicating the updated allowance.\\n   *\\n   * Requirements:\\n   *\\n   * - `spender` cannot be the zero address.\\n   */\\n  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\\n    return true;\\n  }\\n\\n  /**\\n   * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n   *\\n   * This is an alternative to {approve} that can be used as a mitigation for\\n   * problems described in {IERC20-approve}.\\n   *\\n   * Emits an {Approval} event indicating the updated allowance.\\n   *\\n   * Requirements:\\n   *\\n   * - `spender` cannot be the zero address.\\n   * - `spender` must have allowance for the caller of at least\\n   * `subtractedValue`.\\n   */\\n  function decreaseAllowance(\\n    address spender,\\n    uint256 subtractedValue\\n  ) public virtual returns (bool) {\\n    _approve(\\n      _msgSender(),\\n      spender,\\n      _allowances[_msgSender()][spender].sub(\\n        subtractedValue,\\n        'ERC20: decreased allowance below zero'\\n      )\\n    );\\n    return true;\\n  }\\n\\n  /**\\n   * @dev Moves tokens `amount` from `sender` to `recipient`.\\n   *\\n   * This is internal function is equivalent to {transfer}, and can be used to\\n   * e.g. implement automatic token fees, slashing mechanisms, etc.\\n   *\\n   * Emits a {Transfer} event.\\n   *\\n   * Requirements:\\n   *\\n   * - `sender` cannot be the zero address.\\n   * - `recipient` cannot be the zero address.\\n   * - `sender` must have a balance of at least `amount`.\\n   */\\n  function _transfer(address sender, address recipient, uint256 amount) internal virtual {\\n    require(sender != address(0), 'ERC20: transfer from the zero address');\\n    require(recipient != address(0), 'ERC20: transfer to the zero address');\\n\\n    _beforeTokenTransfer(sender, recipient, amount);\\n\\n    _balances[sender] = _balances[sender].sub(amount, 'ERC20: transfer amount exceeds balance');\\n    _balances[recipient] = _balances[recipient].add(amount);\\n    emit Transfer(sender, recipient, amount);\\n  }\\n\\n  /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n   * the total supply.\\n   *\\n   * Emits a {Transfer} event with `from` set to the zero address.\\n   *\\n   * Requirements\\n   *\\n   * - `to` cannot be the zero address.\\n   */\\n  function _mint(address account, uint256 amount) internal virtual {\\n    require(account != address(0), 'ERC20: mint to the zero address');\\n\\n    _beforeTokenTransfer(address(0), account, amount);\\n\\n    _totalSupply = _totalSupply.add(amount);\\n    _balances[account] = _balances[account].add(amount);\\n    emit Transfer(address(0), account, amount);\\n  }\\n\\n  /**\\n   * @dev Destroys `amount` tokens from `account`, reducing the\\n   * total supply.\\n   *\\n   * Emits a {Transfer} event with `to` set to the zero address.\\n   *\\n   * Requirements\\n   *\\n   * - `account` cannot be the zero address.\\n   * - `account` must have at least `amount` tokens.\\n   */\\n  function _burn(address account, uint256 amount) internal virtual {\\n    require(account != address(0), 'ERC20: burn from the zero address');\\n\\n    _beforeTokenTransfer(account, address(0), amount);\\n\\n    _balances[account] = _balances[account].sub(amount, 'ERC20: burn amount exceeds balance');\\n    _totalSupply = _totalSupply.sub(amount);\\n    emit Transfer(account, address(0), amount);\\n  }\\n\\n  /**\\n   * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\\n   *\\n   * This is internal function is equivalent to `approve`, and can be used to\\n   * e.g. set automatic allowances for certain subsystems, etc.\\n   *\\n   * Emits an {Approval} event.\\n   *\\n   * Requirements:\\n   *\\n   * - `owner` cannot be the zero address.\\n   * - `spender` cannot be the zero address.\\n   */\\n  function _approve(address owner, address spender, uint256 amount) internal virtual {\\n    require(owner != address(0), 'ERC20: approve from the zero address');\\n    require(spender != address(0), 'ERC20: approve to the zero address');\\n\\n    _allowances[owner][spender] = amount;\\n    emit Approval(owner, spender, amount);\\n  }\\n\\n  /**\\n   * @dev Sets {decimals} to a value other than the default one of 18.\\n   *\\n   * WARNING: This function should only be called from the constructor. Most\\n   * applications that interact with token contracts will not expect\\n   * {decimals} to ever change, and may work incorrectly if it does.\\n   */\\n  function _setupDecimals(uint8 decimals_) internal {\\n    _decimals = decimals_;\\n  }\\n\\n  /**\\n   * @dev Hook that is called before any transfer of tokens. This includes\\n   * minting and burning.\\n   *\\n   * Calling conditions:\\n   *\\n   * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n   * will be to transferred to `to`.\\n   * - when `from` is zero, `amount` tokens will be minted for `to`.\\n   * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n   * - `from` and `to` are never both zero.\\n   *\\n   * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n   */\\n  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n}\\n\",\"keccak256\":\"0x84e6a151684cce31e66c850677f7e9455d694e050e409e5ded05fb5528c6c7e4\",\"license\":\"MIT\"},\"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n  /**\\n   * @dev Returns the amount of tokens in existence.\\n   */\\n  function totalSupply() external view returns (uint256);\\n\\n  /**\\n   * @dev Returns the amount of tokens owned by `account`.\\n   */\\n  function balanceOf(address account) external view returns (uint256);\\n\\n  /**\\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * Emits a {Transfer} event.\\n   */\\n  function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n  /**\\n   * @dev Returns the remaining number of tokens that `spender` will be\\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n   * zero by default.\\n   *\\n   * This value changes when {approve} or {transferFrom} are called.\\n   */\\n  function allowance(address owner, address spender) external view returns (uint256);\\n\\n  /**\\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n   * that someone may use both the old and the new allowance by unfortunate\\n   * transaction ordering. One possible solution to mitigate this race\\n   * condition is to first reduce the spender's allowance to 0 and set the\\n   * desired value afterwards:\\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n   *\\n   * Emits an {Approval} event.\\n   */\\n  function approve(address spender, uint256 amount) external returns (bool);\\n\\n  /**\\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n   * allowance mechanism. `amount` is then deducted from the caller's\\n   * allowance.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * Emits a {Transfer} event.\\n   */\\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n  /**\\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n   * another (`to`).\\n   *\\n   * Note that `value` may be zero.\\n   */\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n  /**\\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n   * a call to {approve}. `value` is the new allowance.\\n   */\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xf57d62241e553696a1324d225663ba2e1a51db0a51ca236d0c1b009d89b6284c\",\"license\":\"AGPL-3.0\"},\"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport './Context.sol';\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\ncontract Ownable is Context {\\n  address private _owner;\\n\\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n  /**\\n   * @dev Initializes the contract setting the deployer as the initial owner.\\n   */\\n  constructor() {\\n    address msgSender = _msgSender();\\n    _owner = msgSender;\\n    emit OwnershipTransferred(address(0), msgSender);\\n  }\\n\\n  /**\\n   * @dev Returns the address of the current owner.\\n   */\\n  function owner() public view returns (address) {\\n    return _owner;\\n  }\\n\\n  /**\\n   * @dev Throws if called by any account other than the owner.\\n   */\\n  modifier onlyOwner() {\\n    require(_owner == _msgSender(), 'Ownable: caller is not the owner');\\n    _;\\n  }\\n\\n  /**\\n   * @dev Leaves the contract without owner. It will not be possible to call\\n   * `onlyOwner` functions anymore. Can only be called by the current owner.\\n   *\\n   * NOTE: Renouncing ownership will leave the contract without an owner,\\n   * thereby removing any functionality that is only available to the owner.\\n   */\\n  function renounceOwnership() public virtual onlyOwner {\\n    emit OwnershipTransferred(_owner, address(0));\\n    _owner = address(0);\\n  }\\n\\n  /**\\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n   * Can only be called by the current owner.\\n   */\\n  function transferOwnership(address newOwner) public virtual onlyOwner {\\n    require(newOwner != address(0), 'Ownable: new owner is the zero address');\\n    emit OwnershipTransferred(_owner, newOwner);\\n    _owner = newOwner;\\n  }\\n}\\n\",\"keccak256\":\"0x3ce185c4f579e32006f8893dbfdc1b5d878c0e2cafd1508f7ceb081698bc81f9\",\"license\":\"MIT\"},\"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity ^0.8.0;\\n\\n/// @title Optimized overflow and underflow safe math operations\\n/// @notice Contains methods for doing math operations that revert on overflow or underflow for minimal gas cost\\nlibrary SafeMath {\\n  /// @notice Returns x + y, reverts if sum overflows uint256\\n  /// @param x The augend\\n  /// @param y The addend\\n  /// @return z The sum of x and y\\n  function add(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n    unchecked {\\n      require((z = x + y) >= x);\\n    }\\n  }\\n\\n  /// @notice Returns x - y, reverts if underflows\\n  /// @param x The minuend\\n  /// @param y The subtrahend\\n  /// @return z The difference of x and y\\n  function sub(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n    unchecked {\\n      require((z = x - y) <= x);\\n    }\\n  }\\n\\n  /// @notice Returns x - y, reverts if underflows\\n  /// @param x The minuend\\n  /// @param y The subtrahend\\n  /// @param message The error msg\\n  /// @return z The difference of x and y\\n  function sub(uint256 x, uint256 y, string memory message) internal pure returns (uint256 z) {\\n    unchecked {\\n      require((z = x - y) <= x, message);\\n    }\\n  }\\n\\n  /// @notice Returns x * y, reverts if overflows\\n  /// @param x The multiplicand\\n  /// @param y The multiplier\\n  /// @return z The product of x and y\\n  function mul(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n    unchecked {\\n      require(x == 0 || (z = x * y) / x == y);\\n    }\\n  }\\n\\n  /// @notice Returns x / y, reverts if overflows - no specific check, solidity reverts on division by 0\\n  /// @param x The numerator\\n  /// @param y The denominator\\n  /// @return z The product of x and y\\n  function div(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n    return x / y;\\n  }\\n}\\n\",\"keccak256\":\"0xf1c5d8ba70a5fc3e20dbbc2aa2a2278d2535a57bc1e9abf1228ebc3068a045f0\",\"license\":\"AGPL-3.0\"},\"@aave/core-v3/contracts/interfaces/IERC20WithPermit.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity ^0.8.0;\\n\\nimport {IERC20} from '../dependencies/openzeppelin/contracts/IERC20.sol';\\n\\n/**\\n * @title IERC20WithPermit\\n * @author Aave\\n * @notice Interface for the permit function (EIP-2612)\\n */\\ninterface IERC20WithPermit is IERC20 {\\n  /**\\n   * @notice Allow passing a signed message to approve spending\\n   * @dev implements the permit function as for\\n   * https://github.com/ethereum/EIPs/blob/8a34d644aacf0f9f8f00815307fd7dd5da07655f/EIPS/eip-2612.md\\n   * @param owner The owner of the funds\\n   * @param spender The spender\\n   * @param value The amount\\n   * @param deadline The deadline timestamp, type(uint256).max for max deadline\\n   * @param v Signature param\\n   * @param s Signature param\\n   * @param r Signature param\\n   */\\n  function permit(\\n    address owner,\\n    address spender,\\n    uint256 value,\\n    uint256 deadline,\\n    uint8 v,\\n    bytes32 r,\\n    bytes32 s\\n  ) external;\\n}\\n\",\"keccak256\":\"0xfb041570f1804648f543be72cecc80ca9f65129232bacaa9247ebd11a7d9f83e\",\"license\":\"AGPL-3.0\"},\"contracts/mocks/testnet-helpers/TestnetERC20.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity ^0.8.0;\\n\\nimport {Ownable} from '@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol';\\nimport {ERC20} from '@aave/core-v3/contracts/dependencies/openzeppelin/contracts/ERC20.sol';\\nimport {IERC20WithPermit} from '@aave/core-v3/contracts/interfaces/IERC20WithPermit.sol';\\n\\n/**\\n * @title TestnetERC20\\n * @dev ERC20 minting logic\\n */\\ncontract TestnetERC20 is IERC20WithPermit, ERC20, Ownable {\\n  bytes public constant EIP712_REVISION = bytes('1');\\n  bytes32 internal constant EIP712_DOMAIN =\\n    keccak256('EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)');\\n  bytes32 public constant PERMIT_TYPEHASH =\\n    keccak256('Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)');\\n\\n  // Map of address nonces (address => nonce)\\n  mapping(address => uint256) internal _nonces;\\n\\n  bytes32 public DOMAIN_SEPARATOR;\\n\\n  bool internal _protected;\\n\\n  /**\\n   * @dev Function modifier, if _protected is enabled then msg.sender is required to be the owner\\n   */\\n  modifier onlyOwnerIfProtected() {\\n    if (_protected == true) {\\n      require(owner() == _msgSender(), 'Ownable: caller is not the owner');\\n    }\\n    _;\\n  }\\n\\n  constructor(\\n    string memory name,\\n    string memory symbol,\\n    uint8 decimals,\\n    address owner\\n  ) ERC20(name, symbol) {\\n    uint256 chainId = block.chainid;\\n\\n    DOMAIN_SEPARATOR = keccak256(\\n      abi.encode(\\n        EIP712_DOMAIN,\\n        keccak256(bytes(name)),\\n        keccak256(EIP712_REVISION),\\n        chainId,\\n        address(this)\\n      )\\n    );\\n    _setupDecimals(decimals);\\n    require(owner != address(0));\\n    transferOwnership(owner);\\n    _protected = true;\\n  }\\n\\n  /// @inheritdoc IERC20WithPermit\\n  function permit(\\n    address owner,\\n    address spender,\\n    uint256 value,\\n    uint256 deadline,\\n    uint8 v,\\n    bytes32 r,\\n    bytes32 s\\n  ) external override {\\n    require(owner != address(0), 'INVALID_OWNER');\\n    //solium-disable-next-line\\n    require(block.timestamp <= deadline, 'INVALID_EXPIRATION');\\n    uint256 currentValidNonce = _nonces[owner];\\n    bytes32 digest = keccak256(\\n      abi.encodePacked(\\n        '\\\\x19\\\\x01',\\n        DOMAIN_SEPARATOR,\\n        keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, currentValidNonce, deadline))\\n      )\\n    );\\n    require(owner == ecrecover(digest, v, r, s), 'INVALID_SIGNATURE');\\n    _nonces[owner] = currentValidNonce + 1;\\n    _approve(owner, spender, value);\\n  }\\n\\n  /**\\n   * @dev Function to mint tokens\\n   * @param value The amount of tokens to mint.\\n   * @return A boolean that indicates if the operation was successful.\\n   */\\n  function mint(uint256 value) public virtual onlyOwnerIfProtected returns (bool) {\\n    _mint(_msgSender(), value);\\n    return true;\\n  }\\n\\n  /**\\n   * @dev Function to mint tokens to address\\n   * @param account The account to mint tokens.\\n   * @param value The amount of tokens to mint.\\n   * @return A boolean that indicates if the operation was successful.\\n   */\\n  function mint(address account, uint256 value) public virtual onlyOwnerIfProtected returns (bool) {\\n    _mint(account, value);\\n    return true;\\n  }\\n\\n  function nonces(address owner) public view returns (uint256) {\\n    return _nonces[owner];\\n  }\\n\\n  function setProtected(bool state) public onlyOwner {\\n    _protected = state;\\n  }\\n\\n  function isProtected() public view returns (bool) {\\n    return _protected;\\n  }\\n}\\n\",\"keccak256\":\"0x77cf9848a42e5c8684ef832dae92f5095ab539a4cdbd58b2d60ca6586d26384e\",\"license\":\"BUSL-1.1\"}},\"version\":1}","storageLayout":{"storage":[{"astId":343,"contract":"contracts/mocks/testnet-helpers/TestnetERC20.sol:TestnetERC20","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":349,"contract":"contracts/mocks/testnet-helpers/TestnetERC20.sol:TestnetERC20","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":351,"contract":"contracts/mocks/testnet-helpers/TestnetERC20.sol:TestnetERC20","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":353,"contract":"contracts/mocks/testnet-helpers/TestnetERC20.sol:TestnetERC20","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":355,"contract":"contracts/mocks/testnet-helpers/TestnetERC20.sol:TestnetERC20","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"},{"astId":357,"contract":"contracts/mocks/testnet-helpers/TestnetERC20.sol:TestnetERC20","label":"_decimals","offset":0,"slot":"5","type":"t_uint8"},{"astId":915,"contract":"contracts/mocks/testnet-helpers/TestnetERC20.sol:TestnetERC20","label":"_owner","offset":1,"slot":"5","type":"t_address"},{"astId":1900,"contract":"contracts/mocks/testnet-helpers/TestnetERC20.sol:TestnetERC20","label":"_nonces","offset":0,"slot":"6","type":"t_mapping(t_address,t_uint256)"},{"astId":1902,"contract":"contracts/mocks/testnet-helpers/TestnetERC20.sol:TestnetERC20","label":"DOMAIN_SEPARATOR","offset":0,"slot":"7","type":"t_bytes32"},{"astId":1904,"contract":"contracts/mocks/testnet-helpers/TestnetERC20.sol:TestnetERC20","label":"_protected","offset":0,"slot":"8","type":"t_bool"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":{"notice":"Allow passing a signed message to approve spending"}},"version":1}}}}}}